<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CS课程分享(七)—编译原理</title>
    <url>/archives/80389a.html</url>
    <content><![CDATA[<h4 id="1-CS143-编译器"><a href="#1-CS143-编译器" class="headerlink" title="1.CS143-编译器"></a>1.CS143-编译器</h4><blockquote>
<ul>
<li>简介：斯坦福大学公开课，须先掌握计算机体系结构知识，配套教材为龙书《编译原理》。</li>
<li>课程时间：20小时</li>
<li>课程官网：<a href="https://web.stanford.edu/class/cs143/">CS143-编译器</a></li>
<li>中英字幕：<a href="https://space.bilibili.com/457173750/channel/collectiondetail?sid=1489136">bilibili</a></li>
</ul>
</blockquote>
<h4 id="2-南京大学-编译原理"><a href="#2-南京大学-编译原理" class="headerlink" title="2.南京大学-编译原理"></a>2.南京大学-编译原理</h4><blockquote>
<ul>
<li>简介：”蚂蚁”老师——魏恒峰2022年网课，须先掌握计算机体系结构知识，配套教材为龙书《编译原理》。</li>
<li>课程时间：28小时</li>
<li>课程官网：<a href="https://cs.nju.edu.cn/changxu/2_compiler/index.html">南京大学-编译原理</a></li>
<li>在线视频：<a href="https://www.bilibili.com/video/BV1HP411c7Yh/?spm_id_from=333.788&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>CS课程</category>
      </categories>
      <tags>
        <tag>CS课程</tag>
        <tag>编译原理</tag>
      </tags>
  </entry>
  <entry>
    <title>CS课程分享(一)—计算机科学导论</title>
    <url>/archives/68ac4695.html</url>
    <content><![CDATA[<h4 id="1-计算机科学速成课"><a href="#1-计算机科学速成课" class="headerlink" title="1.计算机科学速成课"></a>1.计算机科学速成课</h4><blockquote>
<ul>
<li>简介：快速了解计算机科学到底是什么，有哪些方向。</li>
<li>课程时间：8小时</li>
<li>课程官网：<a href="https://thecrashcourse.com/topic/computerscience/">Crash Course</a></li>
<li>中英字幕：<a href="https://www.bilibili.com/video/BV1EW411u7th/?vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
</ul>
</blockquote>
<h4 id="2-CS50-计算机科学导论"><a href="#2-CS50-计算机科学导论" class="headerlink" title="2.CS50-计算机科学导论"></a>2.CS50-计算机科学导论</h4><blockquote>
<ul>
<li>简介：北美CS五大名课之一，哈佛大学公开课，适合零基础入门。</li>
<li>课程时间：26小时</li>
<li>课程官网：<a href="https://cs50.harvard.edu/x/2023/">CS50-计算机科学导论</a></li>
<li>中英字幕：<a href="https://space.bilibili.com/526939229/video?tid=0&pn=3&keyword=&order=pubdate">bilibili</a></li>
<li>英文字幕：<a href="https://www.youtube.com/watch?v=IDDmrzzB14M&list=PLhQjrBD2T380F_inVRXMIHCqLaNUd7bN4&index=1">YouTube</a></li>
</ul>
</blockquote>
<h4 id="3-CS61A-计算机程序的构造和解释"><a href="#3-CS61A-计算机程序的构造和解释" class="headerlink" title="3.CS61A-计算机程序的构造和解释"></a>3.CS61A-计算机程序的构造和解释</h4><blockquote>
<ul>
<li>简介：北美CS五大名课之一，UCB公开课，使用Python掌握函数式编程、面向对象以及SQL等。</li>
<li>课程时间：35小时</li>
<li>课程官网：<a href="https://cs61a.org/">CS61A-计算机程序的构造和解释</a></li>
<li>中英字幕：<a href="https://space.bilibili.com/526939229/video?tid=0&pn=2&keyword=&order=pubdate">bilibili</a></li>
<li>英文字幕：<a href="https://www.youtube.com/@JohnDeNero/playlists">YouTube</a></li>
</ul>
</blockquote>
<h4 id="4-MIT6-0001-计算机科学介绍及Python编程"><a href="#4-MIT6-0001-计算机科学介绍及Python编程" class="headerlink" title="4.MIT6.0001-计算机科学介绍及Python编程"></a>4.MIT6.0001-计算机科学介绍及Python编程</h4><blockquote>
<ul>
<li>简介：麻省理工公开课，适合与CS61A课程一起参考学习。</li>
<li>课程时间：10小时</li>
<li>课程官网：<a href="https://www.edx.org/learn/computer-science/massachusetts-institute-of-technology-celulas-y-tejidos">MIT6.0001-计算机科学介绍及Python编程</a></li>
<li>中英字幕：<a href="https://www.bilibili.com/video/BV1ty4y1x7xP?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>英文字幕：<a href="https://www.youtube.com/watch?v=nykOeWgQcHM&list=PLUl4u3cNGP63WbdFxL8giv4yhgdMGaZNA">YouTube</a></li>
</ul>
</blockquote>
<h4 id="5-MIT公开课-计算机教育中缺失的一课"><a href="#5-MIT公开课-计算机教育中缺失的一课" class="headerlink" title="5.MIT公开课-计算机教育中缺失的一课"></a>5.MIT公开课-计算机教育中缺失的一课</h4><blockquote>
<ul>
<li>简介：麻省理工公开课，学完计算机导论和Python语言后，必须掌握该课程所涉及的工具&#x2F;软件。</li>
<li>课程时间：10小时</li>
<li>课程官网：<a href="https://missing-semester-cn.github.io/">The Missing Semester of Your CS Education</a></li>
<li>中英字幕：<a href="https://space.bilibili.com/518734451?spm_id_from=333.337.search-card.all.click">bilibili</a></li>
<li>英文字幕：<a href="https://www.youtube.com/playlist?list=PLyzOVJj3bHQuloKGG59rS43e29ro7I57J">YouTube</a></li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>CS课程</category>
      </categories>
      <tags>
        <tag>CS课程</tag>
        <tag>计算机科学导论</tag>
      </tags>
  </entry>
  <entry>
    <title>CS课程分享(三)—计算机组成原理</title>
    <url>/archives/d78b3722.html</url>
    <content><![CDATA[<h4 id="1-依据基本原理构建现代计算机：从与非门到俄罗斯方块"><a href="#1-依据基本原理构建现代计算机：从与非门到俄罗斯方块" class="headerlink" title="1.依据基本原理构建现代计算机：从与非门到俄罗斯方块"></a>1.依据基本原理构建现代计算机：从与非门到俄罗斯方块</h4><blockquote>
<ul>
<li>简介：Coursera平台被数万人评为满分，全球四百多所高校、高中采用，零基础入门。</li>
<li>课程时间：34小时</li>
<li>课程官网：<a href="https://www.nand2tetris.org/">依据基本原理构建现代计算机</a></li>
<li>中英字幕：<a href="https://www.bilibili.com/video/BV1KJ411s7QJ/?vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>配套教材：<a href="https://github.com/PKUFlyingPig/NandToTetris/blob/master/%5B%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E8%A6%81%E7%B4%A0%EF%BC%9A%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%9E%84%E5%BB%BA%E7%8E%B0%E4%BB%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%5D.(%E5%B0%BC%E8%90%A8).%E5%91%A8%E7%BB%B4.%E6%89%AB%E6%8F%8F%E7%89%88.pdf">计算机系统要素：从零开始构建现代计算机</a></li>
</ul>
</blockquote>
<h4 id="2-CMU15-213-深入理解计算机系统"><a href="#2-CMU15-213-深入理解计算机系统" class="headerlink" title="2.CMU15-213 深入理解计算机系统"></a>2.CMU15-213 深入理解计算机系统</h4><blockquote>
<ul>
<li>简介：CMU镇系神课，配套教材为经典名著“CSAPP”，介绍计算机系统是如何工作的。</li>
<li>课程时间：32小时</li>
<li>课程官网：<a href="https://www.cs.cmu.edu/~213/">CMU15-213 深入理解计算机系统</a></li>
<li>中英字幕：<a href="https://www.bilibili.com/video/BV1iW411d7hd?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>英文字幕：<a href="https://www.youtube.com/playlist?list=PLQ5cMeVTtiJkUilq92Cw9D6RhAJhPJ_JX">YouTube</a></li>
</ul>
</blockquote>
<h4 id="3-CS61C-计算机组成原理"><a href="#3-CS61C-计算机组成原理" class="headerlink" title="3.CS61C-计算机组成原理"></a>3.CS61C-计算机组成原理</h4><blockquote>
<ul>
<li>简介：UCB公开课，须先修CS61A&#x2F;CS61B课程，使用教材为《计算机组成与设计：硬件&#x2F;软件接口》。</li>
<li>课程时间：33小时（2020年课程是25小时）</li>
<li>课程官网：<a href="https://cs61c.org/fa23/">CS61C-计算机组成原理</a></li>
<li>中英字幕：<a href="https://www.bilibili.com/video/BV15W4y1S7Lc/?vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a> 2022年课程</li>
<li>中英字幕：<a href="https://www.bilibili.com/video/BV1fC4y147iZ?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a> 2020年课程</li>
<li>英文字幕：<a href="https://www.youtube.com/playlist?list=PL0j-r-omG7i0-mnsxN5T4UcVS1Di0isqf">YouTube</a></li>
</ul>
</blockquote>
<h4 id="4-CS152-252A-计算机体系结构"><a href="#4-CS152-252A-计算机体系结构" class="headerlink" title="4.CS152&#x2F;252A-计算机体系结构"></a>4.CS152&#x2F;252A-计算机体系结构</h4><blockquote>
<ul>
<li>简介：UCB公开课，主要介绍现代计算机系统的内部工作原理以及硬件软件接口。</li>
<li>课程时间：32小时</li>
<li>课程官网：<a href="https://inst.eecs.berkeley.edu/~cs152/sp23/">CS152&#x2F;252A-计算机体系结构</a></li>
<li>中英字幕：<a href="https://space.bilibili.com/457173750/channel/collectiondetail?sid=1672122">bilibili</a></li>
</ul>
</blockquote>
<h4 id="5-MIT6-004-计算架构"><a href="#5-MIT6-004-计算架构" class="headerlink" title="5.MIT6.004-计算架构"></a>5.MIT6.004-计算架构</h4><blockquote>
<ul>
<li>简介：麻省理工公开课，须先修MIT6.0001课程，具备一定的编程语言基础和电气知识。</li>
<li>课程时间：32小时</li>
<li>课程官网：<a href="https://ocw.mit.edu/courses/6-004-computation-structures-spring-2017/">MIT6.004-计算架构</a></li>
<li>中英字幕：<a href="https://www.bilibili.com/video/BV1KK411u7FX?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>英文字幕：<a href="https://www.youtube.com/@silvinahanonowachman3310/videos">YouTube</a></li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>CS课程</category>
      </categories>
      <tags>
        <tag>CS课程</tag>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>CS课程分享(九)—人工智能</title>
    <url>/archives/69d0d14e.html</url>
    <content><![CDATA[<h3 id="一、入门课程"><a href="#一、入门课程" class="headerlink" title="一、入门课程"></a>一、入门课程</h3><h4 id="1-人工智能速成课"><a href="#1-人工智能速成课" class="headerlink" title="1.人工智能速成课"></a>1.人工智能速成课</h4><blockquote>
<ul>
<li>简介：快速了解人工智能到底是什么，有哪些方向。</li>
<li>课程时间：4小时</li>
<li>课程官网：<a href="https://thecrashcourse.com/topic/ai/">Crash Course</a></li>
<li>在线课程：<a href="https://www.bilibili.com/video/BV1P7411r7Dw?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
</ul>
</blockquote>
<h4 id="2-CS50’s-使用Python介绍人工智能"><a href="#2-CS50’s-使用Python介绍人工智能" class="headerlink" title="2.CS50’s-使用Python介绍人工智能"></a>2.CS50’s-使用Python介绍人工智能</h4><blockquote>
<ul>
<li>简介：哈佛大学公开课，须掌握概率论和Python语言的基础知识，非常适合零基础入门的AI课程。</li>
<li>课程时间：10小时</li>
<li>课程官网：<a href="https://cs50.harvard.edu/ai/">CS50’s-使用Python介绍人工智能</a></li>
<li>在线课程：<a href="https://www.bilibili.com/video/BV1SV4y1q7Gn/?spm_id_from=333.788&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>在线课程：<a href="https://www.youtube.com/watch?v=gR8QvFmNuLE&list=PLhQjrBD2T381PopUTYtMSstgk-hsTGkVm&index=1">YouTube</a></li>
</ul>
</blockquote>
<h4 id="3-CS188-人工智能导论"><a href="#3-CS188-人工智能导论" class="headerlink" title="3.CS188-人工智能导论"></a>3.CS188-人工智能导论</h4><blockquote>
<ul>
<li>简介：UCB公开课，须先修CS70课程，教学基于Python语言，采用经典教材《人工智能：一种现代的方法》。</li>
<li>课程时间：37小时</li>
<li>课程官网：<a href="https://inst.eecs.berkeley.edu/~cs188/">CS188-人工智能导论</a></li>
<li>在线课程：<a href="https://www.bilibili.com/video/BV1r3411p7H8?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>在线课程：<a href="https://www.youtube.com/watch?v=VM0NiQY9FiU&list=PLp8QV47qJEg7a44Z3_q0apWF8s9a5soOI&index=2">YouTube</a></li>
</ul>
</blockquote>
<h4 id="4-CS221-人工智能：原理与技术"><a href="#4-CS221-人工智能：原理与技术" class="headerlink" title="4.CS221-人工智能：原理与技术"></a>4.CS221-人工智能：原理与技术</h4><blockquote>
<ul>
<li>简介：斯坦福大学公开课，该课程节奏快、涵盖面广，必须具备编程基础，另外建议先修完“线性代数&#x2F;离散数学&#x2F;概率论”。</li>
<li>课程时间：22小时</li>
<li>课程官网：<a href="https://stanford-cs221.github.io/">CS221-人工智能：原理与技术</a></li>
<li>在线课程：<a href="https://www.bilibili.com/video/BV1Ht4y1U75j?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>在线课程：<a href="https://www.youtube.com/playlist?list=PLoROMvodv4rOca_Ovz1DvdtWuz8BfSWL2">YouTube</a></li>
</ul>
</blockquote>
<h3 id="二、机器学习"><a href="#二、机器学习" class="headerlink" title="二、机器学习"></a>二、机器学习</h3><h4 id="1-吴恩达-机器学习"><a href="#1-吴恩达-机器学习" class="headerlink" title="1.吴恩达-机器学习"></a>1.吴恩达-机器学习</h4><blockquote>
<ul>
<li>简介：Coursera热门课程，入门机器学习的必修课，课程内容上没有过多纠结数学推导。</li>
<li>课程时间：23小时</li>
<li>课程官网：<a href="https://www.coursera.org/specializations/machine-learning-introduction">吴恩达-机器学习</a></li>
<li>在线课程：<a href="https://www.bilibili.com/video/BV1Pa411X76s/?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
</ul>
</blockquote>
<h4 id="2-台大-机器学习基石和技法"><a href="#2-台大-机器学习基石和技法" class="headerlink" title="2.台大-机器学习基石和技法"></a>2.台大-机器学习基石和技法</h4><blockquote>
<ul>
<li>简介：最好的中文机器学习课程之一，比CS229更适合入门，课程内容和CS229互补。</li>
<li>课程时间：48小时</li>
<li>课程官网：<a href="https://www.csie.ntu.edu.tw/~htlin/course/ml20fall/">台大-机器学习基石和技法</a></li>
<li>在线课程：<a href="https://www.bilibili.com/video/BV12F411e7Aa/?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
</ul>
</blockquote>
<h4 id="3-李宏毅-机器学习"><a href="#3-李宏毅-机器学习" class="headerlink" title="3.李宏毅-机器学习"></a>3.李宏毅-机器学习</h4><blockquote>
<ul>
<li>简介：该课虽然挂着机器学习的牌子，但其课程内容广泛，对于深度学习的绝大多数领域都有一定涉及。</li>
<li>课程时间：38小时</li>
<li>课程官网：<a href="https://speech.ee.ntu.edu.tw/~hylee/ml/2023-spring.php">李宏毅-机器学习</a></li>
<li>在线课程：<a href="https://www.bilibili.com/video/BV1TD4y137mP?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>在线课程：<a href="https://www.youtube.com/watch?v=yiY4nPOzJEg&list=PLJV_el3uVTsOePyfmkfivYZ7Rqr2nMk3W">YouTube</a></li>
</ul>
</blockquote>
<h4 id="4-CS181-机器学习"><a href="#4-CS181-机器学习" class="headerlink" title="4.CS181-机器学习"></a>4.CS181-机器学习</h4><blockquote>
<ul>
<li>简介：哈佛大学公开课，简述机器学习，提供关于人工智能和不确定性推理的概率观点。</li>
<li>课程时间：28小时</li>
<li>课程官网：<a href="https://harvard-ml-courses.github.io/cs181-web/syllabus">CS181-机器学习</a></li>
<li>在线课程：<a href="https://www.bilibili.com/video/BV1po4y1k7oA?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>在线课程：<a href="https://www.youtube.com/@debdeeps9449/videos">YouTube</a></li>
</ul>
</blockquote>
<h4 id="5-CS189-机器学习导论"><a href="#5-CS189-机器学习导论" class="headerlink" title="5.CS189-机器学习导论"></a>5.CS189-机器学习导论</h4><blockquote>
<ul>
<li>简介：UCB公开课，该课程开源了所有代码，同时讲得相当理论且深入。</li>
<li>课程时间：38小时</li>
<li>课程官网：<a href="https://eecs189.org/">CS189-机器学习导论</a></li>
<li>在线课程：<a href="https://www.bilibili.com/video/BV17T4y1x7SD?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>在线课程：<a href="https://www.youtube.com/watch?v=-umiPxlKX-I&list=PLCuQm2FL98HTlRmlwMk2AuFEM9n1c06HE">YouTube</a></li>
</ul>
</blockquote>
<h4 id="6-CS229M-机器学习理论"><a href="#6-CS229M-机器学习理论" class="headerlink" title="6.CS229M-机器学习理论"></a>6.CS229M-机器学习理论</h4><blockquote>
<ul>
<li>简介：斯坦福大学公开课，经典学习理论+最新深度学习理论，课程内容非常硬核。</li>
<li>课程时间：28小时</li>
<li>课程官网：<a href="https://web.stanford.edu/class/stats214/">CS229M-机器学习理论</a></li>
<li>在线课程：<a href="https://www.youtube.com/watch?v=I-tmjGFaaBg&list=PLoROMvodv4rP8nAmISxFINlGKSK4rbLKh">YouTube</a></li>
</ul>
</blockquote>
<h3 id="三、深度学习"><a href="#三、深度学习" class="headerlink" title="三、深度学习"></a>三、深度学习</h3><h4 id="1-MIT6-S191-深度学习导论"><a href="#1-MIT6-S191-深度学习导论" class="headerlink" title="1.MIT6.S191-深度学习导论"></a>1.MIT6.S191-深度学习导论</h4><blockquote>
<ul>
<li>简介：麻省理工关于深度学习的入门课程，旨在教授深度学习的基础知识。</li>
<li>课程时间：9小时</li>
<li>课程官网：<a href="https://introtodeeplearning.com/">MIT6.S191-深度学习导论</a></li>
<li>在线课程：<a href="https://www.bilibili.com/video/BV16v4y187z4?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>在线课程：<a href="https://www.youtube.com/watch?v=QDX-1M5Nj7s&list=PLtBw6njQRU-rwp5__7C0oIVt26ZgjG9NI">YouTube</a></li>
</ul>
</blockquote>
<h4 id="2-吴恩达-深度学习"><a href="#2-吴恩达-深度学习" class="headerlink" title="2.吴恩达-深度学习"></a>2.吴恩达-深度学习</h4><blockquote>
<ul>
<li>简介：Coursera热门课程，课程内容深入浅出，非常适合入门。</li>
<li>课程时间：28小时</li>
<li>课程资源：<a href="https://github.com/fengdu78/deeplearning_ai_books">吴恩达-深度学习</a></li>
<li>在线课程：<a href="https://www.bilibili.com/video/BV12E411a7Xn?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
</ul>
</blockquote>
<h4 id="3-CMU10-414-深度学习系统"><a href="#3-CMU10-414-深度学习系统" class="headerlink" title="3.CMU10-414-深度学习系统"></a>3.CMU10-414-深度学习系统</h4><blockquote>
<ul>
<li>简介：CMU公开课，该课内容涵盖了深度学习系统“全栈”，从系统框架的顶层设计到算法的原理和实现以及底层硬件。</li>
<li>课程时间：24小时</li>
<li>课程官网：<a href="https://dlsyscourse.org/">CMU10-414-深度学习系统</a></li>
<li>在线课程：<a href="https://www.youtube.com/watch?v=ftP5HeOvsI0&list=PLGzYMymX8amNyGPuJ35YWdq59eQ5jYCZ1">YouTube</a></li>
</ul>
</blockquote>
<h4 id="4-CS182-282A-深度神经网络"><a href="#4-CS182-282A-深度神经网络" class="headerlink" title="4.CS182&#x2F;282A-深度神经网络"></a>4.CS182&#x2F;282A-深度神经网络</h4><blockquote>
<ul>
<li>简介：普林斯顿大学公开课，该课程介绍深度神经网络如何改变了计算机视觉、语言技术、机器人技术和控制。</li>
<li>课程时间：32小时</li>
<li>课程官网：<a href="https://inst.eecs.berkeley.edu/~cs182/fa23/">CS182&#x2F;282A-深度神经网络</a></li>
<li>在线课程：<a href="https://www.youtube.com/playlist?list=PLnocShPlK-Fuo4Lq1aeyYc6D6Z6C2n2y9">YouTube</a></li>
</ul>
</blockquote>
<h3 id="四、强化学习"><a href="#四、强化学习" class="headerlink" title="四、强化学习"></a>四、强化学习</h3><h4 id="1-David-Silver-强化学习"><a href="#1-David-Silver-强化学习" class="headerlink" title="1.David Silver-强化学习"></a>1.David Silver-强化学习</h4><blockquote>
<ul>
<li>简介：强化学习之父、AlphaGo创始人亲授的经典入门课程，对初学者不算太友好，需要多听几遍。</li>
<li>课程时间：16小时</li>
<li>在线课程：<a href="https://www.bilibili.com/video/BV1M14y1P7JL?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
</ul>
</blockquote>
<h4 id="2-CS234-强化学习"><a href="#2-CS234-强化学习" class="headerlink" title="2.CS234-强化学习"></a>2.CS234-强化学习</h4><blockquote>
<ul>
<li>简介：斯坦福大学公开课，该课程对强化学习领域进行了全面且细致的讲解。</li>
<li>课程时间：19小时</li>
<li>课程官网：<a href="https://web.stanford.edu/class/cs234/CS234Win2019/index.html">CS234-强化学习</a></li>
<li>在线课程：<a href="https://www.bilibili.com/video/BV1Cc411h7QQ?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>在线课程：<a href="https://www.youtube.com/watch?v=FgzM3zpZ55o&list=PLoROMvodv4rOSOPzutgyCTapiGlY2Nd8u">YouTube</a></li>
</ul>
</blockquote>
<h4 id="3-CS285-深度强化学习"><a href="#3-CS285-深度强化学习" class="headerlink" title="3.CS285-深度强化学习"></a>3.CS285-深度强化学习</h4><blockquote>
<ul>
<li>简介：UCB公开课，课程内容覆盖了深度强化学习领域的各方面内容，适合有一定机器学习基础的同学进行学习。</li>
<li>课程时间：18小时</li>
<li>课程官网：<a href="https://rail.eecs.berkeley.edu/deeprlcourse/">CS285-深度强化学习</a></li>
<li>在线课程：<a href="https://space.bilibili.com/2185804/video">bilibili</a></li>
<li>在线课程：<a href="https://www.youtube.com/watch?v=SupFHGbytvA&list=PL_iWQOsE6TfVYGEGiAOMaOzzv41Jfm_Ps&index=1">YouTube</a></li>
</ul>
</blockquote>
<h3 id="五、计算机图形学"><a href="#五、计算机图形学" class="headerlink" title="五、计算机图形学"></a>五、计算机图形学</h3><h4 id="1-CMU15-462-662-计算机图形学"><a href="#1-CMU15-462-662-计算机图形学" class="headerlink" title="1.CMU15-462&#x2F;662 计算机图形学"></a>1.CMU15-462&#x2F;662 计算机图形学</h4><blockquote>
<ul>
<li>简介：CMU公开课，该课全面介绍图形学，侧重于基本概念和技术，以及多个问题领域：渲染&#x2F;动画&#x2F;几何&#x2F;成像的交叉关系。</li>
<li>课程时间：29小时</li>
<li>课程官网：<a href="http://15462.courses.cs.cmu.edu/fall2020/home">CMU15-462&#x2F;662 计算机图形学</a></li>
<li>在线课程：<a href="https://space.bilibili.com/457173750/channel/collectiondetail?sid=1695178">bilibili</a></li>
<li>在线课程：<a href="https://www.youtube.com/watch?v=W6yEALqsD7k&list=PL9_jI1bdZmz2emSh0UQ5iOdT2xRHFHL7E&index=1">YouTube</a></li>
</ul>
</blockquote>
<h4 id="2-GAMES101-现代计算机图形学入门"><a href="#2-GAMES101-现代计算机图形学入门" class="headerlink" title="2.GAMES101-现代计算机图形学入门"></a>2.GAMES101-现代计算机图形学入门</h4><blockquote>
<ul>
<li>简介：UCSB公开课，须先修线性代数、高等数学、C++，本课程将全面而系统地介绍现代计算机图形学的四大组成部分。</li>
<li>课程时间：28小时</li>
<li>课程官网：<a href="https://sites.cs.ucsb.edu/~lingqi/teaching/games101.html">GAMES101-现代计算机图形学入门</a></li>
<li>在线课程：<a href="https://www.bilibili.com/video/BV1X7411F744/?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
</ul>
</blockquote>
<h4 id="3-GAMES202-高质量实时渲染"><a href="#3-GAMES202-高质量实时渲染" class="headerlink" title="3.GAMES202-高质量实时渲染"></a>3.GAMES202-高质量实时渲染</h4><blockquote>
<ul>
<li>简介：UCSB公开课，该课是GAMES101的进阶课程，本课程将全面地介绍现代实时渲染中的关键问题与解决方法。</li>
<li>课程时间：22小时</li>
<li>课程官网：<a href="https://sites.cs.ucsb.edu/~lingqi/teaching/games202.html">GAMES202-高质量实时渲染</a></li>
<li>在线课程：<a href="https://www.bilibili.com/video/BV1YK4y1T7yY/?vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
</ul>
</blockquote>
<h4 id="4-GAMES103-基于物理的计算机动画入门"><a href="#4-GAMES103-基于物理的计算机动画入门" class="headerlink" title="4.GAMES103-基于物理的计算机动画入门"></a>4.GAMES103-基于物理的计算机动画入门</h4><blockquote>
<ul>
<li>简介：UCSB公开课，不同于GAMES101&#x2F;202课程以渲染学为主，GAMES103课程基于图形学三大领域中的模拟学：物理模拟。</li>
<li>课程时间：22小时</li>
<li>课程官网：<a href="https://games-cn.org/games103/">GAMES202-高质量实时渲染</a></li>
<li>在线课程：<a href="https://www.bilibili.com/video/BV12Q4y1S73g/?vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
</ul>
</blockquote>
<h3 id="六、计算机视觉"><a href="#六、计算机视觉" class="headerlink" title="六、计算机视觉"></a>六、计算机视觉</h3><h4 id="1-CS231n-计算机视觉"><a href="#1-CS231n-计算机视觉" class="headerlink" title="1.CS231n-计算机视觉"></a>1.CS231n-计算机视觉</h4><blockquote>
<ul>
<li>简介：斯坦福大学公开课，介绍前馈神经网络(NN)、卷积神经网络(CNN)和循环神经网络(RNN)，作业比较有挑战性。</li>
<li>课程时间：20小时</li>
<li>课程官网：<a href="https://cs231n.stanford.edu/2017/">CS231n-计算机视觉</a></li>
<li>在线课程：<a href="https://www.bilibili.com/video/BV1i14y1w7GJ?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>在线课程：<a href="https://www.youtube.com/watch?v=vT1JzLTH4G4&list=PLC1qU-LWwrF64f4QKQT-Vg5Wr4qEE1Zxk">YouTube</a></li>
</ul>
</blockquote>
<h4 id="2-CS224w-图机器学习"><a href="#2-CS224w-图机器学习" class="headerlink" title="2.CS224w-图机器学习"></a>2.CS224w-图机器学习</h4><blockquote>
<ul>
<li>简介：斯坦福大学图神经网络入门课，众多做GNN的朋友都力荐该课程。</li>
<li>课程时间：22小时</li>
<li>课程官网：<a href="https://web.stanford.edu/class/cs224w/">CS224w-图机器学习</a></li>
<li>在线课程：<a href="https://www.bilibili.com/video/BV1Qq4y1f7tt/?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>在线课程：<a href="https://www.youtube.com/watch?v=JAB_plj2rbA&list=PLoROMvodv4rPLKxIpqhjhPgdQy7imNkDn">YouTube</a></li>
</ul>
</blockquote>
<h4 id="3-EECS498-007-598-005-计算机视觉的深度学习"><a href="#3-EECS498-007-598-005-计算机视觉的深度学习" class="headerlink" title="3.EECS498-007&#x2F;598-005 计算机视觉的深度学习"></a>3.EECS498-007&#x2F;598-005 计算机视觉的深度学习</h4><blockquote>
<ul>
<li>简介：密歇根大学公开课，课程内容全面和作业质量极高，同时难度由浅及深，是一门非常好的计算机视觉入门课。</li>
<li>课程时间：22小时</li>
<li>课程官网：<a href="https://web.eecs.umich.edu/~justincj/teaching/eecs498/WI2022/">EECS498-007&#x2F;598-005 计算机视觉的深度学习</a></li>
<li>在线课程：<a href="https://www.youtube.com/watch?v=QytpbYkGxKo&list=PLLhQgjrONLVFP1E7p2jWMMeM2FWUf2Qc7">YouTube</a></li>
</ul>
</blockquote>
<h3 id="七、自然语言处理"><a href="#七、自然语言处理" class="headerlink" title="七、自然语言处理"></a>七、自然语言处理</h3><h4 id="1-CS124-从语言到信息"><a href="#1-CS124-从语言到信息" class="headerlink" title="1.CS124-从语言到信息"></a>1.CS124-从语言到信息</h4><blockquote>
<ul>
<li>简介：斯坦福大学公开课，该课程主要介绍从人类语言文本、语音、网页、社交网络中提取意义、信息和结构。</li>
<li>课程时间：10小时</li>
<li>课程官网：<a href="https://web.stanford.edu/class/cs124/">CS124-从语言到信息</a></li>
<li>在线课程：<a href="https://www.youtube.com/watch?v=808M7q8QX0E&list=PLaZQkZp6WhWyvdiP49JG-rjyTPck_hvEu">YouTube</a></li>
</ul>
</blockquote>
<h4 id="2-CS224u-自然语言理解"><a href="#2-CS224u-自然语言理解" class="headerlink" title="2.CS224u-自然语言理解"></a>2.CS224u-自然语言理解</h4><blockquote>
<ul>
<li>简介：斯坦福大学公开课，该课程侧重于开发系统和算法，以增强机器对人类语言的理解。</li>
<li>课程时间：13小时</li>
<li>课程官网：<a href="https://web.stanford.edu/class/cs224u/">CS224u-自然语言理解</a></li>
<li>在线课程：<a href="https://www.bilibili.com/video/BV12u411276U?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>在线课程：<a href="https://www.youtube.com/watch?v=K_Dh0Sxujuc&list=PLoROMvodv4rOwvldxftJTmoR3kRcWkJBp">YouTube</a></li>
</ul>
</blockquote>
<h4 id="3-CS224n-自然语言处理"><a href="#3-CS224n-自然语言处理" class="headerlink" title="3.CS224n-自然语言处理"></a>3.CS224n-自然语言处理</h4><blockquote>
<ul>
<li>简介：斯坦福NLP入门课程，由自然语言处理领域的权威“Chris Manning”(word2vec算法的开创者)主讲。</li>
<li>课程时间：30小时</li>
<li>课程官网：<a href="https://web.stanford.edu/class/cs224n/index.html">CS224n-自然语言处理</a></li>
<li>在线课程：<a href="https://www.youtube.com/watch?v=rmVRLeJRkl4&list=PLoROMvodv4rOSH4v6133s9LFPRHjEmbmJ">YouTube</a></li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>CS课程</category>
      </categories>
      <tags>
        <tag>CS课程</tag>
        <tag>人工智能</tag>
      </tags>
  </entry>
  <entry>
    <title>CS课程分享(五)—计算机网络</title>
    <url>/archives/3bd2c1fb.html</url>
    <content><![CDATA[<h4 id="1-计算机网络-自顶向下"><a href="#1-计算机网络-自顶向下" class="headerlink" title="1.计算机网络-自顶向下"></a>1.计算机网络-自顶向下</h4><blockquote>
<ul>
<li>简介：计网经典书籍《计算机网络-自顶向下方法》的作者亲授课程</li>
<li>课程时间：10小时</li>
<li>课程官网：<a href="https://gaia.cs.umass.edu/kurose_ross/index.php">计算机网络-自顶向下</a></li>
<li>中英字幕：<a href="https://www.bilibili.com/video/BV1mb4y1d7K7?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>英文字幕：<a href="https://www.youtube.com/playlist?list=PLm556dMNleHc1MWN5BX9B2XkwkNE2Djiu">YouTube</a></li>
</ul>
</blockquote>
<h4 id="2-CS144-计算机网络"><a href="#2-CS144-计算机网络" class="headerlink" title="2.CS144-计算机网络"></a>2.CS144-计算机网络</h4><blockquote>
<ul>
<li>简介：斯坦福大学公开课，须先修CS106L课程，具备计算机系统基础，基于C++语言搭建出整个TCP&#x2F;IP协议栈。</li>
<li>课程时间：25小时</li>
<li>课程官网：<a href="https://vixbob.github.io/cs144-web-page/">CS144-计算机网络</a></li>
<li>中英字幕：<a href="https://space.bilibili.com/457173750/channel/collectiondetail?sid=1445483">bilibili</a></li>
<li>英文字幕：<a href="https://www.youtube.com/playlist?list=PL6RdenZrxrw9inR-IJv-erlOKRHjymxMN">YouTube</a></li>
</ul>
</blockquote>
<h4 id="3-COS461-计算机网络"><a href="#3-COS461-计算机网络" class="headerlink" title="3.COS461-计算机网络"></a>3.COS461-计算机网络</h4><blockquote>
<ul>
<li>简介：普林斯顿大学公开课，推荐教材《计算机网络：系统方法》，作业是用Go&#x2F;C&#x2F;Python编写。</li>
<li>课程时间：10学时</li>
<li>课程官网：<a href="https://www.cs.princeton.edu/courses/archive/fall21/cos461/index.html">COS461-计算机网络</a></li>
<li>在线视频：<a href="https://www.youtube.com/playlist?list=PLpherdrLyny-zJw95jcE-uJkcsIAG1MEn">YouTube</a></li>
</ul>
</blockquote>
<h4 id="4-中科大-计算机网络"><a href="#4-中科大-计算机网络" class="headerlink" title="4.中科大-计算机网络"></a>4.中科大-计算机网络</h4><blockquote>
<ul>
<li>简介：中科大公开课，教材采用《计算机网络-自顶向下方法》，授课更重实际而非理论，最好先预习教材再看课。</li>
<li>课程时间：44小时</li>
<li>课程官网：<a href="http://staff.ustc.edu.cn/~qzheng/teaching.html">中科大-计算机网络</a></li>
<li>在线视频：<a href="https://www.bilibili.com/video/BV1JV411t7ow/?vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>CS课程</category>
      </categories>
      <tags>
        <tag>CS课程</tag>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>Alist+RaiDrive将各大云盘挂载到本地使用</title>
    <url>/archives/724c5b9e.html</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>AList是一个支持多个存储提供商，包括本地存储、阿里云盘、OneDrive、Google Drive 等，支持网页浏览和WebDAV的文件列表软件，由gin和Solidjs驱动。简单的来说就是能够帮你整合管理各种云盘。当然，AList除了支持网盘存储之外，还支持对象存储，本地存储，FTP等等。<br><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/alist13423.png" alt="alist1"></p>
<h3 id="一、下载Alist：Github"><a href="#一、下载Alist：Github" class="headerlink" title="一、下载Alist：Github"></a>一、下载Alist：<a href="https://github.com/alist-org/alist/releases">Github</a></h3><p>1.以Windows为例，下载指定版本：Dalist-windows-amd64.zip<br><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/alist261356.png" alt="alist2"><br><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/alist311354.png" alt="alist3"></p>
<p>2.将刚下载的压缩文件[Dalist-windows-amd64.zip]解压，得到可执行文件[Dalist.exe]<br><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/alist423324.png" alt="alist4"></p>
<p>3.在电脑桌面创建一个新文件夹[Alist]，将[Dalist.exe]剪切放入该文件夹，在路径栏输入 cmd 回车运行。<br><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/alist544365.png" alt="alist5"></p>
<p>4.在命令行输入 alist.exe server ，复制输出结果中的IP和端口到浏览器打开：0.0.0.0:5244。（注意不要关闭终端窗口）<br><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/alist653561.png" alt="alist6"></p>
<h3 id="二、登录Alist"><a href="#二、登录Alist" class="headerlink" title="二、登录Alist"></a>二、登录Alist</h3><p>1.初始用户名默认是：admin ，初始密码看alist.exe server输出结果：[password is: xxxxxx]<br><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/alist765344.png" alt="alist7"></p>
<p>2.登录成功后，进入管理修改用户名和密码<br><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/alist865344.png" alt="alist8"></p>
<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/alist965344.png" alt="alist9"></p>
<h3 id="三、添加网盘"><a href="#三、添加网盘" class="headerlink" title="三、添加网盘"></a>三、添加网盘</h3><p>以OneDrive为例<br><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/alist1053561.png" alt="alist10"></p>
<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/alist1153561.png" alt="alist11"></p>
<p>打开<a href="https://alist.nn.ci/tool/onedrive/request">https://alist.nn.ci/tool/onedrive/request</a>获取客户端ID和密钥，以及Token<br><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/alist1265356.png" alt="alist12"></p>
<blockquote>
<p>必须设置的选项：</p>
<ul>
<li>驱动——默认即可</li>
<li>挂载路径——<code>注意设置的盘符不能与本地已有的盘符冲突（例：/F或/OneDrive）</code></li>
<li>缓存过期时间——<code>设置为0（永不过期）</code></li>
<li>WebDAV策略——默认即可</li>
<li>启用签名——默认即可</li>
<li>根文件夹路径——默认即可</li>
<li>地区——默认即可</li>
<li>客户端ID——<code>xxx</code></li>
<li>客户端密钥——<code>xxx</code></li>
<li>刷新令牌——<code>xxx</code></li>
</ul>
</blockquote>
<p>更多网盘挂载方法，请查看<a href="https://alist.nn.ci/zh/guide/drivers/common.html">官方文档</a></p>
<h3 id="四、安装RaiDrive：https-www-raidrive-com"><a href="#四、安装RaiDrive：https-www-raidrive-com" class="headerlink" title="四、安装RaiDrive：https://www.raidrive.com/"></a>四、安装RaiDrive：<a href="https://www.raidrive.com/">https://www.raidrive.com/</a></h3><blockquote>
<p>安装完成后，点击添加 → 选择NAS → WebDav → 然后取消地址选项，在<code>http://</code>处填入127.0.0.1，端口：5244，路径：&#x2F;dav → 最后填写Alist账号和密码，点击连接即可。<br><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/dev132445.png" alt="RaiDrive"></p>
</blockquote>
<h3 id="五、设置Alist开机自启"><a href="#五、设置Alist开机自启" class="headerlink" title="五、设置Alist开机自启"></a>五、设置Alist开机自启</h3><p>每次使用，都需要通过cmd运行程序很繁琐。所以，我们最好设置alist.exe开机自启动</p>
<blockquote>
<p>1.在桌面文件夹[Alist]新建一个文本文档，将以下代码复制进去，然后将文件重命名为alist.vbs</p>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">Set ws = CreateObject(<span class="string">&quot;Wscript.Shell&quot;</span>) </span><br><span class="line">ws.run <span class="string">&quot;D:\UserData\Alist\alist.exe server&quot;</span><span class="punctuation">,</span>vbhide</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：\alist.exe server前面是你本机alist.exe所在的文件路径地址<br>注意：文本文档重命名为alist.vbs前，必须有打开文件扩展名，将.txt修改成.vbs</p>
</blockquote>
<blockquote>
<p>2.鼠标右键alist.vbs，创建快捷方式<br>然后 Win+R 打开命令窗口，输入 shell:startup 后回车，将刚创建的alist.vbs快捷方式粘贴到打开的文件夹中。这样，Alist开机自启动就大功告成了。</p>
</blockquote>
]]></content>
      <categories>
        <category>云盘</category>
      </categories>
      <tags>
        <tag>Alist</tag>
        <tag>RaiDrive</tag>
        <tag>云盘</tag>
      </tags>
  </entry>
  <entry>
    <title>CS课程分享(二)—数据结构与算法</title>
    <url>/archives/15033e8.html</url>
    <content><![CDATA[<h4 id="1-COS226-算法和数据结构"><a href="#1-COS226-算法和数据结构" class="headerlink" title="1.COS226-算法和数据结构"></a>1.COS226-算法和数据结构</h4><blockquote>
<ul>
<li>简介：Coursera上评分最高的算法“神课”，教学基于Java语言，采用教材为《算法》第4版。</li>
<li>课程时间：60小时</li>
<li>课程官网：<a href="https://algs4.cs.princeton.edu/home/">COS226-算法和数据结构</a></li>
<li>中英字幕：<a href="https://www.bilibili.com/video/BV1jx411U768?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>英文字幕：<a href="https://www.youtube.com/watch?v=gfSpPbJWzVs&list=PLaLOVNqqD-2Hz-wATEaLxBGsZcdcDzMBw&index=3">YouTube</a></li>
</ul>
</blockquote>
<h4 id="2-CS61B-数据结构"><a href="#2-CS61B-数据结构" class="headerlink" title="2.CS61B-数据结构"></a>2.CS61B-数据结构</h4><blockquote>
<ul>
<li>简介：UCB算法名课，须先修CS61A课程和微积分，采用教材为《算法》红皮书，基于Java。</li>
<li>课程时间：34小时</li>
<li>课程官网：<a href="https://sp23.datastructur.es/">CS61B-数据结构</a></li>
<li>中英字幕：<a href="https://space.bilibili.com/457173750/channel/collectiondetail?sid=1738670">bilibili</a></li>
<li>英文字幕：<a href="https://www.youtube.com/@joshhug1212/playlists">YouTube</a></li>
</ul>
</blockquote>
<h4 id="3-MIT6-006-算法导论"><a href="#3-MIT6-006-算法导论" class="headerlink" title="3.MIT6.006-算法导论"></a>3.MIT6.006-算法导论</h4><blockquote>
<ul>
<li>简介：麻省理工公开课，须先修MIT6.0001和离散数学，掌握Python语言，采用教材是算法圣经——《算法导论》。</li>
<li>课程时间：35小时</li>
<li>课程官网：<a href="https://ocw.mit.edu/courses/6-006-introduction-to-algorithms-spring-2020/">MIT6.006-算法导论</a></li>
<li>中英字幕：<a href="https://www.bilibili.com/video/BV1EZ4y1v76Y/?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>英文字幕：<a href="https://www.youtube.com/playlist?list=PLUl4u3cNGP63EdVPNLG3ToM6LaEUuStEY">YouTube</a></li>
</ul>
</blockquote>
<h4 id="4-CS161-算法的设计与分析"><a href="#4-CS161-算法的设计与分析" class="headerlink" title="4.CS161-算法的设计与分析"></a>4.CS161-算法的设计与分析</h4><blockquote>
<ul>
<li>简介：斯坦福大学公开课，分析和设计数据结构与算法的基本方法和思维方式，采用教材是算法圣经——《算法导论》。</li>
<li>课程时间：39小时</li>
<li>课程官网：<a href="https://stanford-cs161.github.io/winter2022/">CS161-算法的设计与分析</a></li>
<li>中英字幕：<a href="https://www.bilibili.com/video/BV1Ca4y177UH?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>英文字幕：<a href="https://www.youtube.com/watch?v=yRM3sc57q0c&list=PLXFMmlk03Dt7Q0xr1PIAriY5623cKiH7V&index=3">YouTube</a> 上</li>
<li>英文字幕：<a href="https://www.youtube.com/watch?v=R-ElS5wfcm4&list=PLXFMmlk03Dt5EMI2s2WQBsLsZl7A5HEK6">YouTube</a> 下</li>
</ul>
</blockquote>
<h4 id="5-MIT6-851-高级数据结构"><a href="#5-MIT6-851-高级数据结构" class="headerlink" title="5.MIT6.851-高级数据结构"></a>5.MIT6.851-高级数据结构</h4><blockquote>
<ul>
<li>简介：麻省理工公开课，本课程涵盖数据结构的主要成果和当前研究方向。</li>
<li>课程时间：30小时</li>
<li>课程官网：<a href="https://missing-semester-cn.github.io/">5.MIT6.851-高级数据结构</a></li>
<li>机翻字幕：<a href="https://www.bilibili.com/video/BV1iE411n7yJ?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>英文字幕：<a href="https://www.youtube.com/watch?v=T0yzrZL1py0&list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf">YouTube</a></li>
</ul>
</blockquote>
<h4 id="6-浙江大学-数据结构"><a href="#6-浙江大学-数据结构" class="headerlink" title="6.浙江大学-数据结构"></a>6.浙江大学-数据结构</h4><blockquote>
<ul>
<li>简介：浙江大学公开课，本课只涉及最基础的数据结构和算法，为了兼顾起点不同的学员，课程设计了“小白专场”系列。</li>
<li>课程时间：18小时</li>
<li>课程官网：<a href="https://www.icourse163.org/course/zju-93001">浙江大学-数据结构</a></li>
<li>在线视频：<a href="https://www.bilibili.com/video/BV1Kb41127fT/?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>CS课程</category>
      </categories>
      <tags>
        <tag>CS课程</tag>
        <tag>数据结构与算法</tag>
      </tags>
  </entry>
  <entry>
    <title>CS课程分享(六)—数据库</title>
    <url>/archives/97499ad0.html</url>
    <content><![CDATA[<h4 id="1-CMU15-445-645-数据库系统"><a href="#1-CMU15-445-645-数据库系统" class="headerlink" title="1.CMU15-445&#x2F;645 数据库系统"></a>1.CMU15-445&#x2F;645 数据库系统</h4><blockquote>
<ul>
<li>简介：CMU知名神课，须先修CMU15-213，对编程能力有较高要求，配套教材《数据库系统概念》。</li>
<li>课程时间：36小时</li>
<li>课程官网：<a href="https://15445.courses.cs.cmu.edu/fall2021/schedule.html">CMU15-445&#x2F;645 数据库系统</a></li>
<li>中英字幕：<a href="https://www.bilibili.com/video/BV1cM4y1n7HL/?spm_id_from=333.788&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>英文字幕：<a href="https://www.youtube.com/watch?v=uikbtpVZS2s&list=PLSE8ODhjZXjaKScG3l0nuOiDTTqpfnWFf">YouTube</a></li>
</ul>
</blockquote>
<h4 id="2-CMU15-721-高级数据库系统"><a href="#2-CMU15-721-高级数据库系统" class="headerlink" title="2.CMU15-721 高级数据库系统"></a>2.CMU15-721 高级数据库系统</h4><blockquote>
<ul>
<li>简介：数据库进阶，须先修CMU15-445&#x2F;645课程。</li>
<li>课程时间：19小时</li>
<li>课程官网：<a href="https://15721.courses.cs.cmu.edu/spring2023/">CMU15-721 高级数据库系统</a></li>
<li>中英字幕：<a href="https://space.bilibili.com/457173750/channel/collectiondetail?sid=1513669">bilibili</a></li>
<li>英文字幕：<a href="https://www.youtube.com/playlist?list=PLSE8ODhjZXjYzlLMbX3cR0sxWnRM7CLFn">YouTube</a></li>
</ul>
</blockquote>
<h4 id="3-CS122-数据库系统实现"><a href="#3-CS122-数据库系统实现" class="headerlink" title="3.CS122-数据库系统实现"></a>3.CS122-数据库系统实现</h4><blockquote>
<ul>
<li>简介：加州理工学院公开课，该课侧重于SQL层的相关实现，针对CMU15-445不提供SQL层功能，作为对查询优化相关知识的补充。</li>
<li>课程时间：14小时</li>
<li>课程官网：<a href="http://courses.cms.caltech.edu/cs122/">S122-数据库系统实现</a></li>
<li>中英字幕：<a href="https://www.bilibili.com/video/BV1mB4y1H7VZ?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>英文字幕：<a href="https://www.youtube.com/watch?v=7B-B3FMqI2U&list=PL-djvvkRw6duLx8_mhpzTDdOsZAX4SjWT&index=1">YouTube</a></li>
</ul>
</blockquote>
<h4 id="4-哈工大-数据库系统"><a href="#4-哈工大-数据库系统" class="headerlink" title="4.哈工大-数据库系统"></a>4.哈工大-数据库系统</h4><blockquote>
<ul>
<li>简介：哈工大公开课，本课程讲授数据库相关基本知识，聚集于分析和管理数据。</li>
<li>课程时间：32小时</li>
<li>课程官网：<a href="https://www.icourse163.org/course/HIT-1001516002">哈工大-数据库系统</a></li>
<li>在线视频：<a href="https://www.bilibili.com/video/BV1HY4y1b72A?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>CS课程</category>
      </categories>
      <tags>
        <tag>CS课程</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>ChatGPT Plus开通教程</title>
    <url>/archives/6cf5cbb3.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="升级到付费版的ChatGPT-Plus好处：更稳定，无字数限制，报错减少等等。截至7月中旬，ChatGPT-Plus开通方式有两种："><a href="#升级到付费版的ChatGPT-Plus好处：更稳定，无字数限制，报错减少等等。截至7月中旬，ChatGPT-Plus开通方式有两种：" class="headerlink" title="升级到付费版的ChatGPT Plus好处：更稳定，无字数限制，报错减少等等。截至7月中旬，ChatGPT Plus开通方式有两种："></a>升级到付费版的ChatGPT Plus好处：更稳定，无字数限制，报错减少等等。截至7月中旬，ChatGPT Plus开通方式有两种：</h3><h4 id="第一种，国外信用卡升级ChatGPT-Plus"><a href="#第一种，国外信用卡升级ChatGPT-Plus" class="headerlink" title="第一种，国外信用卡升级ChatGPT Plus"></a>第一种，国外信用卡升级ChatGPT Plus</h4><blockquote>
<p>目前国内所有VISA和MasterCard的双币信用卡都无法支付ChatGPT Plus，香港的信用卡也不行。</p>
</blockquote>
<h4 id="第二种，苹果礼品卡升级ChatGPT-Plus"><a href="#第二种，苹果礼品卡升级ChatGPT-Plus" class="headerlink" title="第二种，苹果礼品卡升级ChatGPT Plus"></a>第二种，苹果礼品卡升级ChatGPT Plus</h4><blockquote>
<p>5月19日，ChatGPT推出了iOS客户端，所以现在升级ChatGPT Plus又多了一种方法：购买苹果礼品卡，在ChatGPT iOS客户端开通会员。</p>
</blockquote>
<h2 id="一、国外信用卡升级ChatGPT-Plus"><a href="#一、国外信用卡升级ChatGPT-Plus" class="headerlink" title="一、国外信用卡升级ChatGPT Plus"></a>一、国外信用卡升级ChatGPT Plus</h2><h2 id="一-、准备"><a href="#一-、准备" class="headerlink" title="(一)、准备"></a>(一)、准备</h2><ul>
<li><p>北美的网络代理环境</p>
</li>
<li><p>ChatGPT账号</p>
</li>
<li><p>虚拟交易平台</p>
<blockquote>
<p>推荐欧易，官网url <a href="https://www.okx.com/">https://www.okx.com/</a></p>
</blockquote>
</li>
<li><p>虚拟信用卡</p>
<blockquote>
<p>推荐Depay，官网url <a href="https://depay.com/">https://depay.com/</a></p>
</blockquote>
</li>
</ul>
<h2 id="二-、实操"><a href="#二-、实操" class="headerlink" title="(二)、实操"></a>(二)、实操</h2><h3 id="1-下载并安装欧易APP"><a href="#1-下载并安装欧易APP" class="headerlink" title="1.下载并安装欧易APP"></a>1.下载并安装欧易APP</h3><blockquote>
<p>首页 → 我要买币 → 快捷买币 → 选USDT → 购买20USDT以上 → 支持支付宝、微信或者银行卡购买<br><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/xin134366.jpg" alt="插图1"></p>
</blockquote>
<h3 id="2-注册Depay账号，开通虚拟信用卡"><a href="#2-注册Depay账号，开通虚拟信用卡" class="headerlink" title="2.注册Depay账号，开通虚拟信用卡"></a>2.注册Depay账号，开通虚拟信用卡</h3><blockquote>
<p>注：开卡时可以选0USDT开卡费或10USDT开卡费(一次性)，区别在于0USDT开卡费，需要用户完成KYC认证。<br><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/xin223444.jpg" alt="插图2"></p>
</blockquote>
<h3 id="3-打开DepayApp，点击钱包-→-USDT-→-充币-→-充值地址（复制，确认主网是TRC20）"><a href="#3-打开DepayApp，点击钱包-→-USDT-→-充币-→-充值地址（复制，确认主网是TRC20）" class="headerlink" title="3.打开DepayApp，点击钱包 → USDT → 充币 → 充值地址（复制，确认主网是TRC20）"></a>3.打开DepayApp，点击钱包 → USDT → 充币 → 充值地址（复制，确认主网是TRC20）</h3><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/xin327361.jpg" alt="插图3"></p>
<h3 id="4-打开欧易App，充值USDT到Depay钱包中"><a href="#4-打开欧易App，充值USDT到Depay钱包中" class="headerlink" title="4.打开欧易App，充值USDT到Depay钱包中"></a>4.打开欧易App，充值USDT到Depay钱包中</h3><blockquote>
<p>首页 → 资产 → 提币 → USDT → 链上提现（提币地址填Depay钱包的充值地址）→ 提币网络选TRC20 → 输入提币数量<br>注：新注册的欧易用户完成身份认证后，需要等待24小时才可以提现。<br><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/xin421734.jpg" alt="插图4"></p>
</blockquote>
<h3 id="5-打开DepayApp钱包，将欧易提现的USDT都兑换成USD（美元），返回首页点击To-Card，将兑换的美元存入卡中"><a href="#5-打开DepayApp钱包，将欧易提现的USDT都兑换成USD（美元），返回首页点击To-Card，将兑换的美元存入卡中" class="headerlink" title="5.打开DepayApp钱包，将欧易提现的USDT都兑换成USD（美元），返回首页点击To Card，将兑换的美元存入卡中"></a>5.打开DepayApp钱包，将欧易提现的USDT都兑换成USD（美元），返回首页点击To Card，将兑换的美元存入卡中</h3><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/xin573632.jpg" alt="插图5"></p>
<h3 id="6-登录ChatGPT，左下角找到升级Plus的选项-Upgrade-to-Plus"><a href="#6-登录ChatGPT，左下角找到升级Plus的选项-Upgrade-to-Plus" class="headerlink" title="6.登录ChatGPT，左下角找到升级Plus的选项[Upgrade to Plus]"></a>6.登录ChatGPT，左下角找到升级Plus的选项[Upgrade to Plus]</h3><blockquote>
<p>注：关于账单地址，可以使用<a href="https://www.meiguodizhi.com/">美国地址生成器</a>，直接生成一个免税州的账单地址即可。</p>
</blockquote>
<h2 id="二、苹果礼品卡升级ChatGPT-Plus"><a href="#二、苹果礼品卡升级ChatGPT-Plus" class="headerlink" title="二、苹果礼品卡升级ChatGPT Plus"></a>二、苹果礼品卡升级ChatGPT Plus</h2><h2 id="一-、准备-1"><a href="#一-、准备-1" class="headerlink" title="(一)、准备"></a>(一)、准备</h2><ul>
<li>北美的网络代理环境</li>
<li>ChatGPT账号</li>
<li>支付宝APP</li>
<li>苹果手机</li>
<li>美区Apple ID<blockquote>
<p>注：国内手机号+邮箱就可以注册，唯一要注意的就是地址一定要填免税州，不然订阅ChatGPT Plus时要额外纳税。</p>
</blockquote>
</li>
</ul>
<h2 id="二-、实操-1"><a href="#二-、实操-1" class="headerlink" title="(二)、实操"></a>(二)、实操</h2><h3 id="1-打开支付宝，将地址改为美国旧金山"><a href="#1-打开支付宝，将地址改为美国旧金山" class="headerlink" title="1.打开支付宝，将地址改为美国旧金山"></a>1.打开支付宝，将地址改为美国旧金山</h3><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/zhi10.jpg" alt="插图10"></p>
<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/zhi11.jpg" alt="插图11"></p>
<h3 id="2-下拉APP页面，点击-大牌礼品卡"><a href="#2-下拉APP页面，点击-大牌礼品卡" class="headerlink" title="2.下拉APP页面，点击[大牌礼品卡]"></a>2.下拉APP页面，点击[大牌礼品卡]</h3><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/zhi12.jpg" alt="插图12"></p>
<h3 id="3-下拉APP页面，找到-美国区-APP-Store-iTunes-US-购买链接"><a href="#3-下拉APP页面，找到-美国区-APP-Store-iTunes-US-购买链接" class="headerlink" title="3.下拉APP页面，找到[美国区 APP Store &amp; iTunes US]购买链接"></a>3.下拉APP页面，找到[美国区 APP Store &amp; iTunes US]购买链接</h3><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/zhi13.jpg" alt="插图13"></p>
<h3 id="4-购买20美元的礼品卡，完善账号信息并完成邮箱验证"><a href="#4-购买20美元的礼品卡，完善账号信息并完成邮箱验证" class="headerlink" title="4.购买20美元的礼品卡，完善账号信息并完成邮箱验证"></a>4.购买20美元的礼品卡，完善账号信息并完成邮箱验证</h3><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/zhi14.jpg" alt="插图14"></p>
<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/zhi15.jpg" alt="插图15"></p>
<h3 id="5-打开App-Store，点击右上角账户，找到-兑换充值卡或代码-，手动输入兑换码即可。"><a href="#5-打开App-Store，点击右上角账户，找到-兑换充值卡或代码-，手动输入兑换码即可。" class="headerlink" title="5.打开App Store，点击右上角账户，找到[兑换充值卡或代码]，手动输入兑换码即可。"></a>5.打开App Store，点击右上角账户，找到[兑换充值卡或代码]，手动输入兑换码即可。</h3><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/zhi16.jpg" alt="插图16"></p>
<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/zhi17.jpg" alt="插图17"></p>
<h2 id="三-、注册问题"><a href="#三-、注册问题" class="headerlink" title="(三)、注册问题"></a>(三)、注册问题</h2><blockquote>
<p>新注册的美区Apple ID可能会遇到无法订阅的问题（in-app purchase not allowed）或订阅失败的问题（Your purchase could not be completed）。</p>
</blockquote>
]]></content>
      <categories>
        <category>ChatGPT</category>
      </categories>
      <tags>
        <tag>ChatGPT</tag>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>CS课程分享(四)—操作系统</title>
    <url>/archives/5023526c.html</url>
    <content><![CDATA[<h4 id="1-MIT6-S081-操作系统"><a href="#1-MIT6-S081-操作系统" class="headerlink" title="1.MIT6.S081-操作系统"></a>1.MIT6.S081-操作系统</h4><blockquote>
<ul>
<li>简介：MIT著名的PDOS实验室开设的课程，讲师是Robert Tappan Morris（世界第一个蠕虫病毒作者）。</li>
<li>课程时间：34小时</li>
<li>课程官网：<a href="https://pdos.csail.mit.edu/6.828/2020/schedule.html">MIT6.S081-操作系统</a></li>
<li>中英字幕：<a href="https://www.bilibili.com/video/BV1rS4y1n7y1?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>英文字幕：<a href="https://www.youtube.com/watch?v=J3LCzufEYt0&list=PLTsf9UeqkReZHXWY9yJvTwLJWYYPcKEqKf">YouTube</a></li>
</ul>
</blockquote>
<h4 id="2-CS162-操作系统和程序设计"><a href="#2-CS162-操作系统和程序设计" class="headerlink" title="2.CS162-操作系统和程序设计"></a>2.CS162-操作系统和程序设计</h4><blockquote>
<ul>
<li>简介：UCB公开课，配套教材为《操作系统：原理与实践》，补齐MIT6.S081课程在理论知识上的些许空白。</li>
<li>课程时间：39小时</li>
<li>课程官网：<a href="https://cs162.org/">CS162-操作系统和程序设计</a></li>
<li>中英字幕：<a href="https://www.bilibili.com/video/BV1ab4y1b7BU?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a> 缺第15课</li>
<li>英文字幕：<a href="https://www.youtube.com/watch?v=pPzVV2kkGHc&list=PLMcZASLnrVs5qyBC-dc4bFRtC8ROPYmS0">YouTube</a></li>
</ul>
</blockquote>
<h4 id="3-南京大学-操作系统：设计与实现"><a href="#3-南京大学-操作系统：设计与实现" class="headerlink" title="3.南京大学-操作系统：设计与实现"></a>3.南京大学-操作系统：设计与实现</h4><blockquote>
<ul>
<li>简介：南京大学网课，须有体系结构和C语言基础，蒋炎岩老师一线代码经验丰富，讲课满满的Hacker风格。</li>
<li>课程时间：60小时</li>
<li>课程官网：<a href="https://jyywiki.cn/">南京大学-操作系统</a></li>
<li>在线课程：<a href="https://www.bilibili.com/video/BV1Cm4y1d7Ur/?spm_id_from=333.788&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a> 2022年线上课</li>
<li>在线课程：<a href="https://www.bilibili.com/video/BV1Ks4y1Y7Rw/?spm_id_from=333.788&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a> 2023年教堂课</li>
</ul>
</blockquote>
<h4 id="4-哈工大-操作系统"><a href="#4-哈工大-操作系统" class="headerlink" title="4.哈工大-操作系统"></a>4.哈工大-操作系统</h4><blockquote>
<ul>
<li>简介：哈工大公开课，须有C语言基础，好评最多的中文计算机课程之一，缺点：实验所用Linux过于老旧。</li>
<li>课程时间：22小时</li>
<li>课程官网：<a href="https://www.icourse163.org/course/HIT-1002531008">哈工大-操作系统</a></li>
<li>在线课程：<a href="https://www.bilibili.com/video/BV19r4y1b7Aw/?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a> 2022年线上课</li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>CS课程</category>
      </categories>
      <tags>
        <tag>CS课程</tag>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>CS课程分享(八)—软件工程</title>
    <url>/archives/f635ce85.html</url>
    <content><![CDATA[<h4 id="1-MIT6-172-软件性能工程"><a href="#1-MIT6-172-软件性能工程" class="headerlink" title="1.MIT6.172-软件性能工程"></a>1.MIT6.172-软件性能工程</h4><blockquote>
<ul>
<li>简介：麻省理工公开课，教学基于C语言，讲授性能分析&#x2F;高性能算法技术&#x2F;指令级优化&#x2F;缓存优化&#x2F;并行编程和构建可扩展系统。</li>
<li>课程时间：30小时</li>
<li>课程官网：<a href="https://ocw.mit.edu/courses/6-172-performance-engineering-of-software-systems-fall-2018/">MIT6.172-软件性能工程</a></li>
<li>中英字幕：<a href="https://www.bilibili.com/video/BV1wA411h7N7?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
<li>英文字幕：<a href="https://www.youtube.com/playlist?list=PLUl4u3cNGP63VIBQVWguXxZZi0566y7Wf">YouTube</a></li>
</ul>
</blockquote>
<h4 id="2-南京大学-软件分析"><a href="#2-南京大学-软件分析" class="headerlink" title="2.南京大学-软件分析"></a>2.南京大学-软件分析</h4><blockquote>
<ul>
<li>简介：须先掌握数据结构与算法，教学基于Java语言，主要讲授程序分析：静态分析的理论与实践。</li>
<li>课程时间：32小时</li>
<li>课程官网：<a href="https://tai-e.pascal-lab.net/lectures.html">南京大学-软件分析</a></li>
<li>在线视频：<a href="https://www.bilibili.com/video/BV1b7411K7P4/?spm_id_from=333.788&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
</ul>
</blockquote>
<h4 id="3-北京大学-软件分析技术"><a href="#3-北京大学-软件分析技术" class="headerlink" title="3.北京大学-软件分析技术"></a>3.北京大学-软件分析技术</h4><blockquote>
<ul>
<li>简介：和南京大学的软件分析课程对比，该课主要讲授更加全面的程序分析理论与实践，难度也更大。</li>
<li>课程时间：43小时</li>
<li>课程官网：<a href="https://xiongyingfei.github.io/SA/2020/main.htm">北京大学-软件分析技术</a></li>
<li>在线视频：<a href="https://www.bilibili.com/video/BV1Rt4y1s7tC?p=1&vd_source=2a2c8e8b6c43765f922e5e18e4bd2e71">bilibili</a></li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>CS课程</category>
      </categories>
      <tags>
        <tag>CS课程</tag>
        <tag>软件工程</tag>
      </tags>
  </entry>
  <entry>
    <title>ChatGPT使用教程—开发者prompt分享</title>
    <url>/archives/96d6a719.html</url>
    <content><![CDATA[<h3 id="一、英语翻译"><a href="#一、英语翻译" class="headerlink" title="一、英语翻译"></a>一、英语翻译</h3><h4 id="1-充当英语翻译和改进者"><a href="#1-充当英语翻译和改进者" class="headerlink" title="1.充当英语翻译和改进者"></a>1.充当英语翻译和改进者</h4><blockquote>
<p>我希望你能担任英语翻译、拼写校对和修辞改进的角色。我会用任何语言和你交流，你会识别语言，将其翻译并用更为优美和精炼的英语回答我。请将我简单的词汇和句子替换成更为优美和高雅的表达方式，确保意思不变，但使其更具文学性。请仅回答更正和改进的部分，不要写解释。我的第一句话是“how are you ?”，请翻译它。</p>
</blockquote>
<h4 id="2-充当英翻中"><a href="#2-充当英翻中" class="headerlink" title="2.充当英翻中"></a>2.充当英翻中</h4><blockquote>
<p>下面我让你来充当翻译家，你的目标是把任何语言翻译成中文，请翻译时不要带翻译腔，而是要翻译得自然、流畅和地道，使用优美和高雅的表达方式。请翻译下面这句话：“how are you ?”</p>
</blockquote>
<h4 id="3-充当英英词典-附中文解释"><a href="#3-充当英英词典-附中文解释" class="headerlink" title="3.充当英英词典(附中文解释)"></a>3.充当英英词典(附中文解释)</h4><blockquote>
<p>将英文单词转换为包括中文翻译、英文释义和一个例句的完整解释。请检查所有信息是否准确，并在回答时保持简洁，不需要任何其他反馈。第一个单词是“Hello”</p>
</blockquote>
<h3 id="二、前端"><a href="#二、前端" class="headerlink" title="二、前端"></a>二、前端</h3><h4 id="1-作为-UX-UI-开发人员"><a href="#1-作为-UX-UI-开发人员" class="headerlink" title="1.作为 UX&#x2F;UI 开发人员"></a>1.作为 UX&#x2F;UI 开发人员</h4><blockquote>
<p>我希望你担任 UX&#x2F;UI 开发人员。我将提供有关应用程序、网站或其他数字产品设计的一些细节，而你的工作就是想出创造性的方法来改善其用户体验。这可能涉及创建原型设计原型、测试不同的设计并提供有关最佳效果的反馈。我的第一个请求是“我需要帮助为我的新移动应用程序设计一个直观的导航系统。”</p>
</blockquote>
<h4 id="2-担任-SVG-设计师"><a href="#2-担任-SVG-设计师" class="headerlink" title="2.担任 SVG 设计师"></a>2.担任 SVG 设计师</h4><blockquote>
<p>我希望你担任 SVG 设计师。我会要求你创建图像，你会为图像提供 SVG 代码，将代码转换为 base64 数据 url，然后给我一个仅包含引用该数据 url 的降价图像标签的响应。不要将 markdown 放在代码块中。只发送降价，所以没有文本。我的第一个请求是：给我一个红色圆圈的图像。</p>
</blockquote>
<h4 id="3-担任网页设计顾问"><a href="#3-担任网页设计顾问" class="headerlink" title="3.担任网页设计顾问"></a>3.担任网页设计顾问</h4><blockquote>
<p>我想让你担任网页设计顾问。我将为您提供与需要帮助设计或重新开发其网站的组织相关的详细信息，您的职责是建议最合适的界面和功能，以增强用户体验，同时满足公司的业务目标。您应该利用您在 UX&#x2F;UI 设计原则、编码语言、网站开发工具等方面的知识，以便为项目制定一个全面的计划。我的第一个请求是“我需要帮助创建一个销售珠宝的电子商务网站”。</p>
</blockquote>
<h4 id="4-充当-JavaScript-控制台"><a href="#4-充当-JavaScript-控制台" class="headerlink" title="4.充当 JavaScript 控制台"></a>4.充当 JavaScript 控制台</h4><blockquote>
<p>我希望你充当 javascript 控制台。我将键入命令，您将回复 javascript 控制台应显示的内容。我希望您只在一个唯一的代码块内回复终端输出，而不是其他任何内容。不要写解释。除非我指示您这样做。我的第一个命令是 console.log(&quot;Hello World&quot;);</p>
</blockquote>
<h4 id="5-充当前端智能思路助手"><a href="#5-充当前端智能思路助手" class="headerlink" title="5.充当前端智能思路助手"></a>5.充当前端智能思路助手</h4><blockquote>
<p>我想让你充当前端开发专家。我将提供一些关于Js、Node等前端代码问题的具体信息，而你的工作就是想出为我解决问题的策略。这可能包括建议代码、代码逻辑思路策略。我的第一个请求是“我需要能够动态监听某个元素节点距离当前电脑设备屏幕的左上角的X和Y轴，通过拖拽移动位置浏览器窗口和改变大小浏览器窗口。”</p>
</blockquote>
<h4 id="6-担任高级前端开发人员"><a href="#6-担任高级前端开发人员" class="headerlink" title="6.担任高级前端开发人员"></a>6.担任高级前端开发人员</h4><blockquote>
<p>我希望你担任高级前端开发人员。我将描述您将使用以下工具编写项目代码的项目详细信息：Create React App、yarn、Ant Design、List、Redux Toolkit、createSlice、thunk、axios。您应该将文件合并到单个 index.js 文件中，别无其他。不要写解释。我的第一个请求是“创建 Pokemon 应用程序，列出带有来自 PokeAPI 精灵端点的图像的宠物小精灵”</p>
</blockquote>
<h3 id="三、软件开发"><a href="#三、软件开发" class="headerlink" title="三、软件开发"></a>三、软件开发</h3><h4 id="1-担任产品经理"><a href="#1-担任产品经理" class="headerlink" title="1.担任产品经理"></a>1.担任产品经理</h4><blockquote>
<p>请确认我的以下请求。请您作为产品经理回复我。我将会提供一个主题，您将帮助我编写一份包括以下章节标题的PRD文档：主题、简介、问题陈述、目标与目的、用户故事、技术要求、收益、KPI指标、开发风险以及结论。在我要求具体主题、功能或开发的PRD之前，请不要先写任何一份PRD文档。</p>
</blockquote>
<h4 id="2-作为-IT-架构师"><a href="#2-作为-IT-架构师" class="headerlink" title="2.作为 IT 架构师"></a>2.作为 IT 架构师</h4><blockquote>
<p>我希望你担任 IT 架构师。我将提供有关应用程序或其他数字产品功能的一些详细信息，而您的工作是想出将其集成到 IT 环境中的方法。这可能涉及分析业务需求、执行差距分析以及将新系统的功能映射到现有 IT 环境。接下来的步骤是创建解决方案设计、物理网络蓝图、系统集成接口定义和部署环境蓝图。我的第一个请求是“我需要帮助来集成 CMS 系统”。</p>
</blockquote>
<h4 id="3-充当全栈软件开发人员"><a href="#3-充当全栈软件开发人员" class="headerlink" title="3.充当全栈软件开发人员"></a>3.充当全栈软件开发人员</h4><blockquote>
<p>我想让你充当软件开发人员。我将提供一些关于 Web 应用程序要求的具体信息，您的工作是提出用于使用 Golang 和 Angular 开发安全应用程序的架构和代码。我的第一个要求是’我想要一个允许用户根据他们的角色注册和保存他们的车辆信息的系统，并且会有管理员，用户和公司角色。我希望系统使用 JWT 来确保安全。</p>
</blockquote>
<h4 id="4-充当正则表达式生成器"><a href="#4-充当正则表达式生成器" class="headerlink" title="4.充当正则表达式生成器"></a>4.充当正则表达式生成器</h4><blockquote>
<p>我希望你充当正则表达式生成器。您的角色是生成匹配文本中特定模式的正则表达式。您应该以一种可以轻松复制并粘贴到支持正则表达式的文本编辑器或编程语言中的格式提供正则表达式。不要写正则表达式如何工作的解释或例子；只需提供正则表达式本身。我的第一个提示是生成一个匹配电子邮件地址的正则表达式。</p>
</blockquote>
<h4 id="5-担任开发者关系顾问"><a href="#5-担任开发者关系顾问" class="headerlink" title="5.担任开发者关系顾问"></a>5.担任开发者关系顾问</h4><blockquote>
<p>我想让你担任开发者关系顾问。我会给你一个软件包和它的相关文档。研究软件包及其可用文档，如果找不到，请回复“无法找到文档”。您的反馈需要包括定量分析（使用来自 StackOverflow、Hacker News 和 GitHub 的数据）内容，例如提交的问题、已解决的问题、存储库中的星数以及总体 StackOverflow 活动。如果有可以扩展的领域，请包括应添加的场景或上下文。包括所提供软件包的详细信息，例如下载次数以及一段时间内的相关统计数据。你应该比较工业竞争对手和封装时的优点或缺点。从软件工程师的专业意见的思维方式来解决这个问题。查看技术博客和网站（例如 TechCrunch.com 或 Crunchbase.com），如果数据不可用，请回复“无数据可用”。我的第一个要求是“express <a href="https://expressjs.com/">https://expressjs.com</a> ”</p>
</blockquote>
<h4 id="6-作为技术审查员"><a href="#6-作为技术审查员" class="headerlink" title="6.作为技术审查员"></a>6.作为技术审查员</h4><blockquote>
<p>我想让你担任技术评论员。我会给你一项新技术的名称，你会向我提供深入的评论 - 包括优点、缺点、功能以及与市场上其他技术的比较。我的第一个建议请求是“我正在审查 iPhone 11 Pro Max”。</p>
</blockquote>
<h4 id="7-作为网络安全专家"><a href="#7-作为网络安全专家" class="headerlink" title="7.作为网络安全专家"></a>7.作为网络安全专家</h4><blockquote>
<p>我想让你充当网络安全专家。我将提供一些关于如何存储和共享数据的具体信息，而你的工作就是想出保护这些数据免受恶意行为者攻击的策略。这可能包括建议加密方法、创建防火墙或实施将某些活动标记为可疑的策略。我的第一个请求是“我需要帮助为我的公司制定有效的网络安全战略。”</p>
</blockquote>
<h3 id="四、数据库与服务器"><a href="#四、数据库与服务器" class="headerlink" title="四、数据库与服务器"></a>四、数据库与服务器</h3><h4 id="1-充当-SQL-终端"><a href="#1-充当-SQL-终端" class="headerlink" title="1.充当 SQL 终端"></a>1.充当 SQL 终端</h4><blockquote>
<p>我希望您在示例数据库前充当 SQL 终端。该数据库包含名为“Products”、“Users”、“Orders”和“Suppliers”的表。我将输入查询，您将回复终端显示的内容。我希望您在单个代码块中使用查询结果表进行回复，仅此而已。不要写解释。除非我指示您这样做，否则不要键入命令。当我需要用英语告诉你一些事情时，我会用大括号{like this)。我的第一个命令是“SELECT TOP 10 * FROM Products ORDER BY Id DESC”</p>
</blockquote>
<h4 id="2-作为专业DBA"><a href="#2-作为专业DBA" class="headerlink" title="2.作为专业DBA"></a>2.作为专业DBA</h4><blockquote>
<p>我要你扮演一个专业DBA。我将提供给你数据表结构以及我的需求，你的目标是告知我性能最优的可执行的SQL语句，并尽可能的向我解释这段SQL语句，如果有更好的优化建议也可以提出来。\n&gt;\n&gt; 我的数据表结构为:\n&gt; <code>mysql\n&gt; CREATE TABLE `user` (\n&gt; `id` int NOT NULL AUTO_INCREMENT,\n&gt; `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT &#39;&#39; COMMENT &#39;名字&#39;,\n&gt; PRIMARY KEY (`id`)\n&gt; ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT=&#39;用户表&#39;;\n&gt;</code>\n&gt; 我的需求为:根据用户的名字查询用户的id</p>
</blockquote>
<h4 id="3-充当-Linux-终端"><a href="#3-充当-Linux-终端" class="headerlink" title="3.充当 Linux 终端"></a>3.充当 Linux 终端</h4><blockquote>
<p>我想让你充当 Linux 终端。我将输入命令，您将回复终端应显示的内容。我希望您只在一个唯一的代码块内回复终端输出，而不是其他任何内容。不要写解释。除非我指示您这样做，否则不要键入命令。当我需要用英语告诉你一些事情时，我会把文字放在中括号内[就像这样]。我的第一个命令是 pwd</p>
</blockquote>
<h4 id="4-充当-Solr-搜索引擎"><a href="#4-充当-Solr-搜索引擎" class="headerlink" title="4.充当 Solr 搜索引擎"></a>4.充当 Solr 搜索引擎</h4><blockquote>
<p>我希望您充当以独立模式运行的 Solr 搜索引擎。您将能够在任意字段中添加内联 JSON 文档，数据类型可以是整数、字符串、浮点数或数组。插入文档后，您将更新索引，以便我们可以通过在花括号之间用逗号分隔的 SOLR 特定查询来检索文档，如 {q&#x3D;’title:Solr’, sort&#x3D;’score asc’}。您将在编号列表中提供三个命令。第一个命令是“添加到”，后跟一个集合名称，这将让我们将内联 JSON 文档填充到给定的集合中。第二个选项是“搜索”，后跟一个集合名称。第三个命令是“show”，列出可用的核心以及圆括号内每个核心的文档数量。不要写引擎如何工作的解释或例子。您的第一个提示是显示编号列表并创建两个分别称为“prompts”和“eyay”的空集合。</p>
</blockquote>
<h3 id="五、技术问答"><a href="#五、技术问答" class="headerlink" title="五、技术问答"></a>五、技术问答</h3><h4 id="1-作为-IT-专家"><a href="#1-作为-IT-专家" class="headerlink" title="1.作为 IT 专家"></a>1.作为 IT 专家</h4><blockquote>
<p>我希望你充当 IT 专家。我会向您提供有关我的技术问题所需的所有信息，而您的职责是解决我的问题。你应该使用你的计算机科学、网络基础设施和 IT 安全知识来解决我的问题。在您的回答中使用适合所有级别的人的智能、简单和易于理解的语言将很有帮助。用要点逐步解释您的解决方案很有帮助。尽量避免过多的技术细节，但在必要时使用它们。我希望您回复解决方案，而不是写任何解释。我的第一个问题是“我的笔记本电脑出现蓝屏错误”。</p>
</blockquote>
<h4 id="2-充当-StackOverflow-帖子"><a href="#2-充当-StackOverflow-帖子" class="headerlink" title="2.充当 StackOverflow 帖子"></a>2.充当 StackOverflow 帖子</h4><blockquote>
<p>我想让你充当 stackoverflow 的帖子。我会问与编程相关的问题，你会回答应该是什么答案。我希望你只回答给定的答案，并在不够详细的时候写解释。不要写解释。当我需要用英语告诉你一些事情时，我会把文字放在大括号内{like this}。我的第一个问题是“如何将 http.Request 的主体读取到 Golang 中的字符串”</p>
</blockquote>
<h4 id="3-担任机器学习工程师"><a href="#3-担任机器学习工程师" class="headerlink" title="3.担任机器学习工程师"></a>3.担任机器学习工程师</h4><blockquote>
<p>我想让你担任机器学习工程师。我会写一些机器学习的概念，你的工作就是用通俗易懂的术语来解释它们。这可能包括提供构建模型的分步说明、使用视觉效果演示各种技术，或建议在线资源以供进一步研究。我的第一个建议请求是“我有一个没有标签的数据集。我应该使用哪种机器学习算法？”</p>
</blockquote>
<h4 id="4-担任创业技术律师"><a href="#4-担任创业技术律师" class="headerlink" title="4.担任创业技术律师"></a>4.担任创业技术律师</h4><blockquote>
<p>我将要求您准备一页纸的设计合作伙伴协议草案，该协议是一家拥有 IP 的技术初创公司与该初创公司技术的潜在客户之间的协议，该客户为该初创公司正在解决的问题空间提供数据和领域专业知识。您将写下大约 1 a4 页的拟议设计合作伙伴协议，涵盖 IP、机密性、商业权利、提供的数据、数据的使用等所有重要方面。</p>
</blockquote>
]]></content>
      <categories>
        <category>ChatGPT</category>
      </categories>
      <tags>
        <tag>ChatGPT</tag>
        <tag>prompt</tag>
      </tags>
  </entry>
  <entry>
    <title>ChatGPT注册教程和常见问题</title>
    <url>/archives/89836cff.html</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>ChatGPT，全称聊天生成预训练转换器（Chat Generative Pre-trained Transformer），是OpenAI开发的人工智能聊天机器人程序，于2022年11月发布后，上线5天即有100万用户注册，两个月后在全球拥有上亿用户使用。</p>
<h3 id="注冊流程"><a href="#注冊流程" class="headerlink" title="注冊流程"></a>注冊流程</h3><h4 id="1-将代理IP切换成服务提供地区"><a href="#1-将代理IP切换成服务提供地区" class="headerlink" title="1.将代理IP切换成服务提供地区"></a>1.将代理IP切换成服务提供地区</h4><blockquote>
<p>注：必须是美国、加拿大等国外IP，其中香港、澳门IP是不行的，且后续整个注册流程都必须在此网络环境下进行。</p>
</blockquote>
<h4 id="2-打开注册链接：https-chat-openai-com-auth-login，使用自己的邮箱进行账号注册"><a href="#2-打开注册链接：https-chat-openai-com-auth-login，使用自己的邮箱进行账号注册" class="headerlink" title="2.打开注册链接：https://chat.openai.com/auth/login，使用自己的邮箱进行账号注册"></a>2.打开注册链接：<a href="https://chat.openai.com/auth/login">https://chat.openai.com/auth/login</a>，使用自己的邮箱进行账号注册</h4><blockquote>
<p>注：QQ邮箱、网易126邮可注册，但最好是使用谷歌邮箱、微软邮箱，其中网易163邮箱无法注册。</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/gpt11111.jpg" alt="gpt1"></p>
<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/gpt22222.jpg" alt="gpt2"></p>
<h4 id="3-打开邮箱查收-OpenAI-账号验证邮件，点击验证按钮完成邮箱验证"><a href="#3-打开邮箱查收-OpenAI-账号验证邮件，点击验证按钮完成邮箱验证" class="headerlink" title="3.打开邮箱查收 OpenAI 账号验证邮件，点击验证按钮完成邮箱验证"></a>3.打开邮箱查收 OpenAI 账号验证邮件，点击验证按钮完成邮箱验证</h4><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/gpt33333.jpg" alt="gpt3"></p>
<h4 id="4-邮箱验证完成后，还需要进行手机短信验证（重点！），才能开始使用ChatGPT"><a href="#4-邮箱验证完成后，还需要进行手机短信验证（重点！），才能开始使用ChatGPT" class="headerlink" title="4.邮箱验证完成后，还需要进行手机短信验证（重点！），才能开始使用ChatGPT"></a>4.邮箱验证完成后，还需要进行手机短信验证（重点！），才能开始使用ChatGPT</h4><blockquote>
<p>注：国内和港澳的手机号码还有Google Voice的虚拟号码都是不能使用的。</p>
</blockquote>
<h4 id="5-使用第三方接码平台通过验证，推荐使用接码服务"><a href="#5-使用第三方接码平台通过验证，推荐使用接码服务" class="headerlink" title="5.使用第三方接码平台通过验证，推荐使用&lt;sms-activate.org&gt;接码服务"></a>5.使用第三方接码平台通过验证，推荐使用&lt;sms-activate.org&gt;接码服务</h4><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/xin33333.jpg" alt="xin3"></p>
<h4 id="6-注册sms-activate-org账号并完成邮箱验证"><a href="#6-注册sms-activate-org账号并完成邮箱验证" class="headerlink" title="6.注册sms-activate.org账号并完成邮箱验证"></a>6.注册sms-activate.org账号并完成邮箱验证</h4><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/xin44444.jpg" alt="xin4"></p>
<h4 id="7-登录sms-activate后，在网页右上角点击充值"><a href="#7-登录sms-activate后，在网页右上角点击充值" class="headerlink" title="7.登录sms-activate后，在网页右上角点击充值"></a>7.登录sms-activate后，在网页右上角点击充值</h4><blockquote>
<p>注：支持多种支付方式，含支付宝充值渠道，充值最低付款金额即可。</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/xin55555.jpg" alt="xin5"></p>
<h4 id="8-充值到账后，返回首页在服务选择输入openAI，找到OpenAI短信验证服务的号码购买区"><a href="#8-充值到账后，返回首页在服务选择输入openAI，找到OpenAI短信验证服务的号码购买区" class="headerlink" title="8.充值到账后，返回首页在服务选择输入openAI，找到OpenAI短信验证服务的号码购买区"></a>8.充值到账后，返回首页在服务选择输入<code>openAI</code>，找到OpenAI短信验证服务的号码购买区</h4><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/xin66666.jpg" alt="xin6"></p>
<h4 id="9-推荐选择与网络环境一致地区的临时号码"><a href="#9-推荐选择与网络环境一致地区的临时号码" class="headerlink" title="9.推荐选择与网络环境一致地区的临时号码"></a>9.推荐选择与网络环境一致地区的临时号码</h4><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/xin77777.jpg" alt="xin7"></p>
<h4 id="10-在右侧激活区，复制提供的临时号码到OpenAI的短信验证页面（有时sms平台短信接收比较慢，需要耐心等待）"><a href="#10-在右侧激活区，复制提供的临时号码到OpenAI的短信验证页面（有时sms平台短信接收比较慢，需要耐心等待）" class="headerlink" title="10.在右侧激活区，复制提供的临时号码到OpenAI的短信验证页面（有时sms平台短信接收比较慢，需要耐心等待）"></a>10.在右侧激活区，复制提供的临时号码到OpenAI的短信验证页面（有时sms平台短信接收比较慢，需要耐心等待）</h4><blockquote>
<p>注：临时号码是包含国家代码的。例如：下图的美国手机号+13618639843，在网站上填写手机号时，需要去掉前面的<code>1</code>这个国别代码。</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/xin88888.jpg" alt="xin8"></p>
<h4 id="11-注册完毕后，就可以使用账号登录ChatGPT官网：https-chat-openai-com-auth-login，愉快的使用啦！"><a href="#11-注册完毕后，就可以使用账号登录ChatGPT官网：https-chat-openai-com-auth-login，愉快的使用啦！" class="headerlink" title="11.注册完毕后，就可以使用账号登录ChatGPT官网：https://chat.openai.com/auth/login，愉快的使用啦！"></a>11.注册完毕后，就可以使用账号登录ChatGPT官网：<a href="https://chat.openai.com/auth/login">https://chat.openai.com/auth/login</a>，愉快的使用啦！</h4><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/xin99999.jpg" alt="xin9"></p>
<h3 id="常见注册问题"><a href="#常见注册问题" class="headerlink" title="常见注册问题"></a>常见注册问题</h3><h4 id="1-注册OpenAI账号遇到”Signup-is-currently-unavailable-please-try-again-later”"><a href="#1-注册OpenAI账号遇到”Signup-is-currently-unavailable-please-try-again-later”" class="headerlink" title="1.注册OpenAI账号遇到”Signup is currently unavailable, please try again later”"></a>1.注册OpenAI账号遇到”Signup is currently unavailable, please try again later”</h4><blockquote>
<p>解决办法：使用的注册邮箱有问题，最好使用谷歌、微软邮箱。</p>
</blockquote>
<h4 id="2-登录OpanAI-账号遇到”Not-available-OpenAI’s-service-are-not-available-in-your-country”"><a href="#2-登录OpanAI-账号遇到”Not-available-OpenAI’s-service-are-not-available-in-your-country”" class="headerlink" title="2.登录OpanAI 账号遇到”Not available, OpenAI’s service are not available in your country”"></a>2.登录OpanAI 账号遇到”Not available, OpenAI’s service are not available in your country”</h4><blockquote>
<p>解决办法：地区限制造成的，切换代理节点并刷新页面重试，根据经验，日本、韩国和欧洲的成功率高。</p>
</blockquote>
<h4 id="3-登录chatgpt网站-遇到”Access-denied-You-do-not-have-access-to-chat-openai-com-…-Error-reference-number-1020”错误"><a href="#3-登录chatgpt网站-遇到”Access-denied-You-do-not-have-access-to-chat-openai-com-…-Error-reference-number-1020”错误" class="headerlink" title="3.登录chatgpt网站,遇到”Access denied, You do not have access to chat.openai.com … Error reference number 1020”错误"></a>3.登录chatgpt网站,遇到”Access denied, You do not have access to chat.openai.com … Error reference number 1020”错误</h4><blockquote>
<p>解决办法：也是地区限制造成的，通过切换代理节点来解决，目前日本、欧洲的节点稳定。</p>
</blockquote>
<h4 id="4-使用ChatGPT过程中，遇到错误-“Too-many-requests-in-1-hour-Try-again-later”"><a href="#4-使用ChatGPT过程中，遇到错误-“Too-many-requests-in-1-hour-Try-again-later”" class="headerlink" title="4.使用ChatGPT过程中，遇到错误: “Too many requests in 1 hour. Try again later”"></a>4.使用ChatGPT过程中，遇到错误: “Too many requests in 1 hour. Try again later”</h4><blockquote>
<p>1小时内请求超次数了，被暂时限制</p>
</blockquote>
<h4 id="5-使用ChatGPT过程中，遇到错误-“An-error-occurred。-If-this-issue-persists-please-contact-us-through-our-help-center-athelp-openai-com”"><a href="#5-使用ChatGPT过程中，遇到错误-“An-error-occurred。-If-this-issue-persists-please-contact-us-through-our-help-center-athelp-openai-com”" class="headerlink" title="5.使用ChatGPT过程中，遇到错误: “An error occurred。 If this issue persists please contact us through our help center athelp.openai.com”"></a>5.使用ChatGPT过程中，遇到错误: “An error occurred。 If this issue persists please contact us through our help center athelp.openai.com”</h4><blockquote>
<p>服务器不稳定</p>
</blockquote>
<h4 id="6-使用ChatGPT过程中，遇到错误-“Too-many-requests-Please-slow-down”"><a href="#6-使用ChatGPT过程中，遇到错误-“Too-many-requests-Please-slow-down”" class="headerlink" title="6.使用ChatGPT过程中，遇到错误: “Too many requests. Please slow down”"></a>6.使用ChatGPT过程中，遇到错误: “Too many requests. Please slow down”</h4><blockquote>
<p>请求太多，服务器爆了</p>
</blockquote>
<h4 id="7-使用ChatGPT过程中，遇到错误-“An-error-occurred-Either-the-engine-you-requested-does-not-exist-or-there-was-another-issue-processing-your-request-If-this-issue-persists-please-contact-us-through-our-help-center-at-help-openai-com-”"><a href="#7-使用ChatGPT过程中，遇到错误-“An-error-occurred-Either-the-engine-you-requested-does-not-exist-or-there-was-another-issue-processing-your-request-If-this-issue-persists-please-contact-us-through-our-help-center-at-help-openai-com-”" class="headerlink" title="7.使用ChatGPT过程中，遇到错误: “An error occurred. Either the engine you requested does not exist or there was another issue processing your request. If this issue persists please contact us through our help center at help.openai.com.”"></a>7.使用ChatGPT过程中，遇到错误: “An error occurred. Either the engine you requested does not exist or there was another issue processing your request. If this issue persists please contact us through our help center at help.openai.com.”</h4><blockquote>
<p>服务器不稳定，未知错误</p>
</blockquote>
<h4 id="8-使用ChatGPT过程中，遇到错误-“That-model-is-currently-overloaded-with-other-requests-You-can-retry-your-request-or-contact-us-through-our-help-center-at-help-openai-com-if-the-error-persists-Please-include-the-request-ID-xxxxx-in-your-message"><a href="#8-使用ChatGPT过程中，遇到错误-“That-model-is-currently-overloaded-with-other-requests-You-can-retry-your-request-or-contact-us-through-our-help-center-at-help-openai-com-if-the-error-persists-Please-include-the-request-ID-xxxxx-in-your-message" class="headerlink" title="8.使用ChatGPT过程中，遇到错误: “That model is currently overloaded with other requests. You can retry your request, or contact us through our help center at help.openai.com if the error persists. (Please include the request ID xxxxx in your.message.)"></a>8.使用ChatGPT过程中，遇到错误: “That model is currently overloaded with other requests. You can retry your request, or contact us through our help center at help.openai.com if the error persists. (Please include the request ID xxxxx in your.message.)</h4><blockquote>
<p>也是服务器不稳定，未知错误</p>
</blockquote>
]]></content>
      <categories>
        <category>ChatGPT</category>
      </categories>
      <tags>
        <tag>ChatGPT</tag>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title>Github+PicGo+jsDelivr自建图床</title>
    <url>/archives/229b7d1f.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>目前市面上的主流图床服务，SM.MS、Imgur等国外知名图床被墙，国内大部分知名图床服务也限制颇多，其他小众图床又随时有跑路的风险。因此，通过 GitHub+PicGo 搭建自己的图床，利用 jsDelivr 进行加速访问，是目前免费图床的最佳解决方案！</p>
<blockquote>
<ul>
<li>GitHub：全球最大的在线软件源代码托管服务平台</li>
<li>PicGo：开源的图床上转软件</li>
<li>jsDelivr：免费开源的CDN解决方案</li>
</ul>
</blockquote>
<h2 id="一、新建GitHub仓库：https-github-com"><a href="#一、新建GitHub仓库：https-github-com" class="headerlink" title="一、新建GitHub仓库：https://github.com/"></a>一、新建GitHub仓库：<a href="https://github.com/">https://github.com/</a></h2><h4 id="1-登录-注册GitHub，创建一个新的项目仓库"><a href="#1-登录-注册GitHub，创建一个新的项目仓库" class="headerlink" title="1.登录&#x2F;注册GitHub，创建一个新的项目仓库"></a>1.登录&#x2F;注册GitHub，创建一个新的项目仓库</h4><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/xinjian1353.jpg" alt="新建仓库"></p>
<h4 id="2-填写仓库名（如-image），仓库描述（如-图床），仓库为public，添加自述，其他保持默认选项"><a href="#2-填写仓库名（如-image），仓库描述（如-图床），仓库为public，添加自述，其他保持默认选项" class="headerlink" title="2.填写仓库名（如:image），仓库描述（如:图床），仓库为public，添加自述，其他保持默认选项"></a>2.填写仓库名（如:image），仓库描述（如:图床），仓库为public，添加自述，其他保持默认选项</h4><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/kushe2523452.jpg" alt="配置仓库"></p>
<h4 id="3-GitHub账号生成一个Token，用于PicGo访问图床仓库"><a href="#3-GitHub账号生成一个Token，用于PicGo访问图床仓库" class="headerlink" title="3.GitHub账号生成一个Token，用于PicGo访问图床仓库"></a>3.GitHub账号生成一个Token，用于PicGo访问图床仓库</h4><blockquote>
<p>主页选择Settings → 拉到设置页最底下，点击Developer settings → Personal access tokens → Tokens (classic) → Generate new token → Generate new token (classic) → 填写Note名：PicGo → Expiration 改成 No expiration（永不过期） → 勾选repo（授予权限） → Generate token<br>注意：Token只会显示一次，最好复制并保存好，方便后期使用该Token。<br><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/token15993468.jpg" alt="Token1"></p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/token2643632.jpg" alt="Token2"></p>
<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/token354654.jpg" alt="Token3"></p>
<h2 id="二、下载PicGo：https-github-com-Molunerfinn-PicGo-releases"><a href="#二、下载PicGo：https-github-com-Molunerfinn-PicGo-releases" class="headerlink" title="二、下载PicGo：https://github.com/Molunerfinn/PicGo/releases"></a>二、下载PicGo：<a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a></h2><blockquote>
<p>注意：Windows系统下载64位的exe可执行程序<br><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/picgo1523452.jpg" alt="picgo"></p>
</blockquote>
<h2 id="三、PicGo和jsdelivr"><a href="#三、PicGo和jsdelivr" class="headerlink" title="三、PicGo和jsdelivr"></a>三、PicGo和jsdelivr</h2><h4 id="1-jsdelivr"><a href="#1-jsdelivr" class="headerlink" title="1.jsdelivr"></a>1.jsdelivr</h4><p>通常，我们使用 GitHub 的域名访问图片加载速度较慢，有时甚至无法加载出来，因此我们要使用 jsDelivr 加速访问。配置 jsDelivr 加速图床访问，只需将“设定自定义域名”中的 URL 替换为 jsDelivr 的 URL 即可。</p>
<blockquote>
<p>例如：<code>https://cdn.jsdelivr.net/gh/GitHub仓库地址</code><br>示例：<code>https://cdn.jsdelivr.net/gh/Wyatt-404/image</code></p>
</blockquote>
<h4 id="2-PicGo"><a href="#2-PicGo" class="headerlink" title="2.PicGo"></a>2.PicGo</h4><blockquote>
<p>点击插件设置 → 搜索安装 gitHub-plus 插件（支持Github同步操作）<br>点击图床设置 → 下拉，点击githubPlus → 编辑Default<br>图床配置名：image<br>геро(仓库): Wyatt-404&#x2F;image<br>branch(分支): main<br>Token(令牌): XXX<br>path(存储路径): test&#x2F;<br>customUrl(自定义域名): <code>https://cdn.jsdelivr.net/gh/Wyatt-404/image</code></p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/picgo2147853.jpg" alt="配置picgo"></p>
]]></content>
      <categories>
        <category>站长工具</category>
      </categories>
      <tags>
        <tag>图床</tag>
        <tag>Github</tag>
        <tag>PicGo</tag>
      </tags>
  </entry>
  <entry>
    <title>Python3爬虫使用教程</title>
    <url>/archives/60f58722.html</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><h4 id="Python3爬虫可以模拟浏览器的行为，访问网页并从中提取数据。主要应用在数据采集、搜索引擎优化、价格比较、舆情分析等领域。工作流程："><a href="#Python3爬虫可以模拟浏览器的行为，访问网页并从中提取数据。主要应用在数据采集、搜索引擎优化、价格比较、舆情分析等领域。工作流程：" class="headerlink" title="Python3爬虫可以模拟浏览器的行为，访问网页并从中提取数据。主要应用在数据采集、搜索引擎优化、价格比较、舆情分析等领域。工作流程："></a>Python3爬虫可以模拟浏览器的行为，访问网页并从中提取数据。主要应用在数据采集、搜索引擎优化、价格比较、舆情分析等领域。工作流程：</h4><blockquote>
<p>1.首先发送HTTP请求到目标网站，可以通过Python的requests库实现。<br>2.解析HTML内容，从中提取有用的信息。常用解析库：<code>BeautifulSoup</code>和<code>lxml</code><br>3.选择合适的爬虫框架来简化任务。推荐流行框架：<code>Scrapy</code><br>4.使用爬虫框架，定义爬取规则和提取数据的方式。<br>5.存储和处理数据</p>
</blockquote>
<h3 id="安装Python和pip"><a href="#安装Python和pip" class="headerlink" title="安装Python和pip"></a>安装Python和pip</h3><h4 id="1-打开Python官网，点击-“Downloads”，选择操作系统，下载最新的Python3版本即可"><a href="#1-打开Python官网，点击-“Downloads”，选择操作系统，下载最新的Python3版本即可" class="headerlink" title="1.打开Python官网，点击 “Downloads”，选择操作系统，下载最新的Python3版本即可"></a>1.打开<a href="https://www.python.org/">Python官网</a>，点击 “Downloads”，选择操作系统，下载最新的Python3版本即可</h4><blockquote>
<p>注：下载后运行可执行文件安装Python，一路默认。唯一要确保勾选”Add Python 3.x to PATH”选项，添加环境变量。</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/python385643.jpg" alt="插图1"></p>
<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/python385784.jpg" alt="插图2"></p>
<h4 id="2-Win-R-打开命令提示符（CMD），输入以下命令安装pip"><a href="#2-Win-R-打开命令提示符（CMD），输入以下命令安装pip" class="headerlink" title="2.Win+R 打开命令提示符（CMD），输入以下命令安装pip"></a>2.Win+R 打开命令提示符（CMD），输入以下命令安装pip</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装pip</span></span><br><span class="line">python -m ensurepip --default-pip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看安装版本</span></span><br><span class="line">pip --version</span><br></pre></td></tr></table></figure>

<h4 id="3-补充：Linux系统安装，以Ubuntu举例"><a href="#3-补充：Linux系统安装，以Ubuntu举例" class="headerlink" title="3.补充：Linux系统安装，以Ubuntu举例"></a>3.补充：Linux系统安装，以Ubuntu举例</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 多数Linux发行版都会预装Python3。如果没有，可以使用包管理器进行安装</span></span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install python3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 确认安装</span></span><br><span class="line">python3 --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装pip</span></span><br><span class="line">sudo apt install python3-pip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看安装版本</span></span><br><span class="line">pip3 --version</span><br></pre></td></tr></table></figure>

<h3 id="Scrapy安装和初始化"><a href="#Scrapy安装和初始化" class="headerlink" title="Scrapy安装和初始化"></a>Scrapy安装和初始化</h3><h4 id="1-Win-R-打开命令提示符（CMD），复制粘贴以下命令"><a href="#1-Win-R-打开命令提示符（CMD），复制粘贴以下命令" class="headerlink" title="1.Win+R 打开命令提示符（CMD），复制粘贴以下命令"></a>1.Win+R 打开命令提示符（CMD），复制粘贴以下命令</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 Scrapy</span></span><br><span class="line">pip install scrapy</span><br></pre></td></tr></table></figure>

<h4 id="2-在终端中，创建新的目录存放爬虫项目"><a href="#2-在终端中，创建新的目录存放爬虫项目" class="headerlink" title="2.在终端中，创建新的目录存放爬虫项目"></a>2.在终端中，创建新的目录存放爬虫项目</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 项目命名为&quot;my_scrapy_project&quot;</span></span><br><span class="line">scrapy startproject my_scrapy_project</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入新创建的项目目录</span></span><br><span class="line"><span class="built_in">cd</span> my_scrapy_project</span><br></pre></td></tr></table></figure>

<h4 id="补充：使用虚拟环境安装（推荐）"><a href="#补充：使用虚拟环境安装（推荐）" class="headerlink" title="补充：使用虚拟环境安装（推荐）"></a>补充：使用虚拟环境安装（推荐）</h4><blockquote>
<p>相比常规安装，使用虚拟环境安装有如下几个优点：</p>
<ul>
<li>隔离依赖：通过创建虚拟环境，可以在项目级别管理和安装依赖，而不会影响到系统级别的Python环境。</li>
<li>版本一致性：虚拟环境可以确保项目使用的是指定版本的Python解释器和第三方库，避免在不同环境中出现版本不一致的问题。</li>
<li>轻松迁移：使用虚拟环境便于将项目迁移到其它主机，无需担心依赖关系。</li>
<li>方便清理：不需要项目时，可以简单粗暴地删除虚拟环境文件夹，而无需担心对系统环境的影响。</li>
</ul>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Windows创建虚拟环境</span></span><br><span class="line">python -m venv venv</span><br><span class="line"></span><br><span class="line"><span class="comment"># 激活虚拟环境</span></span><br><span class="line">venv\Scripts\activate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在虚拟环境中，安装Scrapy</span></span><br><span class="line">pip install scrapy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建新的Scrapy项目，项目名&quot;my_spider_project&quot;</span></span><br><span class="line">scrapy startproject my_spider_project</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入新创建的项目目录</span></span><br><span class="line"><span class="built_in">cd</span> my_scrapy_project </span><br></pre></td></tr></table></figure>

<h4 id="3-在项目目录下，创建爬虫"><a href="#3-在项目目录下，创建爬虫" class="headerlink" title="3.在项目目录下，创建爬虫"></a>3.在项目目录下，创建爬虫</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 爬虫名&quot;example_spider&quot;，要爬取的初始网址&quot;example.com&quot;</span></span><br><span class="line">scrapy genspider example_spider example.com</span><br></pre></td></tr></table></figure>

<h4 id="4-编辑爬虫规则：my-scrapy-project-spiders-example-spider-py"><a href="#4-编辑爬虫规则：my-scrapy-project-spiders-example-spider-py" class="headerlink" title="4.编辑爬虫规则：my_scrapy_project/spiders/example_spider.py"></a>4.编辑爬虫规则：<code>my_scrapy_project/spiders/example_spider.py</code></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用文本编辑器打开</span></span><br><span class="line">code my_scrapy_project/spiders/example_spider.py</span><br></pre></td></tr></table></figure>

<h4 id="5-运行爬虫"><a href="#5-运行爬虫" class="headerlink" title="5.运行爬虫"></a>5.运行爬虫</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># &quot;example_spider&quot;替换为自建的爬虫名</span></span><br><span class="line">scrapy crawl example_spider</span><br></pre></td></tr></table></figure>

<h3 id="以豆瓣图书为例，一个完整的Scrapy项目"><a href="#以豆瓣图书为例，一个完整的Scrapy项目" class="headerlink" title="以豆瓣图书为例，一个完整的Scrapy项目"></a>以<a href="https://book.douban.com/">豆瓣图书</a>为例，一个完整的Scrapy项目</h3><h3 id="一、项目结构"><a href="#一、项目结构" class="headerlink" title="一、项目结构"></a>一、项目结构</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">my_douban_books_project/</span><br><span class="line">│</span><br><span class="line">├── my_douban_books_spider/</span><br><span class="line">│   ├── __init__.py</span><br><span class="line">│   ├── items.py</span><br><span class="line">│   ├── middlewares.py</span><br><span class="line">│   ├── pipelines.py</span><br><span class="line">│   ├── settings.py</span><br><span class="line">│   └── spiders/</span><br><span class="line">│       ├── __init__.py</span><br><span class="line">│       └── douban_books_spider.py</span><br><span class="line">│</span><br><span class="line">└── scrapy.cfg</span><br></pre></td></tr></table></figure>

<h3 id="二、文件说明"><a href="#二、文件说明" class="headerlink" title="二、文件说明"></a>二、文件说明</h3><h4 id="1-定义爬虫需要提取的数据结构：my-douban-books-spider-items-py"><a href="#1-定义爬虫需要提取的数据结构：my-douban-books-spider-items-py" class="headerlink" title="1.定义爬虫需要提取的数据结构：my_douban_books_spider/items.py"></a>1.定义爬虫需要提取的数据结构：<code>my_douban_books_spider/items.py</code></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyDoubanBooksProjectItem</span>(scrapy.Item):</span><br><span class="line">    title = scrapy.Field()</span><br><span class="line">    author = scrapy.Field()</span><br></pre></td></tr></table></figure>

<h4 id="2-编辑爬虫文件：my-douban-books-spider-spiders-douban-books-spider-py"><a href="#2-编辑爬虫文件：my-douban-books-spider-spiders-douban-books-spider-py" class="headerlink" title="2.编辑爬虫文件：my_douban_books_spider/spiders/douban_books_spider.py"></a>2.编辑爬虫文件：<code>my_douban_books_spider/spiders/douban_books_spider.py</code></h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 爬取豆瓣图书上的书名和作者信息</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> my_douban_books_spider.items <span class="keyword">import</span> MyDoubanBooksProjectItem</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DoubanBooksSpider</span>(scrapy.Spider):</span><br><span class="line">    name = <span class="string">&#x27;douban_books&#x27;</span></span><br><span class="line">    start_urls = [<span class="string">&#x27;https://book.douban.com/&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse</span>(<span class="params">self, response</span>):</span><br><span class="line">        <span class="keyword">for</span> book <span class="keyword">in</span> response.css(<span class="string">&#x27;li.subject-item&#x27;</span>):</span><br><span class="line">            item = MyDoubanBooksProjectItem()</span><br><span class="line">            item[<span class="string">&#x27;title&#x27;</span>] = book.css(<span class="string">&#x27;h2 span::text&#x27;</span>).get()</span><br><span class="line">            item[<span class="string">&#x27;author&#x27;</span>] = book.css(<span class="string">&#x27;.pub::text&#x27;</span>).get()</span><br><span class="line">            <span class="keyword">yield</span> item</span><br><span class="line"></span><br><span class="line">        next_page = response.css(<span class="string">&#x27;span.next a::attr(href)&#x27;</span>).get()</span><br><span class="line">        <span class="keyword">if</span> next_page <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">yield</span> response.follow(next_page, self.parse)</span><br></pre></td></tr></table></figure>

<h4 id="3-配置可选项"><a href="#3-配置可选项" class="headerlink" title="3.配置可选项"></a>3.配置可选项</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用于处理爬取请求和响应的中间件</span></span><br><span class="line">my_douban_books_spider/middlewares.py</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用于处理爬取的数据的管道</span></span><br><span class="line">my_douban_books_spider/pipelines.py</span><br><span class="line"></span><br><span class="line"><span class="comment"># Scrapy项目设置，配置爬虫的行为</span></span><br><span class="line">my_douban_books_spider/settings.py</span><br><span class="line"></span><br><span class="line"><span class="comment"># Scrapy项目的配置文件</span></span><br><span class="line">scrapy.cfg</span><br></pre></td></tr></table></figure>

<h4 id="4-打开命令行窗口，运行已配置好的爬虫"><a href="#4-打开命令行窗口，运行已配置好的爬虫" class="headerlink" title="4.打开命令行窗口，运行已配置好的爬虫"></a>4.打开命令行窗口，运行已配置好的爬虫</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入Scrapy项目的根目录</span></span><br><span class="line"><span class="built_in">cd</span> path\to\my_douban_books_project</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行爬虫</span></span><br><span class="line">scrapy crawl douban_books</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注：请以学习目的为主，确保爬虫行为符合豆瓣的使用政策，遵循相关规定，并设置适当的爬取速率以避免对服务器造成不良影响。</p>
</blockquote>
]]></content>
      <categories>
        <category>Python3爬虫</category>
      </categories>
      <tags>
        <tag>Python3爬虫</tag>
        <tag>网络爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>Restful API 设计最佳实践</title>
    <url>/archives/3292951c.html</url>
    <content><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><h4 id="目前，RESTful-API-已经成为Web应用程序的标准API设计风格，受到广泛的应用和支持，其中Swagger、OpenAPI等工具的出现进一步简化了RESTful-API的设计和文档编写工作。RESTful-API-有如下三个特点"><a href="#目前，RESTful-API-已经成为Web应用程序的标准API设计风格，受到广泛的应用和支持，其中Swagger、OpenAPI等工具的出现进一步简化了RESTful-API的设计和文档编写工作。RESTful-API-有如下三个特点" class="headerlink" title="目前，RESTful API 已经成为Web应用程序的标准API设计风格，受到广泛的应用和支持，其中Swagger、OpenAPI等工具的出现进一步简化了RESTful API的设计和文档编写工作。RESTful API 有如下三个特点:"></a>目前，RESTful API 已经成为Web应用程序的标准API设计风格，受到广泛的应用和支持，其中Swagger、OpenAPI等工具的出现进一步简化了RESTful API的设计和文档编写工作。RESTful API 有如下三个特点:</h4><blockquote>
<ul>
<li>资源的定位：RESTful API 将数据和操作转化为资源和 HTTP 动词，使用 URI 定位资源。</li>
<li>表现层状态转换：RESTful API 将资源状态作为响应数据的一部分，客户端通过修改资源状态来实现状态转换。</li>
<li>无状态：RESTful API 不保存客户端的状态信息，客户端每次请求都需要提供完整的请求信息。</li>
</ul>
</blockquote>
<h3 id="二、最佳实践和示例"><a href="#二、最佳实践和示例" class="headerlink" title="二、最佳实践和示例"></a>二、最佳实践和示例</h3><h4 id="1-使用HTTP动词来表达操作"><a href="#1-使用HTTP动词来表达操作" class="headerlink" title="1.使用HTTP动词来表达操作"></a>1.使用HTTP动词来表达操作</h4><blockquote>
<p>增: 使用POST方法创建新的资源。<br>删: 使用DELETE方法删除存在的资源。<br>改: 使用PUT或PATCH方法来更新已存在的资源。<br>查: 使用GET方法读取资源。</p>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 示例如下：</span></span><br><span class="line">GET /users/<span class="number">1</span></span><br><span class="line">POST /users</span><br><span class="line">PUT /users/<span class="number">1</span></span><br><span class="line">DELETE /users/<span class="number">1</span></span><br></pre></td></tr></table></figure>

<h4 id="2-使用动词进行操作"><a href="#2-使用动词进行操作" class="headerlink" title="2.使用动词进行操作"></a>2.使用动词进行操作</h4><blockquote>
<p>有时对API调用的响应不涉及资源（如计算、转义或变换）。</p>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 示例如下：</span></span><br><span class="line"><span class="comment">// 读取</span></span><br><span class="line">GET /translate?from=de_DE&amp;to=en_US&amp;text=Hallo</span><br><span class="line">GET /calculate?para2=<span class="number">23</span>&amp;para2=<span class="number">432</span></span><br><span class="line"><span class="comment">// 触发更改服务器端状态的操作</span></span><br><span class="line">POST /restartServer</span><br><span class="line"><span class="comment">// 无消息体</span></span><br><span class="line">POST /banUserFromChannel</span><br><span class="line"><span class="punctuation">&#123;</span> <span class="attr">&quot;user&quot;</span><span class="punctuation">:</span> <span class="string">&quot;123&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;channel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;serious-chat-channel&quot;</span> <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="3-使用名词来表示资源"><a href="#3-使用名词来表示资源" class="headerlink" title="3.使用名词来表示资源"></a>3.使用名词来表示资源</h4><blockquote>
<p>RESTful API 中应该使用名词来表示资源，而不是动词，以避免歧义和混淆。</p>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 示例如下：</span></span><br><span class="line">GET /users/<span class="number">1</span></span><br><span class="line">GET /orders/<span class="number">1</span></span><br></pre></td></tr></table></figure>

<h4 id="4-使用一致的复数名词来表达资源"><a href="#4-使用一致的复数名词来表达资源" class="headerlink" title="4.使用一致的复数名词来表达资源"></a>4.使用一致的复数名词来表达资源</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 示例如下：</span></span><br><span class="line">GET /stories</span><br><span class="line">GET /stories/<span class="number">3</span></span><br></pre></td></tr></table></figure>

<h4 id="5-使用查询参数来过滤和分页"><a href="#5-使用查询参数来过滤和分页" class="headerlink" title="5.使用查询参数来过滤和分页"></a>5.使用查询参数来过滤和分页</h4><blockquote>
<p>RESTful API 应该使用查询参数来过滤和分页资源。</p>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 示例如下：</span></span><br><span class="line">GET /users?gender=male</span><br><span class="line">GET /users?page=<span class="number">1</span>&amp;pageSize=<span class="number">10</span></span><br></pre></td></tr></table></figure>

<h4 id="6：使用HTTP状态码来表示请求结果"><a href="#6：使用HTTP状态码来表示请求结果" class="headerlink" title="6：使用HTTP状态码来表示请求结果"></a>6：使用HTTP状态码来表示请求结果</h4><blockquote>
<p>RESTful API 应该使用HTTP状态码来表示请求结果，以便客户端能够根据状态码进行处理。</p>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 示例如下：</span></span><br><span class="line"><span class="number">200</span>：请求成功。</span><br><span class="line"><span class="number">201</span>：资源创建成功</span><br><span class="line"><span class="number">301</span>：永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替</span><br><span class="line"><span class="number">304</span>：未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源</span><br><span class="line"><span class="number">400</span>：请求参数错误</span><br><span class="line"><span class="number">401</span>：未授权访问证</span><br><span class="line"><span class="number">403</span>：表示禁止访问资源</span><br><span class="line"><span class="number">404</span>：表示未找到资源。可设置”您所请求的资源无法找到”的提示页面</span><br><span class="line"><span class="number">410</span>：客户端请求的资源已经不存在。<span class="number">410</span>不同于<span class="number">404</span>，如果资源以前有现在被永久删除了可使用<span class="number">410</span>代码，网站设计人员可通过<span class="number">301</span>代码指定资源的新位置</span><br><span class="line"><span class="number">500</span>：服务器内部错误，无法完成请求</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注：不要过度使用404。状态码的使用要尽量精确：如果资源可用，但禁止用户访问，则返回403；如果资源曾经存在但现已被删除或停用，则返回410。</p>
</blockquote>
<h4 id="7-提供有用的错误消息"><a href="#7-提供有用的错误消息" class="headerlink" title="7.提供有用的错误消息"></a>7.提供有用的错误消息</h4><blockquote>
<p>除了提供恰当的HTTP状态代码外，还应该在HTTP响应正文中提供有用且详细的错误描述。</p>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 示例如下：</span></span><br><span class="line"><span class="comment">// 请求</span></span><br><span class="line">GET /epics?state=unknow</span><br><span class="line"><span class="comment">// 响应：400错误</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;errors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">400</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;detail&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Invalid state. Valid values are &#x27;biz&#x27; or &#x27;tech&#x27;&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">352</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;links&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;about&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://www.jira.com/rest/errorcode/352&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="8-使用-HATEOAS-来提高-API-的可发现性"><a href="#8-使用-HATEOAS-来提高-API-的可发现性" class="headerlink" title="8.使用 HATEOAS 来提高 API 的可发现性"></a>8.使用 HATEOAS 来提高 API 的可发现性</h4><blockquote>
<p>HATEOAS（Hypermedia As The Engine Of Application State），是指使用超媒体作为应用程序状态的引擎。其原则就是客户端与服务器的交互完全由超媒体动态提供，客户端无需事先了解如何与数据或者服务器交互。通过使用HATEOAS，客户端可以通过API返回的链接自主地遍历API，并进行资源的操作。</p>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 示例如下：</span></span><br><span class="line">GET /users/<span class="number">1</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Tom&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">25</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;links&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;rel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;orders&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;href&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/users/1/orders&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;rel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;edit&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;href&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/users/1/edit&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="9-使用JSON或XML来表示数据"><a href="#9-使用JSON或XML来表示数据" class="headerlink" title="9.使用JSON或XML来表示数据"></a>9.使用JSON或XML来表示数据</h4><blockquote>
<p>RESTful API 应该使用JSON或XML来表示数据，以便不同的客户端能够方便地进行数据解析和处理。</p>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 示例如下：</span></span><br><span class="line">GET /users/<span class="number">1</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Tom&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">25</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="10-使用小驼峰命名法来命名属性"><a href="#10-使用小驼峰命名法来命名属性" class="headerlink" title="10.使用小驼峰命名法来命名属性"></a>10.使用小驼峰命名法来命名属性</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 示例如下：</span></span><br><span class="line"><span class="punctuation">&#123;</span> <span class="attr">&quot;epic.dateOfCreated&quot;</span><span class="punctuation">:</span> <span class="number">2019</span><span class="number">-05</span><span class="number">-16</span> <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="三、RESTful-API-未来的发展方向"><a href="#三、RESTful-API-未来的发展方向" class="headerlink" title="三、RESTful API 未来的发展方向"></a>三、RESTful API 未来的发展方向</h3><blockquote>
<ul>
<li>支持更多的协议和数据格式，如gRPC、GraphQL等。</li>
<li>增强API的安全性和稳定性，包括OAuth2认证、HTTPS协议等。</li>
<li>支持更多的语言和框架，使得 RESTful API 可以更加广泛地应用于不同的开发环境中。</li>
<li>支持自动化工具，如Swagger、Postman等，以便更加方便地进行API的设计、文档编写和测试。</li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>Restful API</category>
      </categories>
      <tags>
        <tag>Restful API</tag>
      </tags>
  </entry>
  <entry>
    <title>Node.js使用node-fetch进行HTTP请求</title>
    <url>/archives/6e896b8d.html</url>
    <content><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><h4 id="node-fetch是一个可以在-Node-js-环境中使用的第三方模块，允许使用类似浏览器中-Fetch-API-的语法和功能，方便进行-HTTP-请求。"><a href="#node-fetch是一个可以在-Node-js-环境中使用的第三方模块，允许使用类似浏览器中-Fetch-API-的语法和功能，方便进行-HTTP-请求。" class="headerlink" title="node-fetch是一个可以在 Node.js 环境中使用的第三方模块，允许使用类似浏览器中 Fetch API 的语法和功能，方便进行 HTTP 请求。"></a><code>node-fetch</code>是一个可以在 Node.js 环境中使用的第三方模块，允许使用类似浏览器中 Fetch API 的语法和功能，方便进行 HTTP 请求。</h4><blockquote>
<ul>
<li>支持Promise：node-fetch返回的是一个Promise，所以能使用Promise的链式调用语法。</li>
<li>支持基本的HTTP请求方法：包括GET、POST、PUT、DELETE等。</li>
<li>支持请求头设置：包括Content-Type、Authorization等。</li>
<li>支持发送JSON数据：可以轻松地将JSON数据作为请求体发送。</li>
<li>支持异步&#x2F;同步请求：支持使用async&#x2F;await处理异步请求，也支持使用Promise的.then()方法。</li>
</ul>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 简单的使用示例</span></span><br><span class="line"><span class="keyword">const</span> fetch = <span class="built_in">require</span>(<span class="string">&#x27;node-fetch&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> url = <span class="string">&#x27;https://api.example.com/data&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">fetch</span>(url)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error:&#x27;</span>, error));</span><br></pre></td></tr></table></figure>

<h3 id="二、安装node-fetch"><a href="#二、安装node-fetch" class="headerlink" title="二、安装node-fetch"></a>二、安装node-fetch</h3><h4 id="1-在项目根目录下打开终端"><a href="#1-在项目根目录下打开终端" class="headerlink" title="1.在项目根目录下打开终端"></a>1.在项目根目录下打开终端</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装命令</span></span><br><span class="line">npm install node-fetch --save</span><br></pre></td></tr></table></figure>

<h4 id="2-使用node-fetch发起请求"><a href="#2-使用node-fetch发起请求" class="headerlink" title="2.使用node-fetch发起请求"></a>2.使用node-fetch发起请求</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Node.js 通过 require 导入 node-fetch</span></span><br><span class="line"><span class="keyword">const</span> fetch = <span class="built_in">require</span>(<span class="string">&#x27;node-fetch&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> url = <span class="string">&#x27;https://api.example.com/data&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发起 GET 请求</span></span><br><span class="line"><span class="title function_">fetch</span>(url)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error:&#x27;</span>, error));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发起 POST 请求</span></span><br><span class="line"><span class="keyword">const</span> postData = &#123;</span><br><span class="line">  <span class="attr">key1</span>: <span class="string">&#x27;value1&#x27;</span>,</span><br><span class="line">  <span class="attr">key2</span>: <span class="string">&#x27;value2&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">fetch</span>(url, &#123;</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">  <span class="attr">headers</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(postData),</span><br><span class="line">&#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error:&#x27;</span>, error));</span><br></pre></td></tr></table></figure>

<h4 id="3-使用async-await处理异步代码"><a href="#3-使用async-await处理异步代码" class="headerlink" title="3.使用async&#x2F;await处理异步代码"></a>3.使用async&#x2F;await处理异步代码</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">fetchData</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(url);</span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error:&#x27;</span>, error);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">fetchData</span>();</span><br></pre></td></tr></table></figure>

<h3 id="三、处理HTTP请求的错误响应"><a href="#三、处理HTTP请求的错误响应" class="headerlink" title="三、处理HTTP请求的错误响应"></a>三、处理HTTP请求的错误响应</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 示例代码</span></span><br><span class="line"><span class="keyword">const</span> fetch = <span class="built_in">require</span>(<span class="string">&#x27;node-fetch&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> url = <span class="string">&#x27;https://api.example.com/data&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">fetch</span>(url)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!response.<span class="property">ok</span>) &#123;</span><br><span class="line">      <span class="comment">// 如果响应状态码不在200到299范围内，表示请求失败</span></span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`HTTP error! Status: <span class="subst">$&#123;response.status&#125;</span>, Message: <span class="subst">$&#123;response.statusText&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> response.<span class="title function_">json</span>();</span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error:&#x27;</span>, error.<span class="property">message</span>));</span><br></pre></td></tr></table></figure>

<h3 id="四、处理其它错误（网络错误、JSON解析错误等）"><a href="#四、处理其它错误（网络错误、JSON解析错误等）" class="headerlink" title="四、处理其它错误（网络错误、JSON解析错误等）"></a>四、处理其它错误（网络错误、JSON解析错误等）</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 示例代码：使用instanceof检查错误类型</span></span><br><span class="line"><span class="keyword">const</span> fetch = <span class="built_in">require</span>(<span class="string">&#x27;node-fetch&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> url = <span class="string">&#x27;https://api.example.com/data&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">fetch</span>(url)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!response.<span class="property">ok</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`HTTP error! Status: <span class="subst">$&#123;response.status&#125;</span>, Message: <span class="subst">$&#123;response.statusText&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> response.<span class="title function_">json</span>();</span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (error <span class="keyword">instanceof</span> fetch.<span class="property">FetchError</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Network error:&#x27;</span>, error.<span class="property">message</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (error <span class="keyword">instanceof</span> <span class="title class_">SyntaxError</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;JSON parsing error:&#x27;</span>, error.<span class="property">message</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Other error:&#x27;</span>, error.<span class="property">message</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Node.js</category>
      </categories>
      <tags>
        <tag>Node.js</tag>
        <tag>node-fetch</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu安装Docker详细教程</title>
    <url>/archives/117a5c58.html</url>
    <content><![CDATA[<h3 id="一、卸载旧版本"><a href="#一、卸载旧版本" class="headerlink" title="一、卸载旧版本"></a>一、卸载旧版本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get remove docker docker-engine docker.io containerd runc</span><br></pre></td></tr></table></figure>

<h3 id="二、安装依赖工具"><a href="#二、安装依赖工具" class="headerlink" title="二、安装依赖工具"></a>二、安装依赖工具</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y \</span><br><span class="line">    apt-transport-https \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    curl \</span><br><span class="line">    gnupg-agent</span><br></pre></td></tr></table></figure>

<h3 id="三、添加Docker的GPG密钥"><a href="#三、添加Docker的GPG密钥" class="headerlink" title="三、添加Docker的GPG密钥"></a>三、添加Docker的GPG密钥</h3><blockquote>
<p>注：因为网络问题，建议使用阿里源下载</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 官方源</span></span><br><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 阿里源</span></span><br><span class="line">curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg</span><br></pre></td></tr></table></figure>

<h3 id="四、设置Docker-APT源"><a href="#四、设置Docker-APT源" class="headerlink" title="四、设置Docker APT源"></a>四、设置Docker APT源</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 官方源</span></span><br><span class="line"><span class="built_in">echo</span> \</span><br><span class="line"><span class="string">&quot;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \</span></span><br><span class="line"><span class="string"><span class="subst">$(lsb_release -cs)</span> stable&quot;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line"></span><br><span class="line"><span class="comment"># 阿里源</span></span><br><span class="line"><span class="built_in">echo</span> \</span><br><span class="line"><span class="string">&quot;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://mirrors.aliyun.com/docker-ce/linux/ubuntu \</span></span><br><span class="line"><span class="string"><span class="subst">$(lsb_release -cs)</span> stable&quot;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br></pre></td></tr></table></figure>

<h3 id="五、更新APT软件包索引"><a href="#五、更新APT软件包索引" class="headerlink" title="五、更新APT软件包索引"></a>五、更新APT软件包索引</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>

<h3 id="六、安装Docker"><a href="#六、安装Docker" class="headerlink" title="六、安装Docker"></a>六、安装Docker</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>

<h3 id="七、验证Docker是否成功安装"><a href="#七、验证Docker是否成功安装" class="headerlink" title="七、验证Docker是否成功安装"></a>七、验证Docker是否成功安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo docker --version</span><br></pre></td></tr></table></figure>

<h3 id="补充：使用脚本自动安装：https-get-docker-com"><a href="#补充：使用脚本自动安装：https-get-docker-com" class="headerlink" title="补充：使用脚本自动安装：https://get.docker.com/"></a>补充：使用脚本自动安装：<a href="https://get.docker.com/">https://get.docker.com/</a></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 验证脚本是否支持该操作系统</span></span><br><span class="line">make shellcheck</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从get.docker.com下载安装</span></span><br><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line">sh get-docker.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以通过--mirror选项使用国内源进行安装</span></span><br><span class="line">curl -fsSL get.docker.com -o get-docker.sh</span><br><span class="line">sudo sh get-docker.sh --mirror Aliyun</span><br></pre></td></tr></table></figure>

<h3 id="八、启动Docker"><a href="#八、启动Docker" class="headerlink" title="八、启动Docker"></a>八、启动Docker</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure>

<h3 id="九、创建docker用户组"><a href="#九、创建docker用户组" class="headerlink" title="九、创建docker用户组"></a>九、创建docker用户组</h3><blockquote>
<p>注：出于安全考虑，Linux系统不要直接使用root用户。最好是将需要使用Docker的用户加入docker用户组</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 建立docker组</span></span><br><span class="line">sudo groupadd docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将当前用户加入docker组</span></span><br><span class="line">sudo usermod -aG docker <span class="variable">$USER</span></span><br></pre></td></tr></table></figure>

<h3 id="十、测试Docker是否安装正确"><a href="#十、测试Docker是否安装正确" class="headerlink" title="十、测试Docker是否安装正确"></a>十、测试Docker是否安装正确</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --<span class="built_in">rm</span> hello-world</span><br></pre></td></tr></table></figure>

<h3 id="十一、查看正在运行的Docker容器列表"><a href="#十一、查看正在运行的Docker容器列表" class="headerlink" title="十一、查看正在运行的Docker容器列表"></a>十一、查看正在运行的Docker容器列表</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo docker ps</span><br></pre></td></tr></table></figure>

<h3 id="十二、Docker安装常见报错"><a href="#十二、Docker安装常见报错" class="headerlink" title="十二、Docker安装常见报错"></a>十二、Docker安装常见报错</h3><h4 id="1-GPG-error-https-download-docker-com-linux-ubuntu-focal-InRelease-The-following-signatures-couldn’t-be-verified-because-the-public-key-is-not-available-NO-PUBKEY-7EA0A9C3F273FCD8"><a href="#1-GPG-error-https-download-docker-com-linux-ubuntu-focal-InRelease-The-following-signatures-couldn’t-be-verified-because-the-public-key-is-not-available-NO-PUBKEY-7EA0A9C3F273FCD8" class="headerlink" title="1.GPG error: https://download.docker.com/linux/ubuntu focal InRelease: The following signatures couldn’t be verified because the public key is not available: NO_PUBKEY 7EA0A9C3F273FCD8"></a>1.GPG error: <code>https://download.docker.com/linux/ubuntu</code> focal InRelease: The following signatures couldn’t be verified because the public key is not available: NO_PUBKEY 7EA0A9C3F273FCD8</h4><blockquote>
<p>通常是缺少Docker的GPG密钥引起的。重新输入”添加Docker的GPG密钥”命令即可。</p>
</blockquote>
<h4 id="2-E-The-repository-‘https-download-docker-com-linux-ubuntu-focal-Release’-does-not-have-a-Release-file"><a href="#2-E-The-repository-‘https-download-docker-com-linux-ubuntu-focal-Release’-does-not-have-a-Release-file" class="headerlink" title="2.E: The repository ‘https://download.docker.com/linux/ubuntu focal Release’ does not have a Release file."></a>2.E: The repository ‘<code>https://download.docker.com/linux/ubuntu</code> focal Release’ does not have a Release file.</h4><blockquote>
<p>可能是Docker APT源配置不正确。确保已正确设置APT源，重新配置试下。</p>
</blockquote>
<h4 id="3-Failed-to-fetch-https-download-docker-com-linux-ubuntu-dists-focal-InRelease-Could-not-connect-to-download-docker-com-443-13-35-250-16-connection-timed-out"><a href="#3-Failed-to-fetch-https-download-docker-com-linux-ubuntu-dists-focal-InRelease-Could-not-connect-to-download-docker-com-443-13-35-250-16-connection-timed-out" class="headerlink" title="3.Failed to fetch https://download.docker.com/linux/ubuntu/dists/focal/InRelease  Could not connect to download.docker.com:443 (13.35.250.16), connection timed out"></a>3.Failed to fetch <code>https://download.docker.com/linux/ubuntu/dists/focal/InRelease</code>  Could not connect to download.docker.com:443 (13.35.250.16), connection timed out</h4><blockquote>
<p>网络连接问题。检查是不是防火墙或代理阻止了Docker访问。</p>
</blockquote>
<h4 id="4-E-Unable-to-locate-package-docker-ce"><a href="#4-E-Unable-to-locate-package-docker-ce" class="headerlink" title="4.E: Unable to locate package docker-ce"></a>4.E: Unable to locate package docker-ce</h4><blockquote>
<p>Docker软件包无法找到。确保正确配置Docker APT源，然后运行”sudo apt-get update”命令，更新软件包。</p>
</blockquote>
<h4 id="5-The-following-packages-have-unmet-dependencies-docker-ce-Depends-containerd-io-1-2-2-3-but-it-is-not-going-to-be-installed"><a href="#5-The-following-packages-have-unmet-dependencies-docker-ce-Depends-containerd-io-1-2-2-3-but-it-is-not-going-to-be-installed" class="headerlink" title="5.The following packages have unmet dependencies: docker-ce : Depends: containerd.io (&gt;&#x3D; 1.2.2-3) but it is not going to be installed"></a>5.The following packages have unmet dependencies: docker-ce : Depends: containerd.io (&gt;&#x3D; 1.2.2-3) but it is not going to be installed</h4><blockquote>
<p>Docker依赖项问题。需要运行”sudo apt-get install -y containerd.io”命令，安装containerd.io。</p>
</blockquote>
<h4 id="6-Got-permission-denied-while-trying-to-connect-to-the-Docker-daemon-socket"><a href="#6-Got-permission-denied-while-trying-to-connect-to-the-Docker-daemon-socket" class="headerlink" title="6.Got permission denied while trying to connect to the Docker daemon socket"></a>6.Got permission denied while trying to connect to the Docker daemon socket</h4><blockquote>
<p>用户权限问题。需要运行”sudo usermod -aG docker $USER”命令，将用户添加到docker组中，需要注销并重新登录才能生效。</p>
</blockquote>
]]></content>
      <categories>
        <category>Node.js</category>
      </categories>
      <tags>
        <tag>Node.js</tag>
        <tag>Fetch API</tag>
      </tags>
  </entry>
  <entry>
    <title>Web安全—IP、DNS、TLS指纹泄露</title>
    <url>/archives/747976e5.html</url>
    <content><![CDATA[<h3 id="一、IP泄露"><a href="#一、IP泄露" class="headerlink" title="一、IP泄露"></a>一、IP泄露</h3><h4 id="1-使用分流代理导致的IP泄露问题"><a href="#1-使用分流代理导致的IP泄露问题" class="headerlink" title="1.使用分流代理导致的IP泄露问题"></a>1.使用分流代理导致的IP泄露问题</h4><blockquote>
<p>原理：分流代理在访问常规站点时，使用直连的方式；而在访问特定服务器时，使用代理进行连接。</p>
</blockquote>
<h4 id="2-分流代理存在的安全风险："><a href="#2-分流代理存在的安全风险：" class="headerlink" title="2.分流代理存在的安全风险："></a>2.分流代理存在的安全风险：</h4><blockquote>
<p>如果某个站点使用特定脚本，这时用户的代理IP和真实IP信息很容易被对照关联。<br>恶意攻击者可以向正在使用代理服务的用户，发送嵌入了特定信息的恶意邮件（如图片）。如果用户打开阅读该邮件，那么用户的真实IP信息就会被图床服务器记录。</p>
</blockquote>
<h4 id="3-预防方案：双虚拟机防止软件泄露公网IP"><a href="#3-预防方案：双虚拟机防止软件泄露公网IP" class="headerlink" title="3.预防方案：双虚拟机防止软件泄露公网IP"></a>3.预防方案：双虚拟机防止软件泄露公网IP</h4><blockquote>
<p>使用双虚拟机上网时，只会显示内网IP，公网IP会被隐藏。<br>虚拟机的MAC地址可以伪造，终端输入arp -a，查看当前系统相连设备的MAC地址。</p>
</blockquote>
<h3 id="二、DNS泄露"><a href="#二、DNS泄露" class="headerlink" title="二、DNS泄露"></a>二、DNS泄露</h3><h4 id="1-使用虚拟专用网络（VPN）预防DNS泄露"><a href="#1-使用虚拟专用网络（VPN）预防DNS泄露" class="headerlink" title="1.使用虚拟专用网络（VPN）预防DNS泄露"></a>1.使用虚拟专用网络（VPN）预防DNS泄露</h4><blockquote>
<p>原理：有些网站只允许特定地区的用户访问，常见于公司或校园内网。用户连接VPN之后访问网站，网站看到的IP是VPN服务器的出口IP地址，而不是用户的真实IP地址。</p>
</blockquote>
<h4 id="2-使用虚拟专用网络（VPN）存在的安全漏洞："><a href="#2-使用虚拟专用网络（VPN）存在的安全漏洞：" class="headerlink" title="2.使用虚拟专用网络（VPN）存在的安全漏洞："></a>2.使用虚拟专用网络（VPN）存在的安全漏洞：</h4><blockquote>
<p>如果DNS配置不当，服务器还是可以通过获取用户的DNS信息，推测出用户大致的地理位置。</p>
</blockquote>
<h3 id="三、TLS指纹泄露"><a href="#三、TLS指纹泄露" class="headerlink" title="三、TLS指纹泄露"></a>三、TLS指纹泄露</h3><p>1.简介</p>
<blockquote>
<p>除了浏览器在HTTP层面所展现的指纹，浏览器在与HTTPS服务器进行TLS握手时，也会展现指纹。<br>对于用户而言，TLS指纹比浏览器指纹更具风险，因为恶意攻击者可以利用加密流量定位用户和代理服务器。</p>
</blockquote>
<p>2.预防方案：TLS指纹模拟</p>
<blockquote>
<p>科罗拉多大学博尔德分校搭建了一个用于收集和统计TLS指纹的网站：tlsfingerprint.io<br>Golang 第三方库：uTLS ，可以用来模拟知名浏览器的TLS指纹。</p>
</blockquote>
<p>3.TLS指纹模拟需要注意：</p>
<blockquote>
<p>指纹模拟会产生一个问题：一旦模仿得不像，那么这个“不像”就会成为最显眼的特征。所以，谨慎使用市场占有率太低的浏览器TLS指纹。</p>
</blockquote>
]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
        <tag>IP</tag>
        <tag>DNS</tag>
      </tags>
  </entry>
  <entry>
    <title>Web安全—如何防范恶意攻击</title>
    <url>/archives/16e4431f.html</url>
    <content><![CDATA[<h3 id="一、禁用高权限用户"><a href="#一、禁用高权限用户" class="headerlink" title="一、禁用高权限用户"></a>一、禁用高权限用户</h3><blockquote>
<p>主要指Windows系统中Administrators组的用户或Linux&#x2F;Unix系统中root组的用户。</p>
</blockquote>
<blockquote>
<p>举例：很多程序员在使用Linux&#x2F;Unix系统进行开发时，都知道用普通用户的帐号进行操作；需要做某些高级权限操作时，再切换到管理员帐号（root帐号）。但使用Windows系统时，却喜欢用管理员（Administrator组）进行日常操作。</p>
</blockquote>
<blockquote>
<p>注：Windows系统中，即使用户名不叫“Administrator”， 任何一个用户只要属于“Administrators组”，同样具有管理员权限。</p>
</blockquote>
<h4 id="1-高权限用户的危害性"><a href="#1-高权限用户的危害性" class="headerlink" title="1.高权限用户的危害性"></a>1.高权限用户的危害性</h4><blockquote>
<p>平时总是用管理员权限登录系统，并进行日常工作，那就意味着所运行的每一个程序，同时也具有了管理员权限。</p>
</blockquote>
<blockquote>
<p>举例：如果从网上下载了一个感染病毒的软件，当我们直接运行该软件时，病毒一旦被激活，就同样具备了管理员权限。病毒在获得与杀毒软件平起平坐的权限时，清除会很麻烦，有些高级病毒可以骗过杀毒软件甚至直接把杀毒软件干掉。</p>
</blockquote>
<h4 id="2、安全防范建议"><a href="#2、安全防范建议" class="headerlink" title="2、安全防范建议"></a>2、安全防范建议</h4><blockquote>
<p>以Windows系统举例，尽量少用高权限用户。最好在刚装好系统后，单独创建一个非管理员用户。你可以让该用户仅仅属于“Power Users组”；如果想更安全，可以只加入“Users组”，今后就主要通过该低权限用户进行日常操作。</p>
</blockquote>
<p>1.“Power Users组”权限 ＜ “Administrators组”权限</p>
<blockquote>
<p>“Power Users组”限制如下几项主要权限：</p>
<ul>
<li>不能添加、删除、禁用系统中的其它用户。</li>
<li>不能修改其它用户的属性（包括口令、所属的用户组等）。</li>
<li>不能安装&#x2F;卸载硬件驱动程序。</li>
<li>不能安装&#x2F;卸载某些应用软件。</li>
<li>不能查看系统的安全日志。</li>
</ul>
</blockquote>
<p>2.“Users组”权限 ＜ “Power Users组”权限 ＜ “Administrators组”权限</p>
<blockquote>
<p>“Users 组”限制了如下几项主要权限：</p>
<ul>
<li>不能添加、删除、禁用系统中的其它用户。</li>
<li>不能修改其它用户的属性（包括口令、所属的用户组等）</li>
<li>不能安装&#x2F;卸载硬件驱动程序。</li>
<li>不能安装&#x2F;卸载某些应用软件。</li>
<li>不能查看系统的安全日志。</li>
<li>不能修改系统时间。</li>
<li>不能修改某些系统目录（包括系统盘的\WINDOWS目录、\WINDOWS\SYSTEM32目录、\Program Files目录）。</li>
<li>不能启动&#x2F;停止某些系统服务。</li>
<li>不能修改注册表“HKEY_LOCAL_MECHINE”下的所有键值。</li>
</ul>
</blockquote>
<blockquote>
<p>总结：从上述对照，明显可知“Users组”的权限更小，使用起来更安全。<br>举例：运行了一个带毒的程序，由于病毒仅有“Users组”的权限。所以病毒也就无法修改&#x2F;破坏重要的系统目录，掀不起太大风浪。通常来说，越安全的措施，往往也意味着操作越繁琐。但是这些问题，都有相应的解决之道。</p>
</blockquote>
<h4 id="3、切换用户的问题"><a href="#3、切换用户的问题" class="headerlink" title="3、切换用户的问题"></a>3、切换用户的问题</h4><blockquote>
<p>当你以低权限组登录后，因为某些原因，需要临时使用管理员权限。但是，当前用户运行了很多程序，不想直接注销。那么可以使用【快速用户切换】功能来切换用户组。Windows系统提供该功能，可以让几个不同的用户同时登录同一系统，平滑地切换。</p>
</blockquote>
<h4 id="4、安装软件-驱动的麻烦"><a href="#4、安装软件-驱动的麻烦" class="headerlink" title="4、安装软件&#x2F;驱动的麻烦"></a>4、安装软件&#x2F;驱动的麻烦</h4><blockquote>
<p>安装驱动需要管理员权限才行；另外，某些软件在安装时，也需要用管理员权限进行。所以在刚装好系统后，先用管理员用户把高权限安装的软件&#x2F;驱动程序都搞好。然后，就无需再用管理员用户了。毕竟日常使用的软件相对固定，不可能三天两头安装软件或驱动。即便偶尔需要重装软件或驱动，也可以临时切换到管理员用户。</p>
</blockquote>
<h4 id="5、修改系统时间的问题"><a href="#5、修改系统时间的问题" class="headerlink" title="5、修改系统时间的问题"></a>5、修改系统时间的问题</h4><blockquote>
<p>如果平时用的是“Users组”而不是“Power Users组”，那么是没有修改系统时间权限的。所以直接启用Windows系统自带的时间同步服务即可。</p>
</blockquote>
<h3 id="二、常见的密码盗取手段"><a href="#二、常见的密码盗取手段" class="headerlink" title="二、常见的密码盗取手段"></a>二、常见的密码盗取手段</h3><h4 id="1、木马"><a href="#1、木马" class="headerlink" title="1、木马"></a>1、木马</h4><blockquote>
<p>如果用户电脑已经被攻击者安装了木马，那么输入任何密码，都可能被盗。</p>
</blockquote>
<h4 id="2、弱密码猜解"><a href="#2、弱密码猜解" class="headerlink" title="2、弱密码猜解"></a>2、弱密码猜解</h4><blockquote>
<p>如果登录密码比较弱，攻击者就很容易猜出来。</p>
</blockquote>
<h4 id="3、暴力破解"><a href="#3、暴力破解" class="headerlink" title="3、暴力破解"></a>3、暴力破解</h4><blockquote>
<p>除了对弱密码进行猜解，攻击者还可以通过穷举的的方式，破解中等强度的密码。现在CPU的计算能力日新月异，尤其是多核CPU&#x2F;GPU普及之后，暴力破解的效果会越来越好。由于这种攻击手法，需要成千上万次的试错，所以比较适合针对本地应用的口令（比如破解加密的压缩文件），而不太适合对网络应用进行在线口令破解。</p>
</blockquote>
<h4 id="4、网络传输截获（嗅探）"><a href="#4、网络传输截获（嗅探）" class="headerlink" title="4、网络传输截获（嗅探）"></a>4、网络传输截获（嗅探）</h4><p>在这种方式下，攻击者会通过网络嗅探的方式，分析用户上网数据。如果上网过程中，存在明文传输的口令，就会被截获。</p>
<h4 id="5、客户端截获"><a href="#5、客户端截获" class="headerlink" title="5、客户端截获"></a>5、客户端截获</h4><blockquote>
<p>通常是针对网络应用的口令而言。</p>
</blockquote>
<h4 id="6、服务端截获"><a href="#6、服务端截获" class="headerlink" title="6、服务端截获"></a>6、服务端截获</h4><blockquote>
<p>凡是利用口令进行验证的软件系统，都需要存储口令相关的信息。否则的话，软件系统就无法验证用户输入的口令。如果攻击者能够拿到这些口令的关联信息，那么就有可能分析出口令。<br>注：存储口令关联信息有三种常见方式：①存储口令的明文；②存储口令经过加密后的密文；③存储口令的散列值。</p>
</blockquote>
<h4 id="7、网络钓鱼"><a href="#7、网络钓鱼" class="headerlink" title="7、网络钓鱼"></a>7、网络钓鱼</h4><blockquote>
<p>攻击者会伪造某些网站，然后通过某种方式（如虚假链接、欺诈邮件、DNS欺骗等），引诱用户登录伪造站点。由于假网站和真网站的界面很像，用户可能难以分辨。有些高明的钓鱼网站，甚至会采用类似Web代理的技巧，把用户所有输入操作，转交给真网站，然后把真网站输出的界面，再转回给受害者。这样，受害者就好像在真实网站进行操作，很难看出破绽。</p>
</blockquote>
<h4 id="8、情报分析"><a href="#8、情报分析" class="headerlink" title="8、情报分析"></a>8、情报分析</h4><blockquote>
<p>如果攻击者对受害者比较了解，那么他有可能通过深入的分析，攻破受害者的口令防护。</p>
</blockquote>
<h4 id="9、偷窥和欺骗"><a href="#9、偷窥和欺骗" class="headerlink" title="9、偷窥和欺骗"></a>9、偷窥和欺骗</h4><blockquote>
<p>偷窥和欺骗同时作为社会工程学的攻击手法，十分有效。</p>
</blockquote>
<h3 id="三、密码-口令安全防范措施"><a href="#三、密码-口令安全防范措施" class="headerlink" title="三、密码&#x2F;口令安全防范措施"></a>三、密码&#x2F;口令安全防范措施</h3><h4 id="1-谨慎使用统一密码-口令。"><a href="#1-谨慎使用统一密码-口令。" class="headerlink" title="1.谨慎使用统一密码&#x2F;口令。"></a>1.谨慎使用统一密码&#x2F;口令。</h4><h4 id="2-对密码进行分级管理。"><a href="#2-对密码进行分级管理。" class="headerlink" title="2.对密码进行分级管理。"></a>2.对密码进行分级管理。</h4><blockquote>
<p>第一级：不重要的口令<br>我们有时会遇到一些网站，只允许注册账号下载资源。因此可以注册一个临时账号(不要关联重要账号信息)，用完即扔。</p>
</blockquote>
<blockquote>
<p>第二级：重要但少用的口令<br>对于重要口令，要根据使用频率区别对待。有些口令虽然重要，但是使用频率很低，所以设置得麻烦一些，问题也不大。</p>
</blockquote>
<blockquote>
<p>第三级：重要且频繁使用的口令<br>此类口令，重要且经常使用。所以，设置口令要同时兼顾安全性和易用性。</p>
</blockquote>
<blockquote>
<p>注：单汉字拼音(或英文单词)、纯数字作密码，容易遭字典攻击，所以应该考虑由大小写字母加数字、穿插特殊符号构成不少于16位的用户密码。</p>
</blockquote>
<h3 id="四、安全漏洞的基本防范"><a href="#四、安全漏洞的基本防范" class="headerlink" title="四、安全漏洞的基本防范"></a>四、安全漏洞的基本防范</h3><h4 id="1、防火墙"><a href="#1、防火墙" class="headerlink" title="1、防火墙"></a>1、防火墙</h4><blockquote>
<p>个人防火墙主要用于防范“远程漏洞”，对于“本地漏洞”，防火墙基本帮不上忙。因为大多数远程漏洞，都存在于系统对外开启的监听端口中。个人防火墙可以阻止这些端口对外开放，从而避免潜在的漏洞被攻击者利用。</p>
</blockquote>
<h4 id="2、定期升级系统补丁"><a href="#2、定期升级系统补丁" class="headerlink" title="2、定期升级系统补丁"></a>2、定期升级系统补丁</h4><blockquote>
<p>Windows系统的漏洞一直比较多，毕竟用户群大、漏洞利用价值空间巨大，容易被攻击者盯上。所以微软会定期提供Windows补丁，如果遇到高危漏洞，也会临时发布紧急补丁。只需要在“控制面板”里打开“自动更新”功能即可。只要确保系统”自动更新”机制处于启用状态，就可以堵住很多系统漏洞，从而降低被攻击的风险。</p>
</blockquote>
<blockquote>
<p>注：其它用户群较大的桌面系统（如Mac OS、Ubuntu）也提供自动更新安全补丁的功能。</p>
</blockquote>
<h4 id="3、启用软件的自动更新"><a href="#3、启用软件的自动更新" class="headerlink" title="3、启用软件的自动更新"></a>3、启用软件的自动更新</h4><blockquote>
<p>某些软件会内置自动更新功能（如Firefox、Chrome），一旦官网发布新的版本或补丁，就会自动下载并更新。为防范该类软件有安全问题，可以启用它们的自动更新功能。</p>
</blockquote>
<h4 id="4、使用小众且活跃的软件"><a href="#4、使用小众且活跃的软件" class="headerlink" title="4、使用小众且活跃的软件"></a>4、使用小众且活跃的软件</h4><blockquote>
<p>俗话说树大招风。越知名的软件，就越容易引起攻击者注意，发现安全漏洞的概率也会增大。</p>
</blockquote>
<h3 id="五、Web相关的防范"><a href="#五、Web相关的防范" class="headerlink" title="五、Web相关的防范"></a>五、Web相关的防范</h3><h4 id="1-多浏览器"><a href="#1-多浏览器" class="headerlink" title="1.多浏览器"></a>1.多浏览器</h4><blockquote>
<p>在一台电脑上安装多款不同内核的浏览器。</p>
</blockquote>
<h4 id="2-多实例"><a href="#2-多实例" class="headerlink" title="2.多实例"></a>2.多实例</h4><blockquote>
<p>不管是Firefox还是Chrome，默认安装时只有一个实例（Profile）。浏览器相关信息，包括插件、扩展、外观、页面缓存、cookie等等，都存储在这个实例中。反之，如果使用多实例，每个实例都具有独立的插件、扩展、外观、页面缓存、cookie等等。不同实例之间是相对隔离的，不会互相影响。</p>
</blockquote>
<h4 id="3-多用户"><a href="#3-多用户" class="headerlink" title="3.多用户"></a>3.多用户</h4><blockquote>
<p>“多浏览器”和“多实例”两种方案，都无法防范某些浏览器或插件的高危漏洞。因为这些高危漏洞会导致在本地执行攻击代码，并有可能植入木马。而多用户方案可以防范大部分在本地执行的攻击代码。</p>
</blockquote>
<blockquote>
<p>“多用户方案”可以隔离攻击代码，是因为现在主流的操作系统，都能够在系统层面对不同的系统用户进行隔离。所以限制了攻击代码的危害性。但是，操作系统层面的隔离，不能保证百分之百可靠。如果你的操作系统存在“提权漏洞”，同时浏览器或者插件存在“能够在本地执行代码的漏洞”。那么，攻击者就可能把两者组合起来，对受害者系统进行组合攻击。</p>
</blockquote>
<h4 id="4-多虚拟机"><a href="#4-多虚拟机" class="headerlink" title="4.多虚拟机"></a>4.多虚拟机</h4><blockquote>
<p>利用虚拟化软件，在电脑上创建多个虚拟机，分别用来实现不同安全级别的上网行为。</p>
<ul>
<li>优点：在4种浏览器隔离方案中，多虚拟机的安全性最高。即使某个虚拟机被病毒感染或者被植入木马，也不会影响到其它虚拟机和真实系统。当然，没有绝对的安全，虚拟化软件也可能出现漏洞。但是，想通过虚拟化软件的漏洞来突破虚拟机的壁垒，难度更大（远远大于突破操作系统的用户壁垒）。</li>
<li>缺点：对硬件配置要求高（主要是内存和CPU）。</li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
        <tag>恶意攻击</tag>
      </tags>
  </entry>
  <entry>
    <title>Web安全—浏览器指纹追踪技术</title>
    <url>/archives/cc9fab03.html</url>
    <content><![CDATA[<h3 id="一、什么是浏览器指纹？"><a href="#一、什么是浏览器指纹？" class="headerlink" title="一、什么是浏览器指纹？"></a>一、什么是浏览器指纹？</h3><p>“浏览器指纹”是指通过收集用户设备的特征标识，用来对用户进行唯一性识别、跟踪、分析行为、所生成的摘要ID。网站通过收集大量的信息，然后对所有的特征标识进行并集匹配，可以十分精确的对用户进行标记。</p>
<blockquote>
<p>标识内容： UA，语言，时区，地理位置，分辨率，webRTC，Cookie，字体指纹，Canvas，WebGL，WebGL Info，AudioContext，SpeechVoices，媒体设备，CPU参数，内存参数，OS，索引数据库，Resolution等等。</p>
</blockquote>
<h3 id="二、信息熵与指纹"><a href="#二、信息熵与指纹" class="headerlink" title="二、信息熵与指纹"></a>二、信息熵与指纹</h3><p>信息熵是指消息中含有的信息量。熵越高，则能传输越多的信息，熵越低，则意味着传输的信息越少。</p>
<blockquote>
<p>举例：某中学每个年级都有10个班，每个班的人数相同。现在得知A同学是三年二班的学生，那该消息的的熵便是4.91bit左右（log(30, 2)）；如果又得知A同学生日在5月份，那这条消息的熵约为3.58bit左右（log(12, 2)）；最后得知A同学其实是女生而不是男生，那又获得了一条1bit熵的消息。每条消息的熵虽然不高，但是三条消息的熵加起来有9.49bit，或者说，同时具有这三个特征的学生，在该中学里平均每720个人才有一个。</p>
</blockquote>
<p>在网上冲浪的过程中，浏览器向网站服务器发出请求，网站服务器根据请求内容响应。在浏览器与网站服务器的交互中，浏览器会向网站暴露许多不同消息，比如最简单的User-Agent 里就包含了浏览器型号、版本、操作系统等信息。正如人的指纹可以用来识别不同的人一样，当浏览器暴露的信息的熵足够高时，这些信息就可以用来识别、追踪用户。</p>
<blockquote>
<p>举例：在某网络论坛发布帖子，发完之后清空浏览器Cookie和缓存，重启网络，并且使用代理工具再次访问该网络论坛，更换一个新的用户马甲回复刚发布的帖子。即使如此操作，网络管理员还是有可能知道回帖的用户和发帖的用户其实是同一个人。</p>
</blockquote>
<h3 id="三、浏览器指纹的用途"><a href="#三、浏览器指纹的用途" class="headerlink" title="三、浏览器指纹的用途"></a>三、浏览器指纹的用途</h3><p>对于网站而言，拿到浏览器指纹并没有实际价值，真正有价值的是这个浏览器指纹对应的用户信息。作为网站站长，收集用户浏览器指纹并记录用户的操作，是一个有价值的行为，特别是针对没有用户身份的场景。例如在一个内容分发网站上，用户A喜欢浏览二次元相关的内容，通过浏览器指纹记录这个兴趣，那么下次用户不需要登录即可向A用户精准推送二次元相关的信息。在信息爆炸的当下，这是一种优秀的内容分发方式。<br>对于用户而言，建立个人上网行为与浏览器指纹之间的联系或多或少都有侵犯用户隐私的意味，特别是将用户的浏览器指纹和真实的用户信息相关联起来时。</p>
<h3 id="四、浏览器指纹的发展背景"><a href="#四、浏览器指纹的发展背景" class="headerlink" title="四、浏览器指纹的发展背景"></a>四、浏览器指纹的发展背景</h3><ul>
<li><p>第一代是状态化的，主要集中在用户的cookie和evercookie上，需要用户登录才可以得到有效的信息。</p>
</li>
<li><p>第二代才有了浏览器指纹的概念。通过JS获取操作系统、分辨率、像素比等信息上传到后台归并。根据收集的特征值从而让用户更具有区分度（例如UA、浏览器插件信息）。第二代指纹追踪技术唯一性可以保证，但准确率很难完全保证。主要原因就是在跨浏览器指纹识别上面。跨浏览器之后，第二代技术中很重要的 canvas 指纹、浏览器插件指纹都变了，所以很难把跨浏览器指纹归并到同一设备上。因为设备指纹相同，很大概率上是同一台设备；但是，设备指纹不同时，不一定不是同一台设备。</p>
</li>
<li><p>第三代主要将目光放在用户本身上，通过收集上网行为、习惯来为用户建立特征值甚至模型(画像)，以求实现真正的追踪技术，这部分目前实现比较复杂，仍在探索中。</p>
</li>
</ul>
<blockquote>
<p>总结：第一代、第二代的指纹追踪技术是直接通过JS收集信息，第三代指纹追踪技术目前可看到的案例是2017年RSA创新沙盒的冠军unifyid技术。目前处于2.5代是因为还在解决跨浏览器识别指纹的问题。</p>
</blockquote>
<h3 id="五、浏览器指纹的采集"><a href="#五、浏览器指纹的采集" class="headerlink" title="五、浏览器指纹的采集"></a>五、浏览器指纹的采集</h3><p>浏览器指纹是由许多浏览器的特征信息综合起来的，其中特征值的信息熵也是不尽相同。常见可行的特征值如下：</p>
<blockquote>
<p>1.HTTP Header：这是最基本的信息。使用开发者工具可以看到浏览器在请求一个网页时到底发送了哪些header。目前很少有网站会读取并使用这个header（例如Google就是无视header，而是根据 IP 地址判断国家，进而决定网页的语言）。User-Agent里则包含了浏览器信息和操作系统信息。 </p>
</blockquote>
<blockquote>
<p>2.语言，时区，地理位置，分辨率，字体指纹，这几个是用户根据IP和电脑的使用场景进行设置，来模仿真实环境。</p>
</blockquote>
<blockquote>
<p>3.Cookie：主要是用于方便快速登录一些网站，主要承载登录信息和网站相关信息的文档。</p>
</blockquote>
<blockquote>
<p>4.webRTC指纹：是可以让浏览器有音视频实时通信的能力，它提供了三个主要的API来让JS可以实时获取和交换音视频数据，MediaStream、RTCPeerConnection和RTCDataChannel。当然如果要使用WebRTC获得通信能力，用户的真实ip就得暴露出来（NAT穿透），所以RTCPeerConnection就提供了这样的API，直接使用JS就可以拿到用户的IP地址。</p>
</blockquote>
<blockquote>
<p>5.canvas指纹：是HTML5中的动态绘图标签，也可以用它生成图片或者处理图片。即便使用Canvas绘制相同的元素，但是由于系统的差别，字体渲染引擎不同，对抗锯齿、次像素渲染等算法也不同，canvas将同样的文字转成图片，得到的结果也是不同的。</p>
</blockquote>
<blockquote>
<p>6.WebGL指纹：是一种JavaScript浏览器API，用于在网页上呈现3D图像。网站可利用WebGL来识别您的设备指纹。通常网站可以用两种方法做到这一点：</p>
</blockquote>
<blockquote>
<p>7.AudioContex指纹：和Canvas类似也是基于硬件设备或者软件的差别，来产生不同的音频输出，然后计算得到不同的hash来作为标志，当然这里的音频并没有直接在浏览器中播放出来，只需要拿到播放前的处理数据就行，音频指纹测试地址</p>
</blockquote>
<blockquote>
<p>8.Do Not Track：在http头部可以声明这样一个标志“DNT”意味“Do Not Track”，如果值为1表示为不要追踪我的网页行为，0则为可以追踪。即便没有cookie也可以通过这个标志符告诉服务器我不想被追踪到，不要记录我的行为。</p>
</blockquote>
<blockquote>
<p>9.CPU内核数量：这个在之前的设备指纹方案中都是没有使用到的，现代浏览器可以用navigator .hardware Concurrency来获取。如果不支持这个方法，则可以利用另一种方式获取，当增加Web Worker的数量时，可以监视payload的完成时间。当计算量达到一定的程度，Web Woker完成payload的时间显著增加，达到硬件并发的限制，从而判断核心的数量。一些浏览器（如Safari）会将Web Workers的可用内核数量减少一半，所以在获取跨浏览器指纹时，我们需要将获取到的核心数量加倍。<br>10.媒体设备，内存参数这些参数是电脑和浏览期相关指纹。</p>
</blockquote>
<h3 id="六、如何隐藏浏览器指纹？"><a href="#六、如何隐藏浏览器指纹？" class="headerlink" title="六、如何隐藏浏览器指纹？"></a>六、如何隐藏浏览器指纹？</h3><p>浏览器指纹是浏览器的固有属性，哪怕你的浏览器不发送 UA、禁用各种现代浏览器技术、禁用 JavaScript，“没有指纹”反而成了最可疑的指纹，因为在成千上万的用户里，你的浏览器是唯一没有指纹的，自然就鹤立鸡群了。</p>
<blockquote>
<p>最好的方法是大隐隐于市，让浏览器指纹变得大众化。比如现在市面上最流行的操作系统和浏览器组合是 Windows 10 + Google Chrome，那你就使用这一组合。如果你想连屏幕大小、时区等信息一并模拟，甚至可以装个虚拟机来上网（目前并没有有效可靠的从网页上检测浏览器是否运行在虚拟机里的技术，如果有的话，那运行在虚拟机里反而也会成为鹤立鸡群的特征）。对于一般用户来说，使用最流行的操作系统和浏览器组合进行上网冲浪已经足够“大隐隐于市”了，但是对于一些注重网络隐私的用户来说，还需要更多的措施。</p>
</blockquote>
]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
        <tag>浏览器指纹</tag>
      </tags>
  </entry>
  <entry>
    <title>Web安全—代理IP背后的原理</title>
    <url>/archives/a3b5a106.html</url>
    <content><![CDATA[<h3 id="一、代理类型"><a href="#一、代理类型" class="headerlink" title="一、代理类型"></a>一、代理类型</h3><blockquote>
<p>代理IP共分为4种类型：①透明代理IP；②匿名代理IP；③高匿名代理IP；④混淆代理IP。<br>注：依据安全程度排列，顺序如下：高匿&gt;混淆&gt;匿名&gt;透明。</p>
</blockquote>
<h3 id="二、代理原理"><a href="#二、代理原理" class="headerlink" title="二、代理原理"></a>二、代理原理</h3><blockquote>
<p>代理类型主要取决于代理服务器端的配置。不同配置会形成不同的代理类型。在配置中，REMOTE_ADDR、HTTP_VIA、HTTP_X_FORWARDED_FOR这三个变量是决定性因素。</p>
</blockquote>
<h4 id="1、REMOTE-ADDR"><a href="#1、REMOTE-ADDR" class="headerlink" title="1、REMOTE_ADDR"></a>1、REMOTE_ADDR</h4><blockquote>
<p>REMOTE_ADDR表示客户端的IP，但是它的值不是由客户端提供的，而是服务器根据客户端的IP指定的。如果使用浏览器直接访问某个网站，那么网站的web服务器（Nginx、Apache等）就会把REMOTE_ADDR设为客户端的IP地址。</p>
</blockquote>
<blockquote>
<p>如果我们给浏览器设置代理，我们访问目标网站的请求会先经过代理服务器，然后由代理服务器将请求转化到目标网站。那么网站的web代理服务器就会把REMOTE_ADDR设为代理服务器的IP。</p>
</blockquote>
<h4 id="2、X-Forwarded-For（XFF）"><a href="#2、X-Forwarded-For（XFF）" class="headerlink" title="2、X-Forwarded-For（XFF）"></a>2、X-Forwarded-For（XFF）</h4><blockquote>
<p>X-Forwarded-For是一个HTTP扩展头部，用来表示HTTP请求端真实IP。当客户端使用了代理时，Web代理服务器就不知道客户端的真实IP地址。为了避免这个情况，代理服务器通常会增加一个X-Forwarded-For的头信息，把客户端的IP添加到头信息里面。</p>
</blockquote>
<blockquote>
<p>X-Forwarded-For请求头格式如下：X-Forwarded-For: client, proxy1, proxy2</p>
</blockquote>
<blockquote>
<p>client表示客户端的IP地址；proxy1是离服务端最远的设备IP；proxy2是次级代理设备的IP；从格式中，可以看出从client到server是可以有多层代理的。</p>
</blockquote>
<blockquote>
<p>如果一个HTTP请求到达服务器之前，经过了三个代理Proxy1、Proxy2、Proxy3，IP分别为IP1、IP2、IP3，用户真实IP为IP0，那么按照XFF标准，服务端最终会收到以下信息：X-Forwarded-For: IP0, IP1, IP2</p>
</blockquote>
<blockquote>
<p>Proxy3直连服务器，它会给XFF追加IP2，表示它是在帮Proxy2转发请求。列表中并没有IP3，IP3可以在服务端通过RemoteAddress字段获得。我们知道HTTP连接基于TCP连接，HTTP协议中没有IP的概念，RemoteAddress来自TCP连接，表示与服务端建立TCP连接的设备IP，在这个例子里就是IP3。</p>
</blockquote>
<h4 id="3、HTTP-VIA"><a href="#3、HTTP-VIA" class="headerlink" title="3、HTTP_VIA"></a>3、HTTP_VIA</h4><blockquote>
<p>VIA是HTTP协议里面的一个header,记录了一次HTTP请求所经过的代理和网关，经过1个代理服务器，就添加一个代理服务器的信息，经过2个就添加2个。</p>
</blockquote>
<h3 id="三、代理的选择"><a href="#三、代理的选择" class="headerlink" title="三、代理的选择"></a>三、代理的选择</h3><p>代理IP广泛应用于各个领域，例如爬虫、SEO优化、网络科研、隐私保护等，但在使用代理IP时需要遵守相关法律规定和目标服务器的使用规定，避免非法使用和侵犯他人利益。</p>
<blockquote>
<ul>
<li>透明代理虽然能“隐藏”客户机的IP地址，但还是可以从HTTP_X_FORWARDED_FOR变量中查到客户机的真实IP地址。</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>普通匿名代理IP能隐藏客户机的真实IP，但是也会改变我们的请求信息，服务器端有可能会认为我们使用了代理。不过使用此种代理时，虽然被访问的网站不能知道客户端的IP地址，但仍然可以知道你在使用代理，当然某些能够侦测IP的网页仍然可以查到客户端的IP。</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>高匿名代理不改变客户机的请求，这样在服务器看来就像有个真正的客户浏览器在访问它，这时客户的真实IP是隐藏的，服务器端不会认为我们使用了代理。</li>
</ul>
</blockquote>
<p>因此，爬虫程序需要使用代理IP时，尽量选择普通匿名代理和高匿名代理。另外，如果要保证数据不被代理服务器知道，推荐使用HTTPS协议的代理。</p>
<h3 id="四、代理IP实际运用场景"><a href="#四、代理IP实际运用场景" class="headerlink" title="四、代理IP实际运用场景"></a>四、代理IP实际运用场景</h3><h4 id="1、隐私保护"><a href="#1、隐私保护" class="headerlink" title="1、隐私保护"></a>1、隐私保护</h4><blockquote>
<p>代理IP可以隐藏用户的真实IP地址和位置信息，使用户在网络上享受更好的隐私保护。例如，不想让其他人知道自己的真实IP地址，可以使用代理IP隐藏自己的位置信息等。</p>
</blockquote>
<h4 id="2、爬虫和数据采集"><a href="#2、爬虫和数据采集" class="headerlink" title="2、爬虫和数据采集"></a>2、爬虫和数据采集</h4><blockquote>
<p>代理IP可以帮助爬虫等数据采集工具绕过网站的访问限制和反爬虫机制，避免被封禁或被限制访问。例如，在爬取某个网站的内容时，使用代理IP可以避免因为IP过于频繁访问而被网站封禁。</p>
</blockquote>
<h4 id="3、SEO优化"><a href="#3、SEO优化" class="headerlink" title="3、SEO优化"></a>3、SEO优化</h4><blockquote>
<p>代理IP可以帮助SEO工作者获取不同地区的搜索引擎位置排名，从而提高网站的访问量和曝光度。例如，对于面向全国市场的网站，使用代理IP可以获得针对不同地区的搜索排名，从而做出相应的优化策略。</p>
</blockquote>
<h3 id="五、IP代理服务器种类（补充：依据功能划分）"><a href="#五、IP代理服务器种类（补充：依据功能划分）" class="headerlink" title="五、IP代理服务器种类（补充：依据功能划分）"></a>五、IP代理服务器种类（补充：依据功能划分）</h3><h4 id="1-FTP代理"><a href="#1-FTP代理" class="headerlink" title="1.FTP代理"></a>1.FTP代理</h4><blockquote>
<p>可以代理客户端的FTP软件访问FTP服务器，端口一般为21和2121。</p>
</blockquote>
<h4 id="2-HTTP代理"><a href="#2-HTTP代理" class="headerlink" title="2.HTTP代理"></a>2.HTTP代理</h4><blockquote>
<p>可以代理客户端的HTTP访问，主要是代理浏览器访问网页，其端口一般为80、8080、3128等。</p>
</blockquote>
<h4 id="3-RTSP代理"><a href="#3-RTSP代理" class="headerlink" title="3.RTSP代理"></a>3.RTSP代理</h4><blockquote>
<p>代理客户端Realplayer访问Real流媒体服务器代理，端口一般为554。</p>
</blockquote>
<h4 id="4-SOCKS代理"><a href="#4-SOCKS代理" class="headerlink" title="4.SOCKS代理"></a>4.SOCKS代理</h4><blockquote>
<p>SOCKS代理不同于其他类型的代理。只是简单的传输数据包，不在乎什么样的应用协议。SOCKS代理服务器比其他类型的代理服务器快得多。</p>
</blockquote>
<blockquote>
<p>SOCKS代理分为SOCKS4和SOCKS5。不同之处在于，SOCKS4代理只支持TCP协议(即传输控制协议)，SOCKS5代理不仅支持TCP协议和UDP协议(即用户数据包协议)，还支持各种认证机制和服务器域名分析。</p>
</blockquote>
]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>Web安全</tag>
        <tag>IP</tag>
      </tags>
  </entry>
  <entry>
    <title>Web开发—实现JWT登录鉴权</title>
    <url>/archives/555746c1.html</url>
    <content><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><blockquote>
<p>JWT（JSON Web Token）是一种用于在网络上传输信息的开放标准（RFC 7519），通常被用来在网络应用间安全地传递信息。JWT一个关键特点是，接收方可以验证令牌的完整性，即使信息不是加密的，接收方也可以确保信息没有被篡改。因此，JWT在身份验证和信息交换方面得到广泛应用，特别是在Web开发中的用户认证、单点登录（SSO）等场景。</p>
</blockquote>
<blockquote>
<p>JWT由三部分组成: 头信息（header）, 载荷（payload）, Signature（签名）。</p>
</blockquote>
<ul>
<li><p>Header: 包含了关于令牌的元数据以及使用的签名算法。它通常包括两个部分：alg（指定签名算法）和 typ（指定令牌类型）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;alg&quot;: &quot;HS256&quot;,</span><br><span class="line">  &quot;typ&quot;: &quot;JWT&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Payload: 包含了要传递的信息。它包括一些标准的声明，以及自定义的声明。标准的声明包括 iss（签发者）、sub（主题）、aud（接收者）、exp（过期时间）、nbf（生效时间）、iat（签发时间）等。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;sub&quot;: &quot;1234567890&quot;,</span><br><span class="line">  &quot;name&quot;: &quot;John Doe&quot;,</span><br><span class="line">  &quot;admin&quot;: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>Signature: 使用头部中指定的算法和密钥对头部和负载进行签名。签名用于验证消息的完整性和发送者的身份。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HMACSHA256(</span><br><span class="line">  base64UrlEncode(header) + &quot;.&quot; +</span><br><span class="line">  base64UrlEncode(payload),</span><br><span class="line">  secret</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="二、JWT的使用流程"><a href="#二、JWT的使用流程" class="headerlink" title="二、JWT的使用流程"></a>二、JWT的使用流程</h3><p>使用JWT进行Web开发时，通常的步骤涉及创建、发送和验证JSON Web Tokens。</p>
<h4 id="1-生成JWT"><a href="#1-生成JWT" class="headerlink" title="1.生成JWT"></a>1.生成JWT</h4><ul>
<li>使用第三方库，例如jsonwebtoken（对于Node.js），也可以使用别的库：<a href="https://jwt.io/libraries%E3%80%82">https://jwt.io/libraries。</a></li>
<li>选择适当的算法和密钥来签名令牌</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> payload = &#123; <span class="attr">user_id</span>: <span class="number">123</span>, <span class="attr">username</span>: <span class="string">&#x27;john_doe&#x27;</span> &#125;;</span><br><span class="line"><span class="keyword">const</span> secretKey = <span class="string">&#x27;your_secret_key&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> token = jwt.<span class="title function_">sign</span>(payload, secretKey, &#123; <span class="attr">expiresIn</span>: <span class="string">&#x27;1h&#x27;</span> &#125;);</span><br></pre></td></tr></table></figure>

<h4 id="2-发送JWT"><a href="#2-发送JWT" class="headerlink" title="2.发送JWT"></a>2.发送JWT</h4><ul>
<li>将生成的JWT添加到请求头部（通常是Authorization头）或者作为请求参数发送给服务器。</li>
<li>在前端中使用 AJAX 请求或 Fetch API，确保将JWT添加到请求中。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Using Fetch API</span></span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;api/protected-endpoint&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">  <span class="attr">headers</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">`Bearer <span class="subst">$&#123;token&#125;</span>`</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error:&#x27;</span>, error));</span><br></pre></td></tr></table></figure>

<h4 id="3-验证JWT"><a href="#3-验证JWT" class="headerlink" title="3.验证JWT"></a>3.验证JWT</h4><ul>
<li>在服务器端设置中间件或拦截器来验证传入的JWT。</li>
<li>使用服务器端的密钥来验证JWT的签名，并检查有效期等声明。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Sample middleware using Express.js</span></span><br><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> secretKey = <span class="string">&#x27;your_secret_key&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">authenticateJWT</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> token = req.<span class="title function_">header</span>(<span class="string">&#x27;Authorization&#x27;</span>) &amp;&amp; req.<span class="title function_">header</span>(<span class="string">&#x27;Authorization&#x27;</span>).<span class="title function_">split</span>(<span class="string">&#x27; &#x27;</span>)[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!token) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">sendStatus</span>(<span class="number">401</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  jwt.<span class="title function_">verify</span>(token, secretKey, <span class="function">(<span class="params">err, user</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.<span class="title function_">sendStatus</span>(<span class="number">403</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    req.<span class="property">user</span> = user;</span><br><span class="line">    <span class="title function_">next</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-处理JWT的响应"><a href="#4-处理JWT的响应" class="headerlink" title="4.处理JWT的响应"></a>4.处理JWT的响应</h4><p>根据服务器响应处理 JWT，例如存储令牌以备将来使用。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Assuming response contains a JWT</span></span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;api/login&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">  <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">username</span>: <span class="string">&#x27;john_doe&#x27;</span>, <span class="attr">password</span>: <span class="string">&#x27;password&#x27;</span> &#125;),</span><br><span class="line">  <span class="attr">headers</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// Store the JWT in a secure way (e.g., localStorage, sessionStorage)</span></span><br><span class="line">    <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;token&#x27;</span>, data.<span class="property">token</span>);</span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;Error:&#x27;</span>, error));</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注：存储令牌时需要谨慎处理，最好是使用安全的存储方式，例如将JWT存储在HttpOnly的Cookie中，以减少CSRF攻击的风险。</p>
</blockquote>
<h3 id="三、JWT鉴权在ThinkJS中的实践"><a href="#三、JWT鉴权在ThinkJS中的实践" class="headerlink" title="三、JWT鉴权在ThinkJS中的实践"></a>三、JWT鉴权在ThinkJS中的实践</h3><h4 id="1-通过npm安装jsonwebtoken模块"><a href="#1-通过npm安装jsonwebtoken模块" class="headerlink" title="1.通过npm安装jsonwebtoken模块"></a>1.通过npm安装<code>jsonwebtoken</code>模块</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install jsonwebtoken</span><br></pre></td></tr></table></figure>

<h4 id="2-创建JWT鉴权中间件"><a href="#2-创建JWT鉴权中间件" class="headerlink" title="2.创建JWT鉴权中间件"></a>2.创建JWT鉴权中间件</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// middleware/jwtAuth.js</span></span><br><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> secretKey = <span class="string">&#x27;your_secret_key&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function"><span class="params">options</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> token = ctx.<span class="property">header</span>.<span class="property">authorization</span> &amp;&amp; ctx.<span class="property">header</span>.<span class="property">authorization</span>.<span class="title function_">split</span>(<span class="string">&#x27; &#x27;</span>)[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!token) &#123;</span><br><span class="line">      ctx.<span class="property">status</span> = <span class="number">401</span>;</span><br><span class="line">      ctx.<span class="property">body</span> = <span class="string">&#x27;Unauthorized&#x27;</span>;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    jwt.<span class="title function_">verify</span>(token, secretKey, <span class="function">(<span class="params">err, user</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        ctx.<span class="property">status</span> = <span class="number">403</span>;</span><br><span class="line">        ctx.<span class="property">body</span> = <span class="string">&#x27;Forbidden&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 将用户信息添加到请求对象中</span></span><br><span class="line">      ctx.<span class="property">state</span>.<span class="property">user</span> = user;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">next</span>();</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h4 id="3-在src-config-middleware-js中配置中间件"><a href="#3-在src-config-middleware-js中配置中间件" class="headerlink" title="3.在src/config/middleware.js中配置中间件"></a>3.在<code>src/config/middleware.js</code>中配置中间件</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src/config/middleware.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">handle</span>: <span class="string">&#x27;jwtAuth&#x27;</span>, <span class="comment">// 使用的中间件名称</span></span><br><span class="line">    <span class="attr">options</span>: &#123;&#125;, <span class="comment">// 中间件的配置选项</span></span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br></pre></td></tr></table></figure>

<h4 id="4-在需要JWT鉴权的路由中使用中间件"><a href="#4-在需要JWT鉴权的路由中使用中间件" class="headerlink" title="4.在需要JWT鉴权的路由中使用中间件"></a>4.在需要JWT鉴权的路由中使用中间件</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src/config/router.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = [</span><br><span class="line">  <span class="comment">// 其他路由配置</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/api/protected-endpoint&#x27;</span>,</span><br><span class="line">    <span class="attr">controller</span>: <span class="string">&#x27;api&#x27;</span>,</span><br><span class="line">    <span class="attr">middleware</span>: <span class="string">&#x27;jwtAuth&#x27;</span>, <span class="comment">// 使用 JWT 鉴权中间件</span></span><br><span class="line">    <span class="attr">action</span>: <span class="string">&#x27;protectedEndpoint&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br></pre></td></tr></table></figure>

<h4 id="5-在控制器中处理受保护的端点，通过ctx-state-user来访问用户信息"><a href="#5-在控制器中处理受保护的端点，通过ctx-state-user来访问用户信息" class="headerlink" title="5.在控制器中处理受保护的端点，通过ctx.state.user来访问用户信息"></a>5.在控制器中处理受保护的端点，通过<code>ctx.state.user</code>来访问用户信息</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// src/controller/api.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">class</span> <span class="title class_">extends</span> think.<span class="property">Controller</span> &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">protectedEndpoint</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> user = <span class="variable language_">this</span>.<span class="property">ctx</span>.<span class="property">state</span>.<span class="property">user</span>;</span><br><span class="line">    <span class="comment">// 处理受保护的端点逻辑，使用用户信息</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">success</span>(<span class="string">&#x27;Protected endpoint accessed by &#x27;</span> + user.<span class="property">username</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注：以上代码中的密钥<code>secretKey</code>是示例，实际开发中应该使用更复杂的密钥。</p>
</blockquote>
]]></content>
      <categories>
        <category>Web开发</category>
      </categories>
      <tags>
        <tag>Web开发</tag>
        <tag>JWT</tag>
      </tags>
  </entry>
  <entry>
    <title>个人隐私防护基础知识</title>
    <url>/archives/a2debaf9.html</url>
    <content><![CDATA[<h3 id="一、防范IP地址泄露"><a href="#一、防范IP地址泄露" class="headerlink" title="一、防范IP地址泄露"></a>一、防范IP地址泄露</h3><blockquote>
<ul>
<li>代理上网 </li>
<li>公共场所上网</li>
</ul>
</blockquote>
<blockquote>
<p>注：即使在公共场所上网，最好也使用代理，以增强隐匿性。</p>
</blockquote>
<h3 id="二、传输内容的防范"><a href="#二、传输内容的防范" class="headerlink" title="二、传输内容的防范"></a>二、传输内容的防范</h3><blockquote>
<p>规模较大的组织机构，都会在内部网络部署“网络行为审计系统”。作为网络监控设备，它会实时监视网络上传输的数据内容，并进行分析，然后把分析结果保存下来。</p>
</blockquote>
<blockquote>
<p>防范措施：</p>
<ul>
<li>浏览网站，尽量使用加密协议。多数网站支持HTTP＆HTTPS，一定要选择HTTPS加密协议，能有效防止传输的内容被监视。</li>
<li>能用加密代理，就别用明文代理。无论是“代理软件”还是“Web代理”，一定要确保代理是加密的。不加密的“明文代理”非常不安全，既容易被入侵，也容易被监控。</li>
</ul>
</blockquote>
<h3 id="三、通讯工具的防范"><a href="#三、通讯工具的防范" class="headerlink" title="三、通讯工具的防范"></a>三、通讯工具的防范</h3><p>1.是否依赖“手机号”</p>
<blockquote>
<p>至少包括两种：其一，IM绑定手机号；其二，注册IM时需要用手机短信进行验证。</p>
</blockquote>
<blockquote>
<p>IM工具依赖手机号，也就意味着IM账号高度关联手机号。被“开盒”风险增大，只需通过“手机号”就可以定位到真实身份。如果某种原因，不得不用某款依赖手机号的IM工具，尽量确保该手机号与真实身份无关（比如不记名手机卡、物联卡，并且在支付环节用虚拟币、现金等）。</p>
</blockquote>
<p>2.自动登录的隐患</p>
<blockquote>
<p>两种解决方法：其一，不使用自动登录；其二，使用加密存储。</p>
</blockquote>
<blockquote>
<p>不使用自动登录的话，每次都要输入口令，操作过于繁琐。所以，“加密存储”属于即安全又方便的做法。</p>
</blockquote>
<p>3.本地存储的隐患</p>
<blockquote>
<p>很多IM（如Skype）的聊天记录是存储在本机上的。所以，对文件或整个磁盘加密很有必要。</p>
</blockquote>
<h3 id="四、使用加密存储"><a href="#四、使用加密存储" class="headerlink" title="四、使用加密存储"></a>四、使用加密存储</h3><blockquote>
<ul>
<li>知名加密软件极难破解，所以密钥丢失，后果很严重。</li>
<li>首次用加密软件，加密前，务必做好备份工作，以防配置错误，导致数据丢失。</li>
<li>加密系统盘or全盘加密，对性能会有一定影响。影响程度多大，取决于你选择哪种加密算法。</li>
<li>使用磁盘加密的电脑，当不用电脑时一定要关机，不要使用“待机”，禁用“休眠”模式。</li>
<li>大部分虚拟化软件，虚拟系统中的虚拟硬盘通常对应物理系统中的某个单独文件。为了安全起见，使用虚拟机必须搭配“磁盘加密软件”一起用，把虚拟机放到加密盘中。</li>
</ul>
</blockquote>
<h3 id="五、“身份隔离”"><a href="#五、“身份隔离”" class="headerlink" title="五、“身份隔离”"></a>五、“身份隔离”</h3><blockquote>
<p>在安全领域，“身份隔离”是重中之重。忽视了身份隔离，可能会导致不同身份之间存在某种微妙的联系（关联性）。一旦攻击者想要追溯你的真实身份，这种跨身份的关联性将会成为致命伤。</p>
</blockquote>
<p>1.自然人身份（真实身份）</p>
<blockquote>
<p>对于大多数人而言，只会有一个“自然人身份”；少数特殊的人（如间谍）可能会有不止一个“自然人身份”。</p>
</blockquote>
<p>2.网络身份（虚拟身份）</p>
<blockquote>
<p>上网冲浪时，我们都会给自己创造一个或多个“虚拟身份”。</p>
</blockquote>
<p>3.网络帐号</p>
<blockquote>
<p>需要用户认证的网络服务（比如微信），其帐号必定会包含很多属性：高信息量—身份证号&#x2F;手机号&#x2F;邮箱&#x2F;住址等；低信息量—籍贯&#x2F;性别&#x2F;年龄&#x2F;星座等。</p>
</blockquote>
<h3 id="六、身份追踪"><a href="#六、身份追踪" class="headerlink" title="六、身份追踪"></a>六、身份追踪</h3><p>1、网络帐号的关联性</p>
<blockquote>
<p>账号之间的高信息量属性叠加</p>
</blockquote>
<blockquote>
<p>举例：要同时注册了两个邮箱，用于两个不同的虚拟身份。注册时因为需要手机短信验证，却只有一张手机卡，于是两个邮箱设置了相同的手机号。如此一来，攻击者收集情报时，自然就明白两个邮箱帐号隶属同一人。</p>
</blockquote>
<p>2、操作系统导致的关联性</p>
<blockquote>
<p>当你操作网络帐号，总是需要某种客户端软件（比如浏览器、手机APP等）。这些客户端软件会在操作系统中留下帐号相关的某些信息。</p>
</blockquote>
<blockquote>
<p>举例：浏览器会在cookie中记录帐号的信息，聊天工具也会在本地存储聊天帐号的用户名（user ID）。在同一个操作系统中使用不同的网络帐号，一旦系统遭到恶意软件攻击，攻击者就有可能发现这几个帐号信息，并由此判断这几个帐号同属一个自然人。</p>
</blockquote>
<p>3、公网地址导致的关联性</p>
<blockquote>
<p>如果几个帐号在公网IP地址上表现出某种相似性，并且次数足够多，那这些帐号就有可能存在关联性。</p>
</blockquote>
<blockquote>
<p>举例：假如在某论坛上注册了3个马甲（不妨称之为ABC）。为了避免暴露真实IP，使用代理工具访问该论坛（单重代理）。在该场景下，如果论坛管理员对每个帐号的“访问者IP”进行分析，就会发现ABC三个帐号每次页面访问都是来自同一个代理IP。于是，管理员必然怀疑这三个论坛用户隶属同一个自然人。</p>
</blockquote>
<p>4、时间导致的关联性</p>
<blockquote>
<p>如果两个帐号在时间上表现出某种规律，并且持续足够久，那这两个帐号就可能存在关联性。</p>
</blockquote>
<blockquote>
<p>举例：假设在系统上安装了两个IM客户端（对应两个不同帐号）。每次，这两个帐号都会在间隔很短的一个时间段内“同时上线”、“同时下线”。这种现象只要持续多天，基本上就可以判断这两个帐号处在同一个操作系统上，因此断定属于同一用户。</p>
</blockquote>
<h3 id="七、防范身份追踪的注意事项"><a href="#七、防范身份追踪的注意事项" class="headerlink" title="七、防范身份追踪的注意事项"></a>七、防范身份追踪的注意事项</h3><p>1、“虚拟身份”的划分越细越好</p>
<blockquote>
<p>最好是一种用途设置一个“虚拟身份”，如同船舶的“水密舱”。即使出现意外，每个身份提供攻击者分析的信息量很少。</p>
</blockquote>
<blockquote>
<p>注：公开的“虚拟身份”可以与平台绑定，淘宝联系人叫X云，京东叫X强东，网易叫X三石。只要接到诈骗、销售电话，马上就能得知哪个平台的账号信息泄露了。</p>
</blockquote>
<p>2、对于匿名性高的身份，不要创建太多网络帐号</p>
<blockquote>
<p>创建的网络帐号越多，防范和攻击面就越大。一旦账号曝光，就会威胁到身份的匿名性。</p>
</blockquote>
<p>3、对于匿名性高的身份，其所属帐号不要绑定手机号。</p>
<blockquote>
<p>创建账号时，如果需要手机验证码，可以使用虚拟号接码服务。</p>
</blockquote>
<p>4、对于匿名性高的身份，不要在手机上操作相关帐号。</p>
<blockquote>
<p>手机系统相比桌面系统，提供的安全功能远远不如。</p>
</blockquote>
<p>5、一个“网络帐号”只隶属一个身份，禁止多个身份共用一个帐号。</p>
<blockquote>
<p>不同身份使用同一“网络帐号”很容易就推测出：同属一个自然人。</p>
</blockquote>
<p>6、需要匿名的“虚拟身份”，其所属的帐号必须与其它身份的帐号彻底隔离。</p>
<blockquote>
<p>每个匿名身份都有一个专属的系统环境（虚拟机或物理机）。</p>
</blockquote>
]]></content>
      <categories>
        <category>信息安全</category>
      </categories>
      <tags>
        <tag>信息安全</tag>
        <tag>隐私防护</tag>
      </tags>
  </entry>
  <entry>
    <title>next.js全栈项目初始化</title>
    <url>/archives/b6901cdd.html</url>
    <content><![CDATA[<h3 id="一、安装Node-js"><a href="#一、安装Node-js" class="headerlink" title="一、安装Node.js"></a>一、安装Node.js</h3><h4 id="1-打开Node-js官网，点击下载”18-17-0-LTS”（长期支持版本）"><a href="#1-打开Node-js官网，点击下载”18-17-0-LTS”（长期支持版本）" class="headerlink" title="1.打开Node.js官网，点击下载”18.17.0 LTS”（长期支持版本）"></a>1.打开<a href="https://nodejs.org/">Node.js官网</a>，点击下载”18.17.0 LTS”（长期支持版本）</h4><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/Nodejs842635.jpg" alt="插图1"></p>
<h4 id="2-运行安装程序，按照向导的默认设置一直”下一步”即可，安装完成后打开终端"><a href="#2-运行安装程序，按照向导的默认设置一直”下一步”即可，安装完成后打开终端" class="headerlink" title="2.运行安装程序，按照向导的默认设置一直”下一步”即可，安装完成后打开终端"></a>2.运行安装程序，按照向导的默认设置一直”下一步”即可，安装完成后打开终端</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 终端中检测是否安装成功，查看版本</span></span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>

<h3 id="二、初始化项目"><a href="#二、初始化项目" class="headerlink" title="二、初始化项目"></a>二、初始化项目</h3><blockquote>
<p>Next.js全栈项目初始化通常涉及到前端和后端的设置，我们使用Express作为后端框架。</p>
</blockquote>
<h4 id="1-打开命令行窗口，创建项目"><a href="#1-打开命令行窗口，创建项目" class="headerlink" title="1.打开命令行窗口，创建项目"></a>1.打开命令行窗口，创建项目</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建新目录</span></span><br><span class="line"><span class="built_in">mkdir</span> my_nextjs_fullstack_project</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开新目录</span></span><br><span class="line"><span class="built_in">cd</span> my_nextjs_fullstack_project</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化npm项目</span></span><br><span class="line">npm init -y</span><br></pre></td></tr></table></figure>

<h4 id="2-安装Next-js和Express"><a href="#2-安装Next-js和Express" class="headerlink" title="2.安装Next.js和Express"></a>2.安装Next.js和Express</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装命令</span></span><br><span class="line">npm install next react react-dom express</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建页面文件夹</span></span><br><span class="line"><span class="built_in">mkdir</span> pages</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建项目首页，并编辑添加以下文件内容</span></span><br><span class="line">// pages/index.js</span><br><span class="line">import React from <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"></span><br><span class="line">const Home = () =&gt; &#123;</span><br><span class="line">  <span class="built_in">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;h1&gt;Hello Next.js!&lt;/h1&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> default Home;</span><br></pre></td></tr></table></figure>

<h4 id="3-创建Express后端"><a href="#3-创建Express后端" class="headerlink" title="3.创建Express后端"></a>3.创建Express后端</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在项目根目录新建server.js文件，编辑并添加以下内容</span></span><br><span class="line">// server.js</span><br><span class="line">const express = require(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line">const next = require(<span class="string">&#x27;next&#x27;</span>);</span><br><span class="line"></span><br><span class="line">const dev = process.env.NODE_ENV !== <span class="string">&#x27;production&#x27;</span>;</span><br><span class="line">const app = next(&#123; dev &#125;);</span><br><span class="line">const handle = app.getRequestHandler();</span><br><span class="line"></span><br><span class="line">app.prepare().<span class="keyword">then</span>(() =&gt; &#123;</span><br><span class="line">  const server = express();</span><br><span class="line"></span><br><span class="line">  server.get(&#x27;*&#x27;, (req, res) =&gt; &#123;</span><br><span class="line">    return handle(req, res);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  server.listen(<span class="number">3000</span>, (err) =&gt; &#123;</span><br><span class="line">    if (err) throw err;</span><br><span class="line">    console.log(&#x27;&gt; Ready on http://localhost:<span class="number">3000</span>&#x27;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h4 id="4-添加启动脚本"><a href="#4-添加启动脚本" class="headerlink" title="4.添加启动脚本"></a>4.添加启动脚本</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 编辑package.json文件中的scripts部分</span></span><br><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;dev&quot;</span>: <span class="string">&quot;node server.js&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="5-启动应用，访问：http-localhost-3000-查看Next-js应用"><a href="#5-启动应用，访问：http-localhost-3000-查看Next-js应用" class="headerlink" title="5.启动应用，访问：http://localhost:3000 查看Next.js应用"></a>5.启动应用，访问：<a href="http://localhost:3000/">http://localhost:3000</a> 查看Next.js应用</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure>

<h3 id="三、安装ESLint和Prettier"><a href="#三、安装ESLint和Prettier" class="headerlink" title="三、安装ESLint和Prettier"></a>三、安装ESLint和Prettier</h3><h4 id="1-在项目根目录下执行终端命令，安装ESLint和Prettier"><a href="#1-在项目根目录下执行终端命令，安装ESLint和Prettier" class="headerlink" title="1.在项目根目录下执行终端命令，安装ESLint和Prettier"></a>1.在项目根目录下执行终端命令，安装ESLint和Prettier</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">npm install --save-dev eslint prettier</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化ESLint配置</span></span><br><span class="line">npx eslint --init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装ESLint插件</span></span><br><span class="line">npm install --save-dev eslint-plugin-react eslint-plugin-react-hooks</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装Prettier插件</span></span><br><span class="line">npm install --save-dev eslint-config-prettier eslint-plugin-prettier</span><br></pre></td></tr></table></figure>

<h4 id="2-配置文件：-eslintrc-js"><a href="#2-配置文件：-eslintrc-js" class="headerlink" title="2.配置文件：.eslintrc.js"></a>2.配置文件：<code>.eslintrc.js</code></h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;extends&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;next/core-web-vitals&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;eslint:recommended&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;plugin:prettier/recommended&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="comment">// nextjs官方推荐</span></span><br><span class="line">  <span class="attr">&quot;env&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;es2020&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;es6&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;node&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;plugins&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;prettier&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;rules&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;prettier/prettier&quot;</span><span class="punctuation">:</span> <span class="string">&quot;warn&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="3-创建Prettier配置文件"><a href="#3-创建Prettier配置文件" class="headerlink" title="3.创建Prettier配置文件"></a>3.创建Prettier配置文件</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 在项目根目录下新建.prettierrc.js文件，添加基本配置</span></span><br><span class="line">module.exports = <span class="punctuation">&#123;</span></span><br><span class="line">  singleQuote<span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span>   <span class="comment">// 使用双引号</span></span><br><span class="line">  printWidth<span class="punctuation">:</span> <span class="number">100</span><span class="punctuation">,</span>      <span class="comment">// 设置行宽度为100</span></span><br><span class="line">  semi<span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span>           <span class="comment">// 使用分号</span></span><br><span class="line">  trailingComma<span class="punctuation">:</span> &#x27;all&#x27;<span class="punctuation">,</span> <span class="comment">// 添加尾部逗号</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// TypeScript相关配置</span></span><br><span class="line">  arrowParens<span class="punctuation">:</span> &#x27;always&#x27;<span class="punctuation">,</span> <span class="comment">// 箭头函数参数始终使用括号</span></span><br><span class="line">  bracketSpacing<span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span>  <span class="comment">// 在字面量声明的大括号中添加空格</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// IDE和代码编辑器集成</span></span><br><span class="line">  useTabs<span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span>        <span class="comment">// 使用空格替代Tab</span></span><br><span class="line">  tabWidth<span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span>           <span class="comment">// 设置Tab键格式</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 其它配置</span></span><br><span class="line">  proseWrap<span class="punctuation">:</span> &#x27;always&#x27;<span class="punctuation">,</span>              <span class="comment">// Markdown等设置</span></span><br><span class="line">  htmlWhitespaceSensitivity<span class="punctuation">:</span> &#x27;css&#x27;<span class="punctuation">,</span> <span class="comment">// CSS中的空白字符</span></span><br><span class="line">  plugins<span class="punctuation">:</span> <span class="punctuation">[</span>&#x27;prettier-plugin-tailwindcss&#x27;<span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span>;</span><br></pre></td></tr></table></figure>

<h3 id="四、安装Husky"><a href="#四、安装Husky" class="headerlink" title="四、安装Husky"></a>四、安装Husky</h3><h4 id="1-在项目根目录下打开终端"><a href="#1-在项目根目录下打开终端" class="headerlink" title="1.在项目根目录下打开终端"></a>1.在项目根目录下打开终端</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装Husky</span></span><br><span class="line">npm install husky --save-dev</span><br></pre></td></tr></table></figure>

<h4 id="2-配置Git-Hooks：package-json"><a href="#2-配置Git-Hooks：package-json" class="headerlink" title="2.配置Git Hooks：package.json"></a>2.配置Git Hooks：<code>package.json</code></h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"># 添加husky字段</span><br><span class="line"><span class="attr">&quot;husky&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;pre-commit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;npm run lint:fix&quot;</span>  # 同时运行ESLint和Prettier</span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="3-添加npm脚本"><a href="#3-添加npm脚本" class="headerlink" title="3.添加npm脚本"></a>3.添加npm脚本</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"># 在scripts部分，添加脚本</span><br><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;lint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;eslint .&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;lint:fix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;npm run lint -- --fix&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="五、安装Commitlint"><a href="#五、安装Commitlint" class="headerlink" title="五、安装Commitlint"></a>五、安装Commitlint</h3><h4 id="1-在项目根目录下打开终端-1"><a href="#1-在项目根目录下打开终端-1" class="headerlink" title="1.在项目根目录下打开终端"></a>1.在项目根目录下打开终端</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装Commitlint和相关插件</span></span><br><span class="line">npm install @commitlint/cli @commitlint/config-conventional husky --save-dev</span><br></pre></td></tr></table></figure>

<h4 id="2-Commitlint配置：commitlint-config-js"><a href="#2-Commitlint配置：commitlint-config-js" class="headerlink" title="2.Commitlint配置：commitlint.config.js"></a>2.Commitlint配置：<code>commitlint.config.js</code></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 新建commitlint.config.js文件</span></span><br><span class="line"><span class="built_in">touch</span> commitlint.config.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用VSCode打开配置文件</span></span><br><span class="line">code commitlint.config.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例配置</span></span><br><span class="line">module.exports = &#123;</span><br><span class="line">  extends: [<span class="string">&#x27;@commitlint/config-conventional&#x27;</span>],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h4 id="3-配置Git-Hooks（使用Husky）：package-json"><a href="#3-配置Git-Hooks（使用Husky）：package-json" class="headerlink" title="3.配置Git Hooks（使用Husky）：package.json"></a>3.配置Git Hooks（使用Husky）：<code>package.json</code></h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"># 添加husky字段</span><br><span class="line"><span class="attr">&quot;husky&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;hooks&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;commit-msg&quot;</span><span class="punctuation">:</span> <span class="string">&quot;commitlint -E HUSKY_GIT_PARAMS&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>next.js</category>
      </categories>
      <tags>
        <tag>next.js</tag>
        <tag>项目初始化</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Vercel快速部署前端项目</title>
    <url>/archives/c5632f8e.html</url>
    <content><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><blockquote>
<p>前端项目部署流程，一般如下所示：</p>
<ul>
<li>打包项目</li>
<li>上传项目</li>
<li>服务器配置</li>
<li>域名配置</li>
<li>SSL证书</li>
<li>CDN加速</li>
<li>监控和性能优化</li>
</ul>
</blockquote>
<blockquote>
<p>在实际部署过程中，还需要考虑备份、回滚策略、自动化部署等方面的问题。其中，最消耗开发成本的就是配置Nginx、域名、申请证书和CDN加速，因为每次修改代码后，打包上转服务器都需要再折腾一下。</p>
</blockquote>
<h3 id="二、使用Vercel部署项目"><a href="#二、使用Vercel部署项目" class="headerlink" title="二、使用Vercel部署项目"></a>二、使用Vercel部署项目</h3><blockquote>
<p><code>Vercel</code>是一个面向前端应用部署协作的个人用户免费托管平台，支持自动化构建、服务器端渲染、静态网站生成等功能。同类平台还有<code>Netlify</code>和<code>Github Pages</code>，而选择<code>Vercel</code>是因为其在全球拥有70多个数据中心，可以确保项目在世界任何角落都有最快的加载速度，特别是相比其他平台，<code>Vercel</code>在国内网络的访问速度表现极佳。</p>
</blockquote>
<h4 id="1-注册账号：https-vercel-com-login"><a href="#1-注册账号：https-vercel-com-login" class="headerlink" title="1.注册账号：https://vercel.com/login"></a>1.注册账号：<a href="https://vercel.com/login">https://vercel.com/login</a></h4><blockquote>
<p>注：直接使用GitHub账号即可，不要使用绑定QQ邮箱的Github账号注册，会失败。</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/zhuce.png" alt="注册"> </p>
<h4 id="2-将Github项目连接到Vercel"><a href="#2-将Github项目连接到Vercel" class="headerlink" title="2.将Github项目连接到Vercel"></a>2.将Github项目连接到Vercel</h4><blockquote>
<p>注：Vercel 支持30多种前端框架，如React、Vue、Angular等；也支持静态网站生成器，如Next.js、Gatsby、Hugo等。</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/lianjie1.png" alt="连接1"></p>
<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/lianjie2.png" alt="连接2"></p>
<h4 id="3-选择项目，点击Import，跳转到项目部署页面"><a href="#3-选择项目，点击Import，跳转到项目部署页面" class="headerlink" title="3.选择项目，点击Import，跳转到项目部署页面"></a>3.选择项目，点击<code>Import</code>，跳转到项目部署页面</h4><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/xuanze1.png" alt="xuanze"></p>
<h4 id="4-配置项目信息，根据需要设置打包命令"><a href="#4-配置项目信息，根据需要设置打包命令" class="headerlink" title="4.配置项目信息，根据需要设置打包命令"></a>4.配置项目信息，根据需要设置打包命令</h4><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/dajian8374.png" alt="xiangmu"></p>
<blockquote>
<p>Project Name：项目的名称<br>Framework Preset：框架预设<br>Root Directory：根目录<br>Build and Output Settings：打包命令<br>Output Directory：输出目录<br>Install Command：安装命令<br>Environment Variables：环境变量</p>
</blockquote>
<h3 id="三、自定义域名"><a href="#三、自定义域名" class="headerlink" title="三、自定义域名"></a>三、自定义域名</h3><h4 id="1-购买域名"><a href="#1-购买域名" class="headerlink" title="1.购买域名"></a>1.购买域名</h4><blockquote>
<p>推荐<code>NameSilo</code>：<a href="https://www.namesilo.com/">https://www.namesilo.com/</a> ，Google搜索优惠码：<a href="https://www.google.com/search?q=NameSilo+coupon+2024&sca_esv=590391945&ei=EpCZZdfDIvbPkPIPo-mhuAw&ved=0ahUKEwjXlP30psmDAxX2J0QIHaN0CMcQ4dUDCBA&uact=5&oq=NameSilo+coupon+2024&gs_lp=Egxnd3Mtd2l6LXNlcnAiFE5hbWVTaWxvIGNvdXBvbiAyMDI0MggQABiABBiiBDIIEAAYgAQYogRIzxFQmgVYjAxwAXgBkAEAmAGDAqAB_wOqAQMyLTK4AQPIAQD4AQHCAgoQABhHGNYEGLADwgIFEAAYgATCAgQQABgewgIGEAAYCBge4gMEGAAgQYgGAZAGCg&sclient=gws-wiz-serp">namesilo coupon</a></p>
</blockquote>
<h4 id="2-打开Vercel控制台，点击-Settings-→-Domains-→-在输入框填写域名并点击-Add-按钮。"><a href="#2-打开Vercel控制台，点击-Settings-→-Domains-→-在输入框填写域名并点击-Add-按钮。" class="headerlink" title="2.打开Vercel控制台，点击 Settings → Domains → 在输入框填写域名并点击 Add 按钮。"></a>2.打开Vercel控制台，点击 Settings → Domains → 在输入框填写域名并点击 Add 按钮。</h4><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/ming8652.jpg" alt="插图"></p>
<h4 id="3-添加域名解析，推荐使用CF：https-www-cloudflare-com"><a href="#3-添加域名解析，推荐使用CF：https-www-cloudflare-com" class="headerlink" title="3.添加域名解析，推荐使用CF：https://www.cloudflare.com"></a>3.添加域名解析，推荐使用CF：<a href="https://www.cloudflare.com/">https://www.cloudflare.com</a></h4><blockquote>
<p>首页点击 Add a Site → 输入管理的域名 → 选择免费套餐即可</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/yumin2.png" alt="yumin2"></p>
<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/yumin3.png" alt="yumin3"></p>
<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/yumin4.png" alt="yumin4"></p>
<h4 id="4-NameSilo修改域名的NS记录"><a href="#4-NameSilo修改域名的NS记录" class="headerlink" title="4.NameSilo修改域名的NS记录"></a>4.NameSilo修改域名的NS记录</h4><blockquote>
<p>点击右上角的Manage My Domains → 选中要修改NS记录的域名 → 点击Change Nameservers修改NS记录</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/xiugai.png" alt="xiugai"></p>
<h4 id="5-NameSilo默认有3个NS记录，将默认的都删除，自行修改后提交即可"><a href="#5-NameSilo默认有3个NS记录，将默认的都删除，自行修改后提交即可" class="headerlink" title="5.NameSilo默认有3个NS记录，将默认的都删除，自行修改后提交即可"></a>5.NameSilo默认有3个NS记录，将默认的都删除，自行修改后提交即可</h4><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/xiugai2.png" alt="xiugai2"></p>
<h4 id="6-Cloudflare配置"><a href="#6-Cloudflare配置" class="headerlink" title="6.Cloudflare配置"></a>6.Cloudflare配置</h4><blockquote>
<p>NS记录修改生效要30分钟左右，生效后在Cloudflare的DNS下面，添加域名解析A记录即可。</p>
</blockquote>
<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/xiugai3871.png" alt="xiugai3"></p>
<h3 id="补充：Vercel-还提供了-Serverless-Functions-服务，允许开发者在前端项目中添加服务器端的逻辑。这些函数会在-Vercel-的服务器上运行，无需开发者管理任何服务器。"><a href="#补充：Vercel-还提供了-Serverless-Functions-服务，允许开发者在前端项目中添加服务器端的逻辑。这些函数会在-Vercel-的服务器上运行，无需开发者管理任何服务器。" class="headerlink" title="补充：Vercel 还提供了 Serverless Functions 服务，允许开发者在前端项目中添加服务器端的逻辑。这些函数会在 Vercel 的服务器上运行，无需开发者管理任何服务器。"></a>补充：Vercel 还提供了 Serverless Functions 服务，允许开发者在前端项目中添加服务器端的逻辑。这些函数会在 Vercel 的服务器上运行，无需开发者管理任何服务器。</h3><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/Serverless.jpg" alt="Serverless"></p>
]]></content>
      <categories>
        <category>Vercel</category>
      </categories>
      <tags>
        <tag>Vercel</tag>
        <tag>前端部署</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Jenkins自动化部署前端项目</title>
    <url>/archives/beb4375b.html</url>
    <content><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>Jenkins 是一个开源的自动化服务器，可用于构建、测试和部署项目。它提供了一个可扩展的插件系统，支持多种技术和工具组合，通过自动化减少开发和运维过程中的手动设置，满足了软件开发、持续集成（CI）、持续交付（CD）的需求。</p>
<blockquote>
<ul>
<li>独立性：支持构建独立于环境的应用程序，而不依赖于特定的开发环境</li>
<li>时效性：通过自动化，Jenkins可以显著缩短软件交付的时间</li>
<li>正确性：Jenkins能够确保构建和部署的过程按预期执行，从而减少人为错误。</li>
<li>易维护：提供了可配置的构建流水线，让维护变得更加简单，同时也能灵活调整项目的需求变化。</li>
<li>版本控制：Jenkins集成了版本控制系统，与代码仓库协同工作，支持多种版本控制工具，如 Git、SVN 等。</li>
<li>社区支持：作为一款开源工具，Jenkins拥有庞大的社区支持，用户可以通过社区获取帮助、分享经验。</li>
</ul>
</blockquote>
<h3 id="二、安装Jenkins，以Ubuntu系统为例"><a href="#二、安装Jenkins，以Ubuntu系统为例" class="headerlink" title="二、安装Jenkins，以Ubuntu系统为例"></a>二、安装Jenkins，以Ubuntu系统为例</h3><blockquote>
<p>注：Jenkins项目地址 <a href="https://github.com/jenkinsci/jenkins">https://github.com/jenkinsci/jenkins</a></p>
</blockquote>
<h4 id="1-打开终端，更新包列表"><a href="#1-打开终端，更新包列表" class="headerlink" title="1.打开终端，更新包列表"></a>1.打开终端，更新包列表</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>

<h4 id="2-安装Java-Development-Kit"><a href="#2-安装Java-Development-Kit" class="headerlink" title="2.安装Java Development Kit"></a>2.安装Java Development Kit</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install default-jdk</span><br></pre></td></tr></table></figure>

<h4 id="3-添加Jenkins-GPG密钥"><a href="#3-添加Jenkins-GPG密钥" class="headerlink" title="3.添加Jenkins GPG密钥"></a>3.添加Jenkins GPG密钥</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -</span><br></pre></td></tr></table></figure>

<h4 id="4-将Jenkins存储库添加到APT包管理器列表中"><a href="#4-将Jenkins存储库添加到APT包管理器列表中" class="headerlink" title="4.将Jenkins存储库添加到APT包管理器列表中"></a>4.将Jenkins存储库添加到APT包管理器列表中</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo sh -c <span class="string">&#x27;echo deb http://pkg.jenkins.io/debian-stable binary/ &gt; /etc/apt/sources.list.d/jenkins.list&#x27;</span></span><br></pre></td></tr></table></figure>

<h4 id="5-更新包列表并安装Jenkins"><a href="#5-更新包列表并安装Jenkins" class="headerlink" title="5.更新包列表并安装Jenkins"></a>5.更新包列表并安装Jenkins</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install jenkins</span><br></pre></td></tr></table></figure>

<h4 id="6-启动Jenkins服务"><a href="#6-启动Jenkins服务" class="headerlink" title="6.启动Jenkins服务"></a>6.启动Jenkins服务</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">sudo systemctl start jenkins</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查服务状态</span></span><br><span class="line">sudo systemctl status jenkins</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开防火墙</span></span><br><span class="line">sudo ufw allow 8080</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查防火墙状态</span></span><br><span class="line">sudo ufw status</span><br></pre></td></tr></table></figure>

<h4 id="7-打开浏览器，访问”"><a href="#7-打开浏览器，访问”" class="headerlink" title="7.打开浏览器，访问”"></a>7.打开浏览器，访问”<a href="http://localhost:8080"，完成Jenkins初始化设置">http://localhost:8080&quot;，完成Jenkins初始化设置</a></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 获取初始密码</span></span><br><span class="line">sudo <span class="built_in">cat</span> /var/lib/jenkins/secrets/initialAdminPassword</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/Jenkins1.png" alt="cha1"></p>
<h3 id="三、Jenkins基本设置"><a href="#三、Jenkins基本设置" class="headerlink" title="三、Jenkins基本设置"></a>三、Jenkins基本设置</h3><h4 id="1-登录Jenkins控制台，点击Install-suggested-plugins选项"><a href="#1-登录Jenkins控制台，点击Install-suggested-plugins选项" class="headerlink" title="1.登录Jenkins控制台，点击Install suggested plugins选项"></a>1.登录Jenkins控制台，点击Install suggested plugins选项</h4><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/Jenkins2.png" alt="cha2"></p>
<h4 id="2-安装完成后，系统将提示设置管理账户"><a href="#2-安装完成后，系统将提示设置管理账户" class="headerlink" title="2.安装完成后，系统将提示设置管理账户"></a>2.安装完成后，系统将提示设置管理账户</h4><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/Jenkins3.png" alt="cha3"></p>
<h4 id="3-按照要求，填写用户名、密码和邮箱即可"><a href="#3-按照要求，填写用户名、密码和邮箱即可" class="headerlink" title="3.按照要求，填写用户名、密码和邮箱即可"></a>3.按照要求，填写用户名、密码和邮箱即可</h4><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/Jenkins4.png" alt="cha4"></p>
<h4 id="4-配置实例，设置服务器的IP地址"><a href="#4-配置实例，设置服务器的IP地址" class="headerlink" title="4.配置实例，设置服务器的IP地址"></a>4.配置实例，设置服务器的IP地址</h4><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/Jenkins5.png" alt="cha5"></p>
<h4 id="5-一切设置完成后，点击Start-using-Jenkins，即大功告成"><a href="#5-一切设置完成后，点击Start-using-Jenkins，即大功告成" class="headerlink" title="5.一切设置完成后，点击Start using Jenkins，即大功告成"></a>5.一切设置完成后，点击Start using Jenkins，即大功告成</h4><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/Jenkins6.png" alt="cha6"></p>
<h3 id="四、安装SSH插件"><a href="#四、安装SSH插件" class="headerlink" title="四、安装SSH插件"></a>四、安装SSH插件</h3><h4 id="1-点击Dashboard-→-Manage-Jenkins-→-Plugins页面"><a href="#1-点击Dashboard-→-Manage-Jenkins-→-Plugins页面" class="headerlink" title="1.点击Dashboard → Manage Jenkins → Plugins页面"></a>1.点击Dashboard → Manage Jenkins → Plugins页面</h4><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/Jenkins7.png" alt="cha7"></p>
<h4 id="2-选择插件安装"><a href="#2-选择插件安装" class="headerlink" title="2.选择插件安装"></a>2.选择插件安装</h4><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/Jenkins8.png" alt="cha8"></p>
<h4 id="3-安装完成后重启Jenkins即可"><a href="#3-安装完成后重启Jenkins即可" class="headerlink" title="3.安装完成后重启Jenkins即可"></a>3.安装完成后重启Jenkins即可</h4><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/Jenkins9.png" alt="cha9"></p>
<h3 id="五、安装Node-js和Git"><a href="#五、安装Node-js和Git" class="headerlink" title="五、安装Node.js和Git"></a>五、安装Node.js和Git</h3><blockquote>
<p>按照上面步骤，点击Dashboard → Manage Jenkins → Global Tool Configuration → “Add NodeJS”和”Add Git”即可。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装验证</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Node.js version: <span class="subst">$(node --version)</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Git version: <span class="subst">$(git --version)</span>&quot;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Jenkins</category>
      </categories>
      <tags>
        <tag>前端部署</tag>
        <tag>Jenkins</tag>
      </tags>
  </entry>
  <entry>
    <title>使用buildx构建多架构的Docker镜像</title>
    <url>/archives/be1ea230.html</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><h4 id="Buildx（BuildKit）是Docker官方提供的一个高级的构建引擎，可以通过多个后端驱动程序实现更强大和灵活的Docker镜像构建功能。以-Node-js-应用为例，演示Buildx构建Docker镜像的主要流程："><a href="#Buildx（BuildKit）是Docker官方提供的一个高级的构建引擎，可以通过多个后端驱动程序实现更强大和灵活的Docker镜像构建功能。以-Node-js-应用为例，演示Buildx构建Docker镜像的主要流程：" class="headerlink" title="Buildx（BuildKit）是Docker官方提供的一个高级的构建引擎，可以通过多个后端驱动程序实现更强大和灵活的Docker镜像构建功能。以 Node.js 应用为例，演示Buildx构建Docker镜像的主要流程："></a>Buildx（BuildKit）是Docker官方提供的一个高级的构建引擎，可以通过多个后端驱动程序实现更强大和灵活的Docker镜像构建功能。以 Node.js 应用为例，演示Buildx构建Docker镜像的主要流程：</h4><h3 id="一、准备Dockerfile"><a href="#一、准备Dockerfile" class="headerlink" title="一、准备Dockerfile"></a>一、准备Dockerfile</h3><h4 id="1-创建一个包含Node-js应用的目录，假设应用文件结构如下："><a href="#1-创建一个包含Node-js应用的目录，假设应用文件结构如下：" class="headerlink" title="1.创建一个包含Node.js应用的目录，假设应用文件结构如下："></a>1.创建一个包含Node.js应用的目录，假设应用文件结构如下：</h4><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">myapp/</span><br><span class="line">|<span class="comment">-- Dockerfile</span></span><br><span class="line">|<span class="comment">-- app.js</span></span><br><span class="line">|<span class="comment">-- package.json</span></span><br><span class="line">|<span class="comment">-- package-lock.json</span></span><br></pre></td></tr></table></figure>

<h4 id="2-在该目录中新建一个Dockerfile文件（无文件后缀），编写如下内容："><a href="#2-在该目录中新建一个Dockerfile文件（无文件后缀），编写如下内容：" class="headerlink" title="2.在该目录中新建一个Dockerfile文件（无文件后缀），编写如下内容："></a>2.在该目录中新建一个Dockerfile文件（无文件后缀），编写如下内容：</h4><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用 Node.js 14 作为基础镜像</span></span><br><span class="line"><span class="keyword">FROM</span> node:<span class="number">14</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置工作目录为/app</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制package.json和package-lock.json到工作目录</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> package*.json ./</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装应用依赖</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> npm install</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制应用代码到工作目录</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> . .</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定应用程序监听的端口</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">3000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动应用</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;node&quot;</span>, <span class="string">&quot;app.js&quot;</span>]</span></span><br></pre></td></tr></table></figure>

<h3 id="二、新建builder"><a href="#二、新建builder" class="headerlink" title="二、新建builder"></a>二、新建builder</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装Docker CLI插件</span></span><br><span class="line">docker buildx install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用默认配置新建builder，</span></span><br><span class="line">docker buildx create --use</span><br><span class="line"></span><br><span class="line"><span class="comment"># 适用于国内环境</span></span><br><span class="line">docker buildx create --use --name=mybuilder-cn --driver docker-container --driver-opt image=dockerpracticesig/buildkit:master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 适用于腾讯云环境</span></span><br><span class="line">docker buildx create --use --name=mybuilder-cn --driver docker-container --driver-opt image=dockerpracticesig/buildkit:master-tencent</span><br></pre></td></tr></table></figure>

<blockquote>
<ul>
<li><code>docker buildx create</code>：创建新的builder。</li>
<li><code>--use</code>：将新建的builder，设置为当前活动的builder。</li>
<li><code>--name=mybuilder-cn</code>：指定新建builder的名称为mybuilder-cn，可自行设定。</li>
<li><code>--driver docker-container</code>：指定builder使用docker-container作为驱动程序。</li>
<li><code>--driver-opt image=dockerpracticesig/buildkit:master</code>：设置特定的BuildKit镜像。</li>
</ul>
</blockquote>
<h3 id="三、切换-查看builder信息"><a href="#三、切换-查看builder信息" class="headerlink" title="三、切换&#x2F;查看builder信息"></a>三、切换&#x2F;查看builder信息</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 切换到名为“mybuilder-cn”的builder</span></span><br><span class="line">docker buildx use mybuilder-cn</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前builder的详细信息</span></span><br><span class="line">docker buildx inspect</span><br></pre></td></tr></table></figure>


<h3 id="四、构建镜像"><a href="#四、构建镜像" class="headerlink" title="四、构建镜像"></a>四、构建镜像</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># “&lt;platform1&gt;,&lt;platform2&gt;,...”替换成“要构建的目标平台”</span></span><br><span class="line">docker buildx build --platform &lt;platform1&gt;,&lt;platform2&gt;,... -t myusername/hello .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以x86_64和arm64架构举例</span></span><br><span class="line">docker buildx build --platform linux/amd64,linux/arm64 -t myusername/hello .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查名为“myusername/hello”的Docker镜像详细信息</span></span><br><span class="line">docker buildx imagetools inspect myusername/hello</span><br></pre></td></tr></table></figure>

<blockquote>
<ul>
<li><code>--platform linux/amd64,linux/arm64</code>：指定构建的两个平台——x86_64、ARM64</li>
<li><code>-t myusername/hello</code>：指定构建的Docker镜像的名称和标签——myusername是Docker Hub用户名、hello是镜像名</li>
<li><code> .</code>：构建上下文的路径</li>
</ul>
</blockquote>
<h3 id="五、将镜像推送到Docker-Hub"><a href="#五、将镜像推送到Docker-Hub" class="headerlink" title="五、将镜像推送到Docker Hub"></a>五、将镜像推送到Docker Hub</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 确保仓库账户已登录</span></span><br><span class="line">docker buildx build --platform linux/amd64,linux/arm64 -t “Docker Hub用户名”/“镜像名称”:“标签” --push .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 示例：myusername/hello:v1.0</span></span><br><span class="line">docker buildx build --platform linux/amd64,linux/arm64 -t myusername/hello:v1.0 --push .</span><br></pre></td></tr></table></figure>

<h3 id="六、运行构建的Docker镜像"><a href="#六、运行构建的Docker镜像" class="headerlink" title="六、运行构建的Docker镜像"></a>六、运行构建的Docker镜像</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it --<span class="built_in">rm</span> myusername/hello:v1.0</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>buildx</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Fiddler抓包小程序教程</title>
    <url>/archives/405c26ea.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="Fiddler是一款适用于Windows系统的网络调试工具，能够捕获HTTP-HTTPS协议发送和接收的网络流量，包括请求和响应的详细信息。并且，可以手动修改请求和响应信息，提供了性能分析工具，对Web开发和程序调试非常有用。"><a href="#Fiddler是一款适用于Windows系统的网络调试工具，能够捕获HTTP-HTTPS协议发送和接收的网络流量，包括请求和响应的详细信息。并且，可以手动修改请求和响应信息，提供了性能分析工具，对Web开发和程序调试非常有用。" class="headerlink" title="Fiddler是一款适用于Windows系统的网络调试工具，能够捕获HTTP&#x2F;HTTPS协议发送和接收的网络流量，包括请求和响应的详细信息。并且，可以手动修改请求和响应信息，提供了性能分析工具，对Web开发和程序调试非常有用。"></a>Fiddler是一款适用于Windows系统的网络调试工具，能够捕获HTTP&#x2F;HTTPS协议发送和接收的网络流量，包括请求和响应的详细信息。并且，可以手动修改请求和响应信息，提供了性能分析工具，对Web开发和程序调试非常有用。</h3><h2 id="一、安装Fiddler"><a href="#一、安装Fiddler" class="headerlink" title="一、安装Fiddler"></a>一、安装Fiddler</h2><blockquote>
<p>官网下载：<a href="https://www.telerik.com/download/fiddler">https://www.telerik.com/download/fiddler</a></p>
</blockquote>
<h2 id="二、Fiddler配置"><a href="#二、Fiddler配置" class="headerlink" title="二、Fiddler配置"></a>二、Fiddler配置</h2><h3 id="1-打开Fiddler-→-菜单栏选择Tools-→-Options-→-Genneral-全部勾选"><a href="#1-打开Fiddler-→-菜单栏选择Tools-→-Options-→-Genneral-全部勾选" class="headerlink" title="1.打开Fiddler → 菜单栏选择Tools → Options → Genneral: 全部勾选"></a>1.打开Fiddler → 菜单栏选择Tools → Options → Genneral: 全部勾选</h3><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/Fiddler11111.png" alt="插图1"></p>
<h3 id="2-HTTPS配置-→-勾选Capture-HTTPS-CONNECTs-和-Decrypt-HTTPS-traffic-→-第一次配置弹出安装证书请求，同意即可"><a href="#2-HTTPS配置-→-勾选Capture-HTTPS-CONNECTs-和-Decrypt-HTTPS-traffic-→-第一次配置弹出安装证书请求，同意即可" class="headerlink" title="2.HTTPS配置 → 勾选Capture HTTPS CONNECTs 和 Decrypt HTTPS traffic → 第一次配置弹出安装证书请求，同意即可"></a>2.HTTPS配置 → 勾选Capture HTTPS CONNECTs 和 Decrypt HTTPS traffic → 第一次配置弹出<code>安装证书</code>请求，同意即可</h3><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/Fiddler22222.png" alt="插图2"></p>
<h3 id="3-Connections配置-→-端口号默认：8888-→-所有选项打勾"><a href="#3-Connections配置-→-端口号默认：8888-→-所有选项打勾" class="headerlink" title="3.Connections配置 → 端口号默认：8888 → 所有选项打勾"></a>3.Connections配置 → 端口号默认：8888 → 所有选项打勾</h3><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/Fiddler33333.png" alt="插图3"></p>
<h3 id="4-Gateway配置-→-Manual-Proxy-Configuration（手动配置本机代理）：127-0-0-1"><a href="#4-Gateway配置-→-Manual-Proxy-Configuration（手动配置本机代理）：127-0-0-1" class="headerlink" title="4.Gateway配置 → Manual Proxy Configuration（手动配置本机代理）：127.0.0.1"></a>4.Gateway配置 → Manual Proxy Configuration（手动配置本机代理）：127.0.0.1</h3><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/Fiddler44444.png" alt="插图4"></p>
<blockquote>
<p>注：配置完毕后，务必重启Fiddler。否则，配置不会起效果。</p>
</blockquote>
<h2 id="三、微信小程序"><a href="#三、微信小程序" class="headerlink" title="三、微信小程序"></a>三、微信小程序</h2><h3 id="1-登录PC端微信-→-设置-→-网络代理设置（地址：127-0-0-1-端口：8888）"><a href="#1-登录PC端微信-→-设置-→-网络代理设置（地址：127-0-0-1-端口：8888）" class="headerlink" title="1.登录PC端微信 → 设置 → 网络代理设置（地址：127.0.0.1 , 端口：8888）"></a>1.登录PC端微信 → 设置 → 网络代理设置（地址：127.0.0.1 , 端口：8888）</h3><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/Fiddle555555.png" alt="插图5"></p>
<p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/Fiddler66666.png" alt="插图6"></p>
<h3 id="2-打开需要抓包的小程序，切换到Fiddler查看抓包结果"><a href="#2-打开需要抓包的小程序，切换到Fiddler查看抓包结果" class="headerlink" title="2.打开需要抓包的小程序，切换到Fiddler查看抓包结果"></a>2.打开需要抓包的小程序，切换到Fiddler查看抓包结果</h3><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/Fiddler77777.jpg" alt="插图7"></p>
<h3 id="3-如果打不开小程序或没有抓到小程序的包，请Ctrl-Shift-ESC打开任务管理器-→-找到小程序进程（确保小程序未关闭）-→-打开文件所在位置"><a href="#3-如果打不开小程序或没有抓到小程序的包，请Ctrl-Shift-ESC打开任务管理器-→-找到小程序进程（确保小程序未关闭）-→-打开文件所在位置" class="headerlink" title="3.如果打不开小程序或没有抓到小程序的包，请Ctrl+Shift+ESC打开任务管理器 → 找到小程序进程（确保小程序未关闭） → 打开文件所在位置"></a>3.如果打不开小程序或没有抓到小程序的包，请Ctrl+Shift+ESC打开任务管理器 → 找到小程序进程（确保小程序未关闭） → 打开文件所在位置</h3><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/Fiddle888888.png" alt="插图8"></p>
<h3 id="4-找到小程序进程的缓存目录后-→-关闭小程序，退出微信-→-删除-WMPFRuntime目录下的所有文件"><a href="#4-找到小程序进程的缓存目录后-→-关闭小程序，退出微信-→-删除-WMPFRuntime目录下的所有文件" class="headerlink" title="4.找到小程序进程的缓存目录后 → 关闭小程序，退出微信 → 删除\WMPFRuntime目录下的所有文件"></a>4.找到小程序进程的缓存目录后 → 关闭小程序，退出微信 → 删除\WMPFRuntime目录下的所有文件</h3><blockquote>
<p>C:\Users\backlion\AppData\Roaming\Tencent\WeChat\XPlugin\Plugins\WMPFRuntime</p>
</blockquote>
<h3 id="5-打开Fiddler，清除Cache和Cookies的缓存（不然又会抓不到）"><a href="#5-打开Fiddler，清除Cache和Cookies的缓存（不然又会抓不到）" class="headerlink" title="5.打开Fiddler，清除Cache和Cookies的缓存（不然又会抓不到）"></a>5.打开Fiddler，清除Cache和Cookies的缓存（不然又会抓不到）</h3><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/Fiddler99999.png" alt="插图9"></p>
<h3 id="6-再次登录微信，打开小程序，切换到Fiddler查看抓包结果"><a href="#6-再次登录微信，打开小程序，切换到Fiddler查看抓包结果" class="headerlink" title="6.再次登录微信，打开小程序，切换到Fiddler查看抓包结果"></a>6.再次登录微信，打开小程序，切换到Fiddler查看抓包结果</h3><p><img src="https://cdn.jsdelivr.net/gh/huixing404/image/test/Fiddler101010.png" alt="插图10"></p>
]]></content>
      <categories>
        <category>Fiddler</category>
      </categories>
      <tags>
        <tag>Fiddler</tag>
        <tag>抓包</tag>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>使用jsDelivr加速静态文件</title>
    <url>/archives/45851863.html</url>
    <content><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><h4 id="jsDelivr是一个开源的-CDN（内容分发网络）服务，主要用于加速JavaScript库、CSS样式表、图像等的传输。"><a href="#jsDelivr是一个开源的-CDN（内容分发网络）服务，主要用于加速JavaScript库、CSS样式表、图像等的传输。" class="headerlink" title="jsDelivr是一个开源的 CDN（内容分发网络）服务，主要用于加速JavaScript库、CSS样式表、图像等的传输。"></a>jsDelivr是一个开源的 CDN（内容分发网络）服务，主要用于加速JavaScript库、CSS样式表、图像等的传输。</h4><h4 id="1-加速前端资源加载"><a href="#1-加速前端资源加载" class="headerlink" title="1.加速前端资源加载"></a>1.加速前端资源加载</h4><blockquote>
<p>jsDelivr提供了一个全球性的CDN，通过将静态资源分发到多个节点，用户可以从离他们地理位置最近的节点获取资源，从而提高加载速度。</p>
</blockquote>
<h4 id="2-支持多种前端库和框架"><a href="#2-支持多种前端库和框架" class="headerlink" title="2.支持多种前端库和框架"></a>2.支持多种前端库和框架</h4><blockquote>
<p>jsDelivr支持多种流行的前端库和框架，包括但不限于jQuery、Bootstrap、Vue.js、React等。</p>
</blockquote>
<h4 id="3-无需注册即可使用"><a href="#3-无需注册即可使用" class="headerlink" title="3.无需注册即可使用"></a>3.无需注册即可使用</h4><blockquote>
<p>使用jsDelivr并不需要注册账户，可以直接通过CDN的链接引用所需的资源，易于集成到各种项目中。</p>
</blockquote>
<h4 id="4-版本控制"><a href="#4-版本控制" class="headerlink" title="4.版本控制"></a>4.版本控制</h4><blockquote>
<p>jsDelivr允许开发者使用特定的版本号来引用库，确保项目在使用新版本时不会受到影响。</p>
</blockquote>
<h4 id="5-支持-GitHub-和-npm-上的资源"><a href="#5-支持-GitHub-和-npm-上的资源" class="headerlink" title="5.支持 GitHub 和 npm 上的资源"></a>5.支持 GitHub 和 npm 上的资源</h4><blockquote>
<p>jsDelivr可以直接从GitHub仓库和npm包管理器获取资源，更方便引用各种开源项目中的文件。</p>
</blockquote>
<h3 id="二、jsDelivr使用方法"><a href="#二、jsDelivr使用方法" class="headerlink" title="二、jsDelivr使用方法"></a>二、jsDelivr使用方法</h3><h4 id="1-构造jsDelivr链接"><a href="#1-构造jsDelivr链接" class="headerlink" title="1.构造jsDelivr链接"></a>1.构造jsDelivr链接</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># jsDelivr的CDN链接格式</span></span><br><span class="line">https://cdn.jsdelivr.net/npm/&#123;package&#125;@&#123;version&#125;/&#123;file&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 举例：使用jsDelivr获取jQuery特定版本中的文件</span></span><br><span class="line">https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 举例：使用jsDelivr获取jQuery最新版本，将版本号替换为latest</span></span><br><span class="line">https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 举例：使用jsDelivr获取目录列表，以bootstrap包为例</span></span><br><span class="line">https://cdn.jsdelivr.net/npm/bootstrap/</span><br></pre></td></tr></table></figure>

<blockquote>
<ul>
<li>{package}: 包名，表示要请求的npm包</li>
<li>{version}: 包的版本号，表示要请求的特定版本</li>
<li>{file}: 文件路径，表示要请求的具体文件</li>
</ul>
</blockquote>
<blockquote>
<p>注：在构建jsDelivr链接时，尽量指定明确的版本号，而不是使用<code>latest</code>。这样可以确保应用在未来的更新中不会受到影响。</p>
</blockquote>
<h4 id="2-在项目里找到原始文件的链接，将其替换为-jsDelivr-CDN-的链接"><a href="#2-在项目里找到原始文件的链接，将其替换为-jsDelivr-CDN-的链接" class="headerlink" title="2.在项目里找到原始文件的链接，将其替换为 jsDelivr CDN 的链接"></a>2.在项目里找到原始文件的链接，将其替换为 jsDelivr CDN 的链接</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 原始链接 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://example.com/path/to/your/file.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 替换为jsDelivr链接 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/package-name@version/path/to/your/file.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注：使用CDN加速并不适用于所有文件，有一些文件可能不适合被缓存。</p>
</blockquote>
<h3 id="三、解决jsdelivr缓存问题"><a href="#三、解决jsdelivr缓存问题" class="headerlink" title="三、解决jsdelivr缓存问题"></a>三、解决jsdelivr缓存问题</h3><h4 id="1-版本号或时间戳"><a href="#1-版本号或时间戳" class="headerlink" title="1.版本号或时间戳"></a>1.版本号或时间戳</h4><blockquote>
<p>在请求文件时，可以通过在文件的URL中添加版本号或时间戳的方式来绕过缓存。</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/package-name@1.0.0/file.js?version=1.1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="2-使用不同的CDN路径"><a href="#2-使用不同的CDN路径" class="headerlink" title="2.使用不同的CDN路径"></a>2.使用不同的CDN路径</h4><blockquote>
<p>jsDelivr提供了多个CDN路径，可以尝试切换到其他路径来获取最新的文件。</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用cdn.jsdelivr.net/npm/ --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/package-name@1.0.0/file.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 或使用cdn.jsdelivr.net/gh/ --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/user/repo@1.0.0/file.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="3-手动清理缓存"><a href="#3-手动清理缓存" class="headerlink" title="3.手动清理缓存"></a>3.手动清理缓存</h4><blockquote>
<p>jsDelivr自带手动清理缓存功能，可以通过访问如下链接来触发清理。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将“package-name”和“1.0.0”替换成使用的包名和版本号</span></span><br><span class="line">https://purge.jsdelivr.net/npm/package-name@1.0.0</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>jsDelivr</category>
      </categories>
      <tags>
        <tag>jsDelivr</tag>
      </tags>
  </entry>
  <entry>
    <title>使用frp进行内网穿透教程</title>
    <url>/archives/a586957.html</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote>
<p>电信运营商因为IP地址短缺常常不会给用户分配公网IP地址，而我们的台式机、NAS等设备却有远程访问的需求，此时选择使用frp进行内网穿透再合适不过了。<br>frp（Fast Reverse Proxy）作为一个用于网络通信的开源工具，常用于在内网和外网之间建立反向代理通道，实现内网服务的外部访问。该技术可以应用于内网服务器、摄像头、传感器等设备的远程访问或监控上。</p>
</blockquote>
<blockquote>
<p>工作原理：服务端运行，监听一个主端口，等待客户端的连接 → 客户端连接到服务端的主端口，同时告诉服务端要监听的端口和转发类型 → 服务端fork新的进程监听客户端指定的端口 → 外网用户连接到客户端指定的端口，服务端通过和客户端的连接将数据转发到客户端 → 客户端进程再将数据转发到本地服务，从而实现内网对外暴露服务的能力。</p>
</blockquote>
<blockquote>
<p>项目地址：<a href="https://github.com/fatedier/frp">https://github.com/fatedier/frp</a></p>
</blockquote>
<h3 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h3><h4 id="1-运行如下命令，选择相应版本下载"><a href="#1-运行如下命令，选择相应版本下载" class="headerlink" title="1.运行如下命令，选择相应版本下载"></a>1.运行如下命令，选择相应版本下载</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://github.com/fatedier/frp/releases/download/v0.52.0/frp_0.52.0_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure>

<h4 id="2-解压frp压缩包"><a href="#2-解压frp压缩包" class="headerlink" title="2.解压frp压缩包"></a>2.解压frp压缩包</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf frp_0.52.0_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure>

<h4 id="3-将文件复制到frps-usr-bin"><a href="#3-将文件复制到frps-usr-bin" class="headerlink" title="3.将文件复制到frps&#x2F;usr&#x2F;bin"></a>3.将文件复制到frps&#x2F;usr&#x2F;bin</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp frp_0.52.0_linux_arm64/frps/usr/bin/</span><br></pre></td></tr></table></figure>

<h4 id="4-打开配置文件"><a href="#4-打开配置文件" class="headerlink" title="4.打开配置文件"></a>4.打开配置文件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi frps.toml</span><br></pre></td></tr></table></figure>

<h4 id="5-配置文件修改：-etc-frp-frps-toml"><a href="#5-配置文件修改：-etc-frp-frps-toml" class="headerlink" title="5.配置文件修改：&#x2F;etc&#x2F;frp&#x2F;frps.toml"></a>5.配置文件修改：&#x2F;etc&#x2F;frp&#x2F;frps.toml</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 服务端与客户端通信端口，默认是7000</span><br><span class="line">bindPort = 7000</span><br><span class="line"># 服务端将只接受TLS链接</span><br><span class="line">transport.tls.force = true</span><br><span class="line"># 身份验证令牌可以设置复杂点，frpc要与frps一致</span><br><span class="line">auth.method = &quot;token&quot;</span><br><span class="line">auth.token = &quot;设置复杂点的token&quot;   # 如&quot;PuBlicOde&quot;</span><br><span class="line"></span><br><span class="line"># 后台管理地址</span><br><span class="line">webServer.addr = &quot;0.0.0.0&quot;</span><br><span class="line"># 后台管理端口</span><br><span class="line">webServer.port = 7500</span><br><span class="line"># 设置后台登录的用户名和密码</span><br><span class="line">webServer.user = &quot;admin&quot;</span><br><span class="line">webServer.password = &quot;自行设置登录密码&quot;</span><br></pre></td></tr></table></figure>

<h4 id="6-配置文件修改：-etc-systemd-system-frps-service"><a href="#6-配置文件修改：-etc-systemd-system-frps-service" class="headerlink" title="6.配置文件修改：&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;frps.service"></a>6.配置文件修改：&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;frps.service</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description = frp server</span><br><span class="line">After = network.target syslog.target</span><br><span class="line">Wants = network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type = simple</span><br><span class="line">ExecStart = /usr/bin/frps -c /etc/frp/frps.toml</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy = multi-user.target</span><br></pre></td></tr></table></figure>

<h4 id="7-输入以下命令，启动frp服务"><a href="#7-输入以下命令，启动frp服务" class="headerlink" title="7.输入以下命令，启动frp服务"></a>7.输入以下命令，启动frp服务</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl enable frps</span><br><span class="line">systemctl start frps</span><br></pre></td></tr></table></figure>

<h4 id="8-Ubuntu服务器，使用ufw工具放行端口"><a href="#8-Ubuntu服务器，使用ufw工具放行端口" class="headerlink" title="8.Ubuntu服务器，使用ufw工具放行端口"></a>8.Ubuntu服务器，使用ufw工具放行端口</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 监听端口</span><br><span class="line">ufw allow 7000/tcp</span><br><span class="line"># 对外开发的端口</span><br><span class="line">ufw allow 443</span><br></pre></td></tr></table></figure>

<h3 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h3><h4 id="1-运行如下命令，选择相应版本下载-1"><a href="#1-运行如下命令，选择相应版本下载-1" class="headerlink" title="1.运行如下命令，选择相应版本下载"></a>1.运行如下命令，选择相应版本下载</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://github.com/fatedier/frp/releases/download/v0.52.0/frp_0.52.0_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure>

<h4 id="2-解压frp压缩包-1"><a href="#2-解压frp压缩包-1" class="headerlink" title="2.解压frp压缩包"></a>2.解压frp压缩包</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf frp_0.52.0_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure>

<h4 id="3-将文件复制到frps-usr-bin-1"><a href="#3-将文件复制到frps-usr-bin-1" class="headerlink" title="3.将文件复制到frps&#x2F;usr&#x2F;bin"></a>3.将文件复制到frps&#x2F;usr&#x2F;bin</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp frp_0.52.0_linux_arm64/frps/usr/bin/</span><br></pre></td></tr></table></figure>

<h4 id="4-打开配置文件-1"><a href="#4-打开配置文件-1" class="headerlink" title="4.打开配置文件"></a>4.打开配置文件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi frps.toml</span><br></pre></td></tr></table></figure>

<h4 id="5-配置文件修改：-etc-frp-frps-toml-1"><a href="#5-配置文件修改：-etc-frp-frps-toml-1" class="headerlink" title="5.配置文件修改：&#x2F;etc&#x2F;frp&#x2F;frps.toml"></a>5.配置文件修改：&#x2F;etc&#x2F;frp&#x2F;frps.toml</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 设置为服务器的IP地址</span><br><span class="line">serverAddr = &quot;x.x.x.x&quot;</span><br><span class="line"># 服务器的通信端口</span><br><span class="line">serverPort = 7000</span><br><span class="line">auth.method = &quot;token&quot;</span><br><span class="line"># 身份验证令牌，与服务器保持一致</span><br><span class="line">auth.token = &quot;之前设置的token&quot;</span><br><span class="line"></span><br><span class="line"># 配置http服务，可以自行配置多个代理</span><br><span class="line">[[proxies]]</span><br><span class="line">name = &quot;test-http&quot;</span><br><span class="line">type = &quot;tcp&quot;</span><br><span class="line"># 设置为需要开放服务的主机IP</span><br><span class="line">localIP = &quot;127.0.0.1&quot;</span><br><span class="line">localPort = 目标主机的端口</span><br><span class="line"># 自定义的远程服务器端口</span><br><span class="line">remotePort = 服务器开放端口</span><br><span class="line"></span><br><span class="line"># 配置ssh服务</span><br><span class="line">[[proxies]]</span><br><span class="line">name = &quot;ssh&quot;</span><br><span class="line">type = &quot;tcp&quot;</span><br><span class="line"># 设置为需要开放服务的主机IP</span><br><span class="line">localIP = &quot;127.0.0.1&quot;</span><br><span class="line">localPort = 目标主机的端口</span><br><span class="line"># 自定义的远程服务器端口</span><br><span class="line">remotePort = 服务器开放端口</span><br></pre></td></tr></table></figure>

<h4 id="6-配置文件修改：-etc-systemd-system-frpc-service"><a href="#6-配置文件修改：-etc-systemd-system-frpc-service" class="headerlink" title="6.配置文件修改：&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;frpc.service"></a>6.配置文件修改：&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;frpc.service</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Frp Client Service</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">DynamicUser=yes</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=5s</span><br><span class="line">ExecStart=/usr/bin/frpc -c /etc/frp/frpc.toml</span><br><span class="line">ExecReload=/usr/bin/frpc reload -c /etc/frp/frpc.toml</span><br><span class="line">LimitNOFILE=1048576</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<h4 id="7-输入以下命令，启动服务"><a href="#7-输入以下命令，启动服务" class="headerlink" title="7.输入以下命令，启动服务"></a>7.输入以下命令，启动服务</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl enable frpc</span><br><span class="line">systemctl start frpc</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>frp</category>
      </categories>
      <tags>
        <tag>frp</tag>
        <tag>内网穿透</tag>
      </tags>
  </entry>
  <entry>
    <title>信息检索—Google常用语法</title>
    <url>/archives/c7792aa4.html</url>
    <content><![CDATA[<h4 id="一、搜索限定该关键词的网页"><a href="#一、搜索限定该关键词的网页" class="headerlink" title="一、搜索限定该关键词的网页"></a>一、搜索限定该关键词的网页</h4><blockquote>
<p>“搜索词”</p>
</blockquote>
<h4 id="二、限定搜索词的文件格式"><a href="#二、限定搜索词的文件格式" class="headerlink" title="二、限定搜索词的文件格式"></a>二、限定搜索词的文件格式</h4><blockquote>
<p>搜索词 filetype:pdf</p>
</blockquote>
<h4 id="三、限定图片像素"><a href="#三、限定图片像素" class="headerlink" title="三、限定图片像素"></a>三、限定图片像素</h4><blockquote>
<p>搜索词 imagesize:2560x1440</p>
</blockquote>
<h4 id="四、搜索价格400美元的物品"><a href="#四、搜索价格400美元的物品" class="headerlink" title="四、搜索价格400美元的物品"></a>四、搜索价格400美元的物品</h4><blockquote>
<p>搜索词 $400</p>
</blockquote>
<h4 id="五、限定搜索网页的标题"><a href="#五、限定搜索网页的标题" class="headerlink" title="五、限定搜索网页的标题"></a>五、限定搜索网页的标题</h4><blockquote>
<p>intitle:搜索词</p>
</blockquote>
<h4 id="六、限定搜索网页上标题多个关键词"><a href="#六、限定搜索网页上标题多个关键词" class="headerlink" title="六、限定搜索网页上标题多个关键词"></a>六、限定搜索网页上标题多个关键词</h4><blockquote>
<p>allintitle:搜索词1 搜索词2</p>
</blockquote>
<h4 id="七、限定搜索网页内容中必须包含的关键词"><a href="#七、限定搜索网页内容中必须包含的关键词" class="headerlink" title="七、限定搜索网页内容中必须包含的关键词"></a>七、限定搜索网页内容中必须包含的关键词</h4><blockquote>
<p>intext:搜索词1 搜索词2</p>
</blockquote>
<h4 id="八、在指定的搜索引擎中搜索关键词"><a href="#八、在指定的搜索引擎中搜索关键词" class="headerlink" title="八、在指定的搜索引擎中搜索关键词"></a>八、在指定的搜索引擎中搜索关键词</h4><blockquote>
<p>搜索词 inurl:github.com</p>
</blockquote>
<h4 id="九、指定搜索社交媒体上的相关内容"><a href="#九、指定搜索社交媒体上的相关内容" class="headerlink" title="九、指定搜索社交媒体上的相关内容"></a>九、指定搜索社交媒体上的相关内容</h4><blockquote>
<p>搜索词 @twitter</p>
</blockquote>
<h4 id="十、限定搜索词相关的网址来源"><a href="#十、限定搜索词相关的网址来源" class="headerlink" title="十、限定搜索词相关的网址来源"></a>十、限定搜索词相关的网址来源</h4><blockquote>
<p>搜索词 site:<code>https://www.zhihu.com</code></p>
</blockquote>
<h4 id="十一、搜索与小米官网结构内容相似的其它网站"><a href="#十一、搜索与小米官网结构内容相似的其它网站" class="headerlink" title="十一、搜索与小米官网结构内容相似的其它网站"></a>十一、搜索与小米官网结构内容相似的其它网站</h4><blockquote>
<p>related:mi.com</p>
</blockquote>
]]></content>
      <categories>
        <category>信息检索</category>
      </categories>
      <tags>
        <tag>信息检索</tag>
        <tag>Google</tag>
      </tags>
  </entry>
  <entry>
    <title>广告推送—用户画像技术</title>
    <url>/archives/fc71ab30.html</url>
    <content><![CDATA[<h3 id="一、为什么现在的广告推送如此精准？"><a href="#一、为什么现在的广告推送如此精准？" class="headerlink" title="一、为什么现在的广告推送如此精准？"></a>一、为什么现在的广告推送如此精准？</h3><p>相信不少网友，都有过类似经历：明明只是跟亲朋好友在线下谈论了最近想购买或者需要购买什么产品，事后一打开购物平台就发现首页上精准的推送了该产品，而自己并没有在购物平台搜索过相关产品。让人细思极恐，忍不住怀疑相关公司是否对我们进行了全天行为监控？</p>
<p>其实，一般情况都要归根于大数据下的用户画像、用户行为的分析。商业公司一直在追求在正确的时间向正确的人提供正确的内容，以达到最佳的营销效果。某些用户之所以可以精准收到推送，是因为企业有一套成熟的客户数据管理系统。实时动态记录和统计客户的兴趣爱好和行为习惯，建立实时动态的标签管理。</p>
<p>如淘宝、京东、抖音、百度、华为等，都会将这些采集的客户数据统一管理在客户数据管理平台。企业再根据客户数据管理平台提供的用户画像进行分群管理，通过业务中台实现BI自动化营销。这就建立了用户在A平台搜索浏览过的记录，登录B平台后也会推送相关内容的营销模式。</p>
<h3 id="二、广告推送分类"><a href="#二、广告推送分类" class="headerlink" title="二、广告推送分类"></a>二、广告推送分类</h3><h4 id="1-程序化广告"><a href="#1-程序化广告" class="headerlink" title="1.程序化广告"></a>1.程序化广告</h4><blockquote>
<p>将广告投放的各个环节进行信息化处理，并运用技术手段自动化完成广告的投放和管理。这是一种被法律认可、并在全球范围内普遍应用的广告投放形式。<br>在程序化广告应用中，广告的内容提供、是否展示等，都由广告主（谁投广告谁就是广告主）自主控制和决定。<br>APP仅提供程序化广告对接及展示技术，不参与广告内容的提供，更不会获取用户在其它应用内的行为或数据。<br>这种技术实现不需要APP开启后台监控，本质上是利用手机设备中供开发者使用的“广告标识符”（iOS是IDFA，Android是GAID）。</p>
</blockquote>
<blockquote>
<p>举例：在淘宝上搜索猫粮，然后关闭淘宝，打开今日头条，发现首页上有猫粮推荐内容。这种不一定是今日头条对用户手机进行了实时监控，一般是淘宝记录了用户兴趣，利用“广告标识符”技术同步关联了今日头条APP上投放的广告。</p>
</blockquote>
<h4 id="2、基于兴趣推荐的广告"><a href="#2、基于兴趣推荐的广告" class="headerlink" title="2、基于兴趣推荐的广告"></a>2、基于兴趣推荐的广告</h4><blockquote>
<p>技术原理是手机APP基于用户和用户关系的行为，推荐可能感兴趣的广告，可以参考微信朋友圈广告。</p>
</blockquote>
<blockquote>
<p>举例：如果用户每天浏览足球新闻，那就可能向用户推荐球衣、球鞋。当然，如果淘宝账户内有熟人或者朋友的好友，也会基于用户社交关系的兴趣，推荐可能喜欢的产品。</p>
</blockquote>
<h3 id="三、广告推送使用的追踪技术会损害个人隐私吗？"><a href="#三、广告推送使用的追踪技术会损害个人隐私吗？" class="headerlink" title="三、广告推送使用的追踪技术会损害个人隐私吗？"></a>三、广告推送使用的追踪技术会损害个人隐私吗？</h3><p>当然会，广告推送如此精准，恰恰是因为数据收集方为用户ID做了全渠道的SDK集成，描绘了基于该ID的统一用户画像。</p>
<p>其实，真正值得警惕的是那些无法遏制的技术滥用。互联网早期，每个人上网浏览了什么，ISP运营商或某个攻击者能直接根据用户IP查询或者进行DNS劫持（例：早期电信用户的欠费通知）。当然，互联网的安全建设不可能一成不变，现在的网络通信，访问正规网站时流量都进行了加密。</p>
<p>目前，个人信息安全最大的挑战，恰恰来自于我们24小时不离身的智能手机。移动设备在安全性上是远不如PC的，特别是某些手机的定制版系统。而且，移动设备不仅是系统开源生态问题，用户自身的使用习惯、安全意识也是隐患重重（给予应用过高权限等）。</p>
<p>大部分商业公司都是本着逐利的角度，收集用户数据，经过集成（或批量处理）将来自各个渠道的数据聚合到一起，为商业行为提供完整的、不断更新的用户画像，实现深度的客户洞察。另外，这些商业公司费力收集的数据本身，却极易被来自阴影中的恶意攻击所窃取。</p>
<h3 id="四、从技术角度看，利用手机24小时监听用户是否可行？"><a href="#四、从技术角度看，利用手机24小时监听用户是否可行？" class="headerlink" title="四、从技术角度看，利用手机24小时监听用户是否可行？"></a>四、从技术角度看，利用手机24小时监听用户是否可行？</h3><p>目前的技术，大规模监听肯定不可行，但某些攻击者对个人实施监听是存在的。</p>
<h4 id="1-iOS系统不可行；Android系统低版本理论上可行。"><a href="#1-iOS系统不可行；Android系统低版本理论上可行。" class="headerlink" title="1.iOS系统不可行；Android系统低版本理论上可行。"></a>1.iOS系统不可行；Android系统低版本理论上可行。</h4><blockquote>
<p>iOS系统要开启录音功能，必须在初次安装或使用时得到用户授权。</p>
<ul>
<li>比如：用户对iOS系统上某款APP开启了麦克风访问授权，之后启动该APP进行语音操作，确实不需要用户二次授权，但是会在前台屏幕的状态栏显示红绿等颜色变化：绿色代表正在通话，红色代表正在录音或录制屏幕。所以iOS系统，APP想在后台录音偷听，技术上是不可能做到偷偷静默的。</li>
</ul>
</blockquote>
<blockquote>
<p>Android系统上APP被退到后台，保证自身不被杀死很难，一般的实现手段分如下几种：</p>
<ul>
<li>利用订阅Android的系统消息进行唤起，比如开机，切换网络等，可以唤醒APP，做到后台运行。</li>
<li>利用一些通用的其它APP的SDK协议唤醒。比如腾讯、字节等大厂，一旦打开一个APP，就可能会尝试在后台唤醒其它同厂APP，甚至自动下载（一般情况下不敢）。</li>
</ul>
</blockquote>
<blockquote>
<p>注：Android最新版本禁用了许多系统权限，但一些低版本的国产机型，仍可以自启动一个后台service在保活的后台中。这种唤醒，即使用户开机不启动该APP，也可能被以上的机制唤醒，成功运行。所以，用户在低版本的Android系统给予了某款APP录音授权，该APP确实可以通过上述手段做到静默录音。但是Android系统的录音功能（麦克风）是互斥的，如果某款APP在后台偷偷录音，那么用户使用其它APP调用麦克风就会报错提示。</p>
</blockquote>
<h4 id="2、录音上传或语音提取关键词的实现原理。"><a href="#2、录音上传或语音提取关键词的实现原理。" class="headerlink" title="2、录音上传或语音提取关键词的实现原理。"></a>2、录音上传或语音提取关键词的实现原理。</h4><blockquote>
<p>通过上面的分析，可以得知少部分低版本Android用户，如果不小心安装了恶意软件，可能被攻击者偷听。那么技术的实现原理是怎样的？</p>
</blockquote>
<p>第一种——本地语音识别并提取关键词，把结果上传回服务器。</p>
<blockquote>
<p>首先，本地保存音频很占手机存储空间，很容易被用户发现。<br>其次，对语音分析的SDK都很大，因为需要先 “语音转文字”，然后“文字分词”。这就要求本地有一个非常大的词库，甚至包含方言、英语库。匹配关键词的程序执行时，会大量损耗手机性能，耗电量太明显。</p>
</blockquote>
<blockquote>
<p>注：GitHub上有对应的分词库和关键词库：<a href="https://github.com/hankcs/HanLP">https://github.com/hankcs/HanLP</a></p>
</blockquote>
<p>第二种——直接把语音上传到服务器，服务器云端解析语音，提取关键词。</p>
<blockquote>
<p>这个方案很不靠谱，音频文件就算被压缩，依旧很大。如果一个APP全天不间断的上传语音到云端服务器，很容易被用户发现（比如查看流量使用情况、手机长时间发烫等等）。</p>
</blockquote>
]]></content>
      <categories>
        <category>广告推送</category>
      </categories>
      <tags>
        <tag>广告推送</tag>
        <tag>用户画像技术</tag>
      </tags>
  </entry>
  <entry>
    <title>信息检索—Github高级语法</title>
    <url>/archives/5a596270.html</url>
    <content><![CDATA[<h4 id="一、搜索语法：前缀后缀"><a href="#一、搜索语法：前缀后缀" class="headerlink" title="一、搜索语法：前缀后缀"></a>一、搜索语法：前缀后缀</h4><table>
<thead>
<tr>
<th align="center"><strong>语法</strong></th>
<th align="center"><strong>说明</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center">awesome 关键字</td>
<td align="center">找百科大全&#x2F;工具列表的仓库。</td>
</tr>
<tr>
<td align="center">关键字 sample</td>
<td align="center">找例子。</td>
</tr>
<tr>
<td align="center">关键字 starter &#x2F; 关键字 boilerplate</td>
<td align="center">找空项目架子。</td>
</tr>
<tr>
<td align="center">关键字 tutorial</td>
<td align="center">找教程。</td>
</tr>
</tbody></table>
<h4 id="二、搜索语法：限定符搜索"><a href="#二、搜索语法：限定符搜索" class="headerlink" title="二、搜索语法：限定符搜索"></a>二、搜索语法：限定符搜索</h4><table>
<thead>
<tr>
<th align="center"><strong>语法</strong></th>
<th align="center"><strong>说明</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center">stars:500</td>
<td align="center">匹配恰好具有 500 个星号的仓库。</td>
</tr>
<tr>
<td align="center">vue language:javascript</td>
<td align="center">匹配具有 “vue” 字样、以 JavaScript 语言编写的仓库。</td>
</tr>
<tr>
<td align="center">vue 后台管理 stars:&gt;1000</td>
<td align="center">匹配基于 “vue” 开发的、星号超过 1000 个的后台管理系统框架。</td>
</tr>
<tr>
<td align="center">location:china</td>
<td align="center">匹配用户填写的地址在 “china”。</td>
</tr>
<tr>
<td align="center">followers:&gt;&#x3D;1000</td>
<td align="center">匹配拥有超过 1000名关注者的开发者。</td>
</tr>
<tr>
<td align="center">vue in:readme</td>
<td align="center">匹配其自述文件中提及 “vue” 的仓库。</td>
</tr>
<tr>
<td align="center">vue in:name,description</td>
<td align="center">匹配其名称或说明中含有 “vue” 的仓库。</td>
</tr>
<tr>
<td align="center">repo:biaochenxuying&#x2F;blog</td>
<td align="center">匹配特定仓库名称，比如：用户为 biaochenxuying 的 blog 项目。</td>
</tr>
<tr>
<td align="center">node followers:&gt;&#x3D;10000</td>
<td align="center">匹配有 10,000 或更多关注者提及文字 “node” 的仓库。</td>
</tr>
</tbody></table>
<h4 id="三、搜索语法：查询大于或小于另一个值的值"><a href="#三、搜索语法：查询大于或小于另一个值的值" class="headerlink" title="三、搜索语法：查询大于或小于另一个值的值"></a>三、搜索语法：查询大于或小于另一个值的值</h4><table>
<thead>
<tr>
<th align="center"><strong>语法</strong></th>
<th align="center"><strong>说明</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center">vue stars:&gt;1000</td>
<td align="center">匹配含有 “vue” 字样、星号超过 1000 个的仓库。</td>
</tr>
<tr>
<td align="center">vue topics:&gt;&#x3D;5</td>
<td align="center">匹配含有 “vue” 字样、有 5 个或更多主题的仓库。</td>
</tr>
<tr>
<td align="center">vue size:&lt;10000</td>
<td align="center">匹配小于 10 KB 的文件中含有 “vue” 字样的代码。</td>
</tr>
<tr>
<td align="center">vue stars:&lt;&#x3D;50</td>
<td align="center">匹配含有 “vue” 字样、星号不超过 50 个的仓库。</td>
</tr>
</tbody></table>
<h4 id="四、搜索语法：查询范围之间的值"><a href="#四、搜索语法：查询范围之间的值" class="headerlink" title="四、搜索语法：查询范围之间的值"></a>四、搜索语法：查询范围之间的值</h4><table>
<thead>
<tr>
<th align="center"><strong>语法</strong></th>
<th align="center"><strong>说明</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center">vue stars:10..50</td>
<td align="center">匹配含有 “vue” 字样、有 10 到 50 个星号的仓库。</td>
</tr>
<tr>
<td align="center"><code>vue stars:10..*</code></td>
<td align="center">等同于 stars:&gt;&#x3D;10，并匹配含有 “vue” 字样、有 10 个或更多星号的仓库。</td>
</tr>
<tr>
<td align="center">vue stars:*..10</td>
<td align="center">等同于 stars:&lt;&#x3D;10，并匹配含有 “vue” 字样、有不超过 10 个星号的仓库。</td>
</tr>
</tbody></table>
<h4 id="五、搜索语法：根据日期查询"><a href="#五、搜索语法：根据日期查询" class="headerlink" title="五、搜索语法：根据日期查询"></a>五、搜索语法：根据日期查询</h4><table>
<thead>
<tr>
<th align="center"><strong>语法</strong></th>
<th align="center"><strong>说明</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center">vue created:&gt;2016-04-29</td>
<td align="center">匹配含有 “vue” 字样、在2016年4月29日之后创建的议题。</td>
</tr>
<tr>
<td align="center">vue created:&gt;&#x3D;2017-04-01</td>
<td align="center">匹配含有 “vue” 字样、在2017年4月1日或之后创建的议题。</td>
</tr>
<tr>
<td align="center">vue pushed:&lt;2012-07-05</td>
<td align="center">匹配在2012年7月5日之前推送的仓库中含有 “vue” 字样的代码。</td>
</tr>
<tr>
<td align="center">vue created:&lt;&#x3D;2012-07-04</td>
<td align="center">匹配含有 “vue” 字样、在2012年7月4日或之前创建的议题。</td>
</tr>
<tr>
<td align="center">vue pushed:2016-04-30..2016-07-04</td>
<td align="center">匹配含有 “vue” 字样、在2016年4月末到7月之间推送的仓库。</td>
</tr>
<tr>
<td align="center">vue created:2012-04-30..*</td>
<td align="center">匹配在2012年4月30日之后创建、含有 “vue” 字样的议题。</td>
</tr>
<tr>
<td align="center">vue created:*..2012-04-30</td>
<td align="center">匹配在2012年7月4日之前创建、含有 “vue” 字样的议题。</td>
</tr>
</tbody></table>
<h4 id="六、搜索语法：排除特定结果"><a href="#六、搜索语法：排除特定结果" class="headerlink" title="六、搜索语法：排除特定结果"></a>六、搜索语法：排除特定结果</h4><table>
<thead>
<tr>
<th align="center"><strong>语法</strong></th>
<th align="center"><strong>说明</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center">hello NOT world</td>
<td align="center">匹配含有 “hello” 字样，但不含有 “world” 字样的仓库。</td>
</tr>
<tr>
<td align="center">vue stars:&gt;10 -language:javascript</td>
<td align="center">匹配含有 “vue” 字样、有超过 10 个星号但并非以 JavaScript 编写的仓库。</td>
</tr>
<tr>
<td align="center">cats NOT “hello world”</td>
<td align="center">匹配含有 “vue” 字样但不含有”hello world” 字样的仓库。</td>
</tr>
<tr>
<td align="center">build label:”bug fix”</td>
<td align="center">匹配具有标签”bug fix”、含有”build”字样的议题。</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>信息检索</category>
      </categories>
      <tags>
        <tag>Github</tag>
        <tag>信息检索</tag>
      </tags>
  </entry>
  <entry>
    <title>开发工具—Git常用命令</title>
    <url>/archives/e89653ed.html</url>
    <content><![CDATA[<h3 id="一、新建项目"><a href="#一、新建项目" class="headerlink" title="一、新建项目"></a>一、新建项目</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在当前目录新建一个Git代码库</span></span><br><span class="line">$ git init</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个目录，将其初始化为Git代码库</span></span><br><span class="line">$ git init [project-name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载一个项目和它的整个代码历史</span></span><br><span class="line">$ git <span class="built_in">clone</span> [url]</span><br></pre></td></tr></table></figure>

<h3 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 显示当前的Git配置</span></span><br><span class="line">$ git config --list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑Git配置文件</span></span><br><span class="line">$ git config -e [--global]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置账户信息</span></span><br><span class="line">$ git config [--global] user.name <span class="string">&quot;[name]&quot;</span></span><br><span class="line">$ git config [--global] user.email <span class="string">&quot;[email address]&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="三、文件增加与删除"><a href="#三、文件增加与删除" class="headerlink" title="三、文件增加与删除"></a>三、文件增加与删除</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加指定文件到暂存区</span></span><br><span class="line">$ git add [file1] [file2] ...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加指定目录到暂存区</span></span><br><span class="line">$ git add [<span class="built_in">dir</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将当前目录下的所有文件添加到暂存区</span></span><br><span class="line">$ git add .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加每个变化前，都会要求确认，对于同一个文件的多处变化，可以实现分次提交</span></span><br><span class="line">$ git add -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除工作区文件，并放入暂存区</span></span><br><span class="line">$ git <span class="built_in">rm</span> [file1] [file2] ...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重命名文件，并将改名后的文件放入暂存区</span></span><br><span class="line">$ git <span class="built_in">mv</span> [file-original] [file-renamed]</span><br></pre></td></tr></table></figure>

<h3 id="四、代码提交"><a href="#四、代码提交" class="headerlink" title="四、代码提交"></a>四、代码提交</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 从暂存区提交到远程仓库</span></span><br><span class="line">$ git commit -m [message]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将暂存区内的指定文件提交到远程仓库</span></span><br><span class="line">$ git commit [file1] [file2] ... -m [message]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交工作区自上次commit之后的变化，直接到远程仓库</span></span><br><span class="line">$ git commit -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交时显示所有diff信息</span></span><br><span class="line">$ git commit -v</span><br></pre></td></tr></table></figure>

<h3 id="五、分支"><a href="#五、分支" class="headerlink" title="五、分支"></a>五、分支</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 列出所有本地分支</span></span><br><span class="line">$ git branch</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有远程分支</span></span><br><span class="line">$ git branch -r</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有本地分支和远程分支</span></span><br><span class="line">$ git branch -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个分支，但依然停留在当前分支</span></span><br><span class="line">$ git branch [branch-name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个分支，并切换到该分支</span></span><br><span class="line">$ git checkout -b [branch]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到上一个分支</span></span><br><span class="line">$ git checkout -</span><br><span class="line"></span><br><span class="line"><span class="comment"># 合并指定分支到当前分支</span></span><br><span class="line">$ git merge [branch]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择一个commit，合并进当前分支</span></span><br><span class="line">$ git cherry-pick [commit]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除分支</span></span><br><span class="line">$ git branch -d [branch-name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除远程分支</span></span><br><span class="line">$ git push origin --delete [branch-name]</span><br><span class="line">$ git branch -dr [remote/branch]</span><br></pre></td></tr></table></figure>

<h3 id="六、标签"><a href="#六、标签" class="headerlink" title="六、标签"></a>六、标签</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 列出所有tag</span></span><br><span class="line">$ git tag</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看tag信息</span></span><br><span class="line">$ git show [tag]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个tag在当前commit</span></span><br><span class="line">$ git tag [tag]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个tag在指定commit</span></span><br><span class="line">$ git tag [tag] [commit]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交指定tag</span></span><br><span class="line">$ git push [remote] [tag]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交所有tag</span></span><br><span class="line">$ git push [remote] --tags</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除本地tag</span></span><br><span class="line">$ git tag -d [tag]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除远程tag</span></span><br><span class="line">$ git push origin :refs/tags/[tagName]</span><br></pre></td></tr></table></figure>

<h3 id="七、查看信息"><a href="#七、查看信息" class="headerlink" title="七、查看信息"></a>七、查看信息</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 显示有变更的文件</span></span><br><span class="line">$ git status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示当前分支的版本历史</span></span><br><span class="line">$ git <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索提交历史，根据关键词</span></span><br><span class="line">$ git <span class="built_in">log</span> -S [keyword]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某个文件的版本历史，包括文件改名</span></span><br><span class="line">$ git <span class="built_in">log</span> --follow [file]</span><br><span class="line">$ git whatchanged [file]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示过去5次提交</span></span><br><span class="line">$ git <span class="built_in">log</span> -5 --pretty --oneline</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示所有提交过的用户，按提交次数排序</span></span><br><span class="line">$ git shortlog -sn</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示暂存区和工作区的差异</span></span><br><span class="line">$ git diff</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某次提交发生变化的文件</span></span><br><span class="line">$ git show --name-only [commit]</span><br></pre></td></tr></table></figure>

<h3 id="八、远程同步"><a href="#八、远程同步" class="headerlink" title="八、远程同步"></a>八、远程同步</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载远程仓库的所有变动</span></span><br><span class="line">$ git fetch [remote]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示所有远程仓库</span></span><br><span class="line">$ git remote -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某个远程仓库的信息</span></span><br><span class="line">$ git remote show [remote]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传本地指定分支到远程仓库</span></span><br><span class="line">$ git push [remote] [branch]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送所有分支到远程仓库</span></span><br><span class="line">$ git push [remote] --all</span><br></pre></td></tr></table></figure>

<h3 id="九、撤销"><a href="#九、撤销" class="headerlink" title="九、撤销"></a>九、撤销</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 恢复暂存区的指定文件到工作区</span></span><br><span class="line">$ git checkout [file]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复暂存区的所有文件到工作区</span></span><br><span class="line">$ git checkout .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置暂存区与工作区，与上一次commit保持一致</span></span><br><span class="line">$ git reset --hard</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>开发工具</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>开发工具—IDE快捷键统一设置</title>
    <url>/archives/2c312b75.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th align="center"><strong>功能介绍</strong></th>
<th align="center"><strong>Pycharm</strong></th>
<th align="center"><strong>Vscode</strong></th>
<th align="center"><strong>统一设置</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center">切换桌面程序</td>
<td align="center">Alt+Tab</td>
<td align="center">Alt+Tab</td>
<td align="center">Alt+Tab</td>
</tr>
<tr>
<td align="center">切换应用窗口</td>
<td align="center">Ctrl+Tab</td>
<td align="center">Ctrl+Tab</td>
<td align="center">Ctrl+Tab</td>
</tr>
<tr>
<td align="center">电脑桌面分屏</td>
<td align="center">Windows+←&#x2F;→</td>
<td align="center">Windows+←&#x2F;→</td>
<td align="center">Windows+←&#x2F;→</td>
</tr>
<tr>
<td align="center">复制</td>
<td align="center">Ctrl+C</td>
<td align="center">Ctrl+C</td>
<td align="center">Ctrl+C</td>
</tr>
<tr>
<td align="center">粘贴</td>
<td align="center">Ctrl+V</td>
<td align="center">Ctrl+V</td>
<td align="center">Ctrl+V</td>
</tr>
<tr>
<td align="center">剪切</td>
<td align="center">Ctrl+X</td>
<td align="center">Ctrl+X</td>
<td align="center">Ctrl+X</td>
</tr>
<tr>
<td align="center">撤销</td>
<td align="center">Ctrl+Z</td>
<td align="center">Ctrl+Z</td>
<td align="center">Ctrl+Z</td>
</tr>
<tr>
<td align="center">全选</td>
<td align="center">Ctrl+A</td>
<td align="center">Ctrl+A</td>
<td align="center">Ctrl+A</td>
</tr>
<tr>
<td align="center">查找</td>
<td align="center">Ctrl+F</td>
<td align="center">Ctrl+F</td>
<td align="center">Ctrl+F</td>
</tr>
<tr>
<td align="center">替换</td>
<td align="center">CTRL+R</td>
<td align="center">Ctrl+H</td>
<td align="center">Ctrl+H</td>
</tr>
<tr>
<td align="center">跳转行&#x2F;列</td>
<td align="center">Ctrl+G</td>
<td align="center">Ctrl+G</td>
<td align="center">Ctrl+G</td>
</tr>
<tr>
<td align="center">保存</td>
<td align="center">Ctrl+S</td>
<td align="center">Ctrl+S</td>
<td align="center">Ctrl+S</td>
</tr>
<tr>
<td align="center">代码注释</td>
<td align="center">Ctrl+&#x2F;</td>
<td align="center">Ctrl+&#x2F;</td>
<td align="center">Ctrl+&#x2F;</td>
</tr>
<tr>
<td align="center">换行</td>
<td align="center">Shift+Enter</td>
<td align="center">Shift+Enter</td>
<td align="center">Shift+Enter</td>
</tr>
<tr>
<td align="center">自动补全</td>
<td align="center">Alt+Insert</td>
<td align="center">Tab</td>
<td align="center">自行设置</td>
</tr>
<tr>
<td align="center">自动格式化</td>
<td align="center">Ctrl+Alt+L</td>
<td align="center">Shift+Alt+F</td>
<td align="center">Ctrl+Alt+L</td>
</tr>
<tr>
<td align="center">当前行上移</td>
<td align="center">Alt+Shift+↑</td>
<td align="center">Alt+↑</td>
<td align="center">Ctrl+↑</td>
</tr>
<tr>
<td align="center">当前行下移</td>
<td align="center">Alt+Shift+↓</td>
<td align="center">Alt+↓</td>
<td align="center">Ctrl+↓</td>
</tr>
<tr>
<td align="center">删除当前行</td>
<td align="center">Ctrl+Y</td>
<td align="center">Ctrl+Shilft+K</td>
<td align="center">Ctrl+Y</td>
</tr>
<tr>
<td align="center">复制当前行</td>
<td align="center">Ctrl+D</td>
<td align="center">Shift+Alt+↓&#x2F;↑</td>
<td align="center">Ctrl+D</td>
</tr>
<tr>
<td align="center">多行添加光标</td>
<td align="center">Shift+Alt+鼠标下拉</td>
<td align="center">Shift+Alt+鼠标下拉</td>
<td align="center">Shift+Alt+鼠标下拉</td>
</tr>
<tr>
<td align="center">多行添加光标</td>
<td align="center"></td>
<td align="center">Shift+Ctrl+↓&#x2F;↑</td>
<td align="center">Shift+Ctrl+↓&#x2F;↑</td>
</tr>
<tr>
<td align="center">多行末插入光标</td>
<td align="center"></td>
<td align="center">Shift+Ctrl+I</td>
<td align="center">Shift+Ctrl+<code>→</code></td>
</tr>
<tr>
<td align="center">折叠区域代码</td>
<td align="center"></td>
<td align="center">Shift+Ctrl+<code>[</code></td>
<td align="center">Shift+Ctrl+<code>[</code></td>
</tr>
<tr>
<td align="center">展开区域代码</td>
<td align="center"></td>
<td align="center">Shift+Ctrl+<code>]</code></td>
<td align="center">Shift+Ctrl+<code>]</code></td>
</tr>
<tr>
<td align="center">新建文件</td>
<td align="center"></td>
<td align="center">Ctrl+N</td>
<td align="center">Ctrl+N</td>
</tr>
<tr>
<td align="center">打开文件</td>
<td align="center"></td>
<td align="center">Ctrl+O</td>
<td align="center">Ctrl+O</td>
</tr>
<tr>
<td align="center">打开&#x2F;关闭终端</td>
<td align="center"></td>
<td align="center">Ctrl+<strong>&#96;</strong></td>
<td align="center">Ctrl+<strong>&#96;</strong></td>
</tr>
<tr>
<td align="center">缩进</td>
<td align="center">Tab</td>
<td align="center">Tab</td>
<td align="center">Tab</td>
</tr>
<tr>
<td align="center">取消缩进</td>
<td align="center">Shift+Tab</td>
<td align="center">Shift+Tab</td>
<td align="center">Shift+Tab</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>开发工具</tag>
        <tag>IDE</tag>
        <tag>VScode</tag>
        <tag>Pycharm</tag>
      </tags>
  </entry>
  <entry>
    <title>开发工具——VScode基础设置与json配置</title>
    <url>/archives/35aeef7e.html</url>
    <content><![CDATA[<h4 id="一、界面字体大小（json配置文件已包含）"><a href="#一、界面字体大小（json配置文件已包含）" class="headerlink" title="一、界面字体大小（json配置文件已包含）"></a>一、界面字体大小（json配置文件已包含）</h4><blockquote>
<p>设置 → 搜索栏输入 editor:fontsize 用来设置字体大小，可以设置editor.fontsize：14。</p>
</blockquote>
<h4 id="二、文件自动保存（json配置文件已包含）"><a href="#二、文件自动保存（json配置文件已包含）" class="headerlink" title="二、文件自动保存（json配置文件已包含）"></a>二、文件自动保存（json配置文件已包含）</h4><blockquote>
<p>设置 → 搜索栏输入 files.autoSave 表示文件是否进行自动保存，推荐设置为onFocusChange，即文件焦点变化时自动保存。</p>
</blockquote>
<h4 id="三、启用Tab键代码补全（json配置文件已包含）"><a href="#三、启用Tab键代码补全（json配置文件已包含）" class="headerlink" title="三、启用Tab键代码补全（json配置文件已包含）"></a>三、启用Tab键代码补全（json配置文件已包含）</h4><blockquote>
<p>设置 → 搜索栏输入 editor.tabCompletion 用来在出现推荐值时，按下Tab键是否自动填入最佳推荐值，推荐设置为 on 。</p>
</blockquote>
<h4 id="四、开启代码行号"><a href="#四、开启代码行号" class="headerlink" title="四、开启代码行号"></a>四、开启代码行号</h4><blockquote>
<p>设置 → 搜索栏输入 editor.lineNumbers 设置代码行号，即editor.lineNumbers ：on 。</p>
</blockquote>
<h4 id="五、import引入包排序（json配置文件已包含）"><a href="#五、import引入包排序（json配置文件已包含）" class="headerlink" title="五、import引入包排序（json配置文件已包含）"></a>五、import引入包排序（json配置文件已包含）</h4><blockquote>
<p>设置 → 搜索栏输入 editor.codeActionsOnSave ，在json配置文件中修改 source.organizeImports 属性，该属性能够在保存时，按照字母顺序把 import 语句进行排列，推荐设置为 true，即 “editor.codeActionsOnSave”: { “source.organizeImports”: true }</p>
</blockquote>
<h4 id="六、禁用自动更新（json配置文件已包含）"><a href="#六、禁用自动更新（json配置文件已包含）" class="headerlink" title="六、禁用自动更新（json配置文件已包含）"></a>六、禁用自动更新（json配置文件已包含）</h4><blockquote>
<p>设置 → 搜索栏输入 update.mode → 更改为 none 。</p>
</blockquote>
<h4 id="七、开启代码提示"><a href="#七、开启代码提示" class="headerlink" title="七、开启代码提示"></a>七、开启代码提示</h4><blockquote>
<p>设置 → 搜索栏输入 Snippets Prevent Quick Suggestions→取消此项的勾选</p>
</blockquote>
<h4 id="八、基础json配置"><a href="#八、基础json配置" class="headerlink" title="八、基础json配置"></a>八、基础json配置</h4><blockquote>
<p>设置 → 搜索栏输入 workbench.settings.editor → 将选项 ui 修改为 json 。<br>Ctrl+Shift+P → 选择Setting(json) 打开settings.json文件 → 将下面配置复制 → 保存并退出。</p>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// 设置开发环境中的文件关联</span></span><br><span class="line">    <span class="attr">&quot;files.associations&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;*.vue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vue&quot;</span><span class="punctuation">,</span>      <span class="comment">// 以.vue为扩展名的文件关联到Vue.js文件类型</span></span><br><span class="line">    <span class="attr">&quot;*.wpy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vue&quot;</span><span class="punctuation">,</span>      <span class="comment">// .wpy文件用于WePY小程序框架，该框架支持Vue.js</span></span><br><span class="line">    <span class="attr">&quot;*.wxml&quot;</span><span class="punctuation">:</span> <span class="string">&quot;html&quot;</span><span class="punctuation">,</span>    <span class="comment">// .wxml文件是编写小程序的页面结构文件，其语法类似于HTML</span></span><br><span class="line">    <span class="attr">&quot;*.wxss&quot;</span><span class="punctuation">:</span> <span class="string">&quot;css&quot;</span>      <span class="comment">// .wxss文件是用于编写小程序样式的文件，其语法类似于CSS</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 指定集成终端所使用的Shell：Windows命令提示符</span></span><br><span class="line">    <span class="attr">&quot;terminal.integrated.shell.windows&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C:\\Windows\\System32\\cmd.exe&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 启用Git的智能提交功能，自动生成相关的提交消息</span></span><br><span class="line">    <span class="attr">&quot;git.enableSmartCommit&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 启用Git自动获取autofetch功能，从远程仓库获取最新的提交信息</span></span><br><span class="line">    <span class="attr">&quot;git.autofetch&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// Emmet插件Tab键自动补全</span></span><br><span class="line">    <span class="attr">&quot;emmet.triggerExpansionOnTab&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// Emmet插件显示缩写建议</span></span><br><span class="line">    <span class="attr">&quot;emmet.showAbbreviationSuggestions&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 输入Emmet语法并按Tab键时，始终显示提示的代码</span></span><br><span class="line">    <span class="attr">&quot;emmet.showExpandedAbbreviation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;always&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 使用Emmet插件时，将以下文件类型等同于HTML文件，方便Emmet正确处理其中的缩写</span></span><br><span class="line">    <span class="attr">&quot;emmet.includeLanguages&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;vue-html&quot;</span><span class="punctuation">:</span> <span class="string">&quot;html&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;html&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;wpy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;html&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">//&quot;workbench.colorTheme&quot;: &quot;Monokai&quot;,             // 配置主题颜色</span></span><br><span class="line">    <span class="attr">&quot;git.confirmSync&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span>                        <span class="comment">// git是否启用自动拉取</span></span><br><span class="line">    <span class="attr">&quot;explorer.confirmDelete&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span>                 <span class="comment">// 两个选择器中是否换行</span></span><br><span class="line">    <span class="attr">&quot;editor.fontSize&quot;</span><span class="punctuation">:</span> <span class="number">14</span><span class="punctuation">,</span>                           <span class="comment">// 字体设置</span></span><br><span class="line">    <span class="attr">&quot;window.zoomLevel&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span>                           <span class="comment">// 系统界面和编辑面板字体比例</span></span><br><span class="line">    <span class="attr">&quot;editor.wordWrap&quot;</span><span class="punctuation">:</span> <span class="string">&quot;on&quot;</span><span class="punctuation">,</span>                         <span class="comment">// 自动换行</span></span><br><span class="line">    <span class="attr">&quot;editor.detectIndentation&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span>               <span class="comment">// 编辑器自动检测，使用空格还是制表符</span></span><br><span class="line">    <span class="attr">&quot;editor.tabSize&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span>                             <span class="comment">// 重新设定Tab键空格数</span></span><br><span class="line">    <span class="attr">&quot;files.autoSave&quot;</span><span class="punctuation">:</span> <span class="string">&quot;onFocusChange&quot;</span><span class="punctuation">,</span>               <span class="comment">// 当前文件失去焦点后自动保存</span></span><br><span class="line">    <span class="attr">&quot;editor.formatOnSave&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span>                    <span class="comment">// #值设置为 true/false ，决定保存时是否自动格式化</span></span><br><span class="line">    <span class="attr">&quot;editor.rulers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                               <span class="comment">//每120行就显示一条线</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 在使用搜索功能时，将这些文件夹/文件排除在外</span></span><br><span class="line">    <span class="attr">&quot;search.exclude&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;**/node_modules&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;**/bower_components&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;**/target&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;**/logs&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 这些文件将不会显示在工作空间中</span></span><br><span class="line">    <span class="attr">&quot;files.exclude&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;**/.git&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;**/.svn&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;**/.hg&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;**/CVS&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;**/.DS_Store&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;**/*.js&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;when&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$(basename).ts&quot;</span>                  <span class="comment">//ts编译后生成的js文件将不会显示在工作空中</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;**/node_modules&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// #让vue中的js按&quot;prettier&quot;格式进行格式化</span></span><br><span class="line">    <span class="attr">&quot;vetur.format.defaultFormatter.html&quot;</span><span class="punctuation">:</span> <span class="string">&quot;js-beautify-html&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vetur.format.defaultFormatter.js&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prettier&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vetur.format.defaultFormatterOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;js-beautify-html&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="comment">// #vue组件中html代码格式化样式</span></span><br><span class="line">            <span class="attr">&quot;wrap_attributes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;force-aligned&quot;</span><span class="punctuation">,</span>       <span class="comment">//也可以设置为“auto”，效果会不一样</span></span><br><span class="line">            <span class="attr">&quot;wrap_line_length&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;end_with_newline&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;semi&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;singleQuote&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;prettier&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;semi&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;singleQuote&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;editor.tabCompletion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;on&quot;</span><span class="punctuation">,</span>                    <span class="comment">// 按下Tab自动补全</span></span><br><span class="line">    <span class="attr">&quot;editor.codeActionsOnSave&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;source.organizeImports&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>                 <span class="comment">// 保存文件时自动对import语句排序</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;update.mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span>                           <span class="comment">// 禁止系统更新</span></span><br><span class="line">    <span class="comment">// Prettier配置规则</span></span><br><span class="line">    <span class="attr">&quot;prettier.printWidth&quot;</span><span class="punctuation">:</span> <span class="number">100</span><span class="punctuation">,</span>                      <span class="comment">// 一行最多 100 字符</span></span><br><span class="line">    <span class="attr">&quot;prettier.useTabs&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span>                       <span class="comment">// 不使用缩进符，而使用空格</span></span><br><span class="line">    <span class="attr">&quot;prettier.tabWidth&quot;</span><span class="punctuation">:</span> <span class="number">4</span><span class="punctuation">,</span>                          <span class="comment">// 使用 4 个空格缩进</span></span><br><span class="line">    <span class="attr">&quot;prettier.semi&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span>                           <span class="comment">// 行尾需要有分号</span></span><br><span class="line">    <span class="attr">&quot;prettier.singleQuote&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span>                    <span class="comment">// 使用单引号</span></span><br><span class="line">    <span class="attr">&quot;prettier.jsxSingleQuote&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span>                <span class="comment">// jsx不使用单引号，而使用双引号</span></span><br><span class="line">    <span class="attr">&quot;prettier.bracketSpacing&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span>                 <span class="comment">// 大括号内的首尾需要空格</span></span><br><span class="line">    <span class="attr">&quot;prettier.requirePragma&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span>                 <span class="comment">// 不需要写文件开头的 @prettier</span></span><br><span class="line">    <span class="attr">&quot;prettier.insertPragma&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span>                  <span class="comment">// 不需要自动在文件开头插入 @prettier</span></span><br><span class="line">    <span class="comment">// ESlint配置规则</span></span><br><span class="line">    <span class="attr">&quot;eslint.enable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span>                           <span class="comment">// 默认情况下启用ESLint插件</span></span><br><span class="line">    <span class="attr">&quot;eslint.run&quot;</span><span class="punctuation">:</span> <span class="string">&quot;onType&quot;</span><span class="punctuation">,</span>                          <span class="comment">// 运行ESLint的时间，默认onType(输入时)运行</span></span><br><span class="line">    <span class="attr">&quot;eslint.options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="comment">// 选项设置，指定需要检查的文件扩展名</span></span><br><span class="line">      <span class="attr">&quot;extensions&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;.vue&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;.jsx&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;.tsx&quot;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// Easy LESS配置规则</span></span><br><span class="line">    <span class="attr">&quot;less.compile&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;compress&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span>  <span class="comment">// 删除多余空白字符(空格和换行符)；当值为true时，则生成的CSS文件将是压缩过的。</span></span><br><span class="line">        <span class="attr">&quot;sourceMap&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="comment">// 是否创建文件目录树，默认为false；当值为true时，则生成与Less文件源映射的CSS文件，方便调试。</span></span><br><span class="line">        <span class="attr">&quot;out&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span>        <span class="comment">// 是否编译输出文件，默认为true；当值为false时，则编译时不生成实际的CSS文件，只在内存中进行。</span></span><br><span class="line">        <span class="attr">&quot;outExt&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.css&quot;</span><span class="punctuation">,</span>   <span class="comment">// 输出文件的后缀,默认为.css。</span></span><br><span class="line">        <span class="comment">// &quot;outExt&quot;: &quot;.wxss&quot;, // 输出文件的后缀,小程序可以写.wxss。      </span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>开发工具</tag>
        <tag>VScode</tag>
      </tags>
  </entry>
  <entry>
    <title>文件加密技术</title>
    <url>/archives/894e36f4.html</url>
    <content><![CDATA[<h3 id="一、加密软件"><a href="#一、加密软件" class="headerlink" title="一、加密软件"></a>一、加密软件</h3><h4 id="1-知名加密软件所使用的“对称加密算法”久经考验。"><a href="#1-知名加密软件所使用的“对称加密算法”久经考验。" class="headerlink" title="1.知名加密软件所使用的“对称加密算法”久经考验。"></a>1.知名加密软件所使用的“对称加密算法”久经考验。</h4><p>高级加密标准“AES”（Advanced Encryption Standard），又称Rijndael加密法，是美国联邦政府采用的一种区块加密标准，已经被多方分析且广为全世界所使用。是美国国家标准局公开招标的21世纪新一代加密算法标准，经过多轮淘汰，最终由Rijndael被选中成为“AES”。其算法本身已经被世界知名密码学专家研讨过，几乎不存在算法层面的漏洞。</p>
<h4 id="2-密钥的穷举"><a href="#2-密钥的穷举" class="headerlink" title="2.密钥的穷举"></a>2.密钥的穷举</h4><blockquote>
<p>高级加密算法使用的密钥，其“密钥空间”往往很大。研究人员充分考虑到了摩尔定律带来的算力增长，在相当长的时间内都不可能对密钥进行穷举。</p>
</blockquote>
<h4 id="3-弱口令的暴力猜解"><a href="#3-弱口令的暴力猜解" class="headerlink" title="3.弱口令的暴力猜解"></a>3.弱口令的暴力猜解</h4><blockquote>
<p>作为针对弱口令的常见手段。用于“暴力猜解密码”的服务器集群，往往非个人和普通组织能配备。而且只需要引入【key files】作为加密盘的“认证因素”，就可以使暴力猜解变得不可能。</p>
</blockquote>
<blockquote>
<p>注：①key files要使用“二进制”文件，不要用文本文件；②最好是随机生成的；③文件尺寸至少64字节。</p>
</blockquote>
<h3 id="二、如何防止攻击者窃取密钥？"><a href="#二、如何防止攻击者窃取密钥？" class="headerlink" title="二、如何防止攻击者窃取密钥？"></a>二、如何防止攻击者窃取密钥？</h3><h4 id="1-确保物理系统（Host-OS）的纯洁"><a href="#1-确保物理系统（Host-OS）的纯洁" class="headerlink" title="1.确保物理系统（Host OS）的纯洁"></a>1.确保物理系统（Host OS）的纯洁</h4><blockquote>
<p>在电脑BIOS系统上设置“开机密码”和“硬盘锁密码”，防止攻击者在物理接触电脑时，在主引导扇区的boot loader中植入恶意软件，从而盗取全盘加密的“密钥”。</p>
</blockquote>
<blockquote>
<p>注：在不依赖外部启动介质的情况下，主引导扇区是不可能加密的。因为需要一个明文程序，让用户输入全盘加密的“密码”，并执行解锁动作。从技术上说，用户可以把boot loader放在启动U盘内，每次开机直接插入U盘。但是该方法拥有额外风险：因为一般的U盘没有硬盘锁，只要攻击者拿到启动U盘，同样可以植入恶意软件。</p>
</blockquote>
<h4 id="2-禁用“虚拟内存”"><a href="#2-禁用“虚拟内存”" class="headerlink" title="2.禁用“虚拟内存”"></a>2.禁用“虚拟内存”</h4><blockquote>
<p>主流操作系统都有“虚拟内存”机制。Windows叫“页交换文件”，Linux就是“swap分区”。“虚拟内存”的作用在于当运行内存比较紧张时，把一些不经常访问的“内存页”转储到硬盘，腾出运行内存来存放新的内容。一旦启用了“虚拟内存”，也就存在某种危险性。敏感加密盘的“密钥”会残留在“虚拟内存”上（即物理硬盘上）。</p>
</blockquote>
<h4 id="3-禁用“休眠”"><a href="#3-禁用“休眠”" class="headerlink" title="3.禁用“休眠”"></a>3.禁用“休眠”</h4><p>“休眠”的安全性</p>
<blockquote>
<p>当电脑采取休眠模式时，会把整个物理内存保存到硬盘中的“休眠文件”。如果用户在未卸载“敏感加密盘”的情况下让系统休眠，那么“休眠文件”中必定包含敏感加密盘的“密钥”。</p>
</blockquote>
<p>“待机”的安全性</p>
<blockquote>
<p>如果已经禁用“虚拟内存”和“休眠”功能。在混合睡眠模式下，让系统进入“待机”状态，也会保存一部分内存在硬盘上。现在DRAM内存条在断电后依然有数据残留。在残留时间内，攻击者对“待机”电脑进行【冷启动攻击】，可以直接拿到内存中的数据，然后分析出加密盘“密钥”。</p>
</blockquote>
<blockquote>
<p>注：“锁定屏幕”与“待机”类似，同样可以采取【冷启动攻击】。</p>
</blockquote>
<p>“关机”的安全性</p>
<blockquote>
<p>休眠和待机都有安全风险，所以尽量选择关机。只要关机超过10分钟，数据全消，就不可能被【冷启动攻击】。</p>
</blockquote>
<blockquote>
<p>注：断电后，内存中的数据不会立即消失。温度越低，残留时间越长。在正常的室温下，内存条的数据残留时间不超过10分钟。</p>
</blockquote>
<h4 id="4-禁用FireWire-DMA"><a href="#4-禁用FireWire-DMA" class="headerlink" title="4.禁用FireWire DMA"></a>4.禁用FireWire DMA</h4><blockquote>
<p>“FireWire”是硬件接口规格（俗称“火线接口”，也叫“IEEE 1394接口”）。该接口支持DMA（direct memory access）方式直接操作物理内存。所以，攻击者如果能物理接触到电脑，可以电脑上插入特定的FireWire设备，利用DMA的方式直接读取整个系统内存。
　　</p>
</blockquote>
<h3 id="三、文件备份技巧"><a href="#三、文件备份技巧" class="headerlink" title="三、文件备份技巧"></a>三、文件备份技巧</h3><h4 id="1-虚拟加密盘"><a href="#1-虚拟加密盘" class="headerlink" title="1.虚拟加密盘"></a>1.虚拟加密盘</h4><blockquote>
<p>首先使用加密工具创建一个虚拟分区。这个虚拟分区对应于物理硬盘上的一个大文(卷文件)。创建的虚拟分区有多大，卷文件就有多大。然后，只需要加密工具挂载该文件，系统上就会多出一个盘符。存放到这个盘符(虚拟硬盘)上的数据，都会被自动加密。</p>
</blockquote>
<blockquote>
<ul>
<li>优点：便于备份，虚拟加密盘本质是个大文件，只需要把文件复制粘贴，就相当于完成了虚拟盘的备份。</li>
<li>缺点：对于操作系统的系统分区，只能采用物理加密盘的方式，无法采用虚拟加密盘的方式。</li>
</ul>
</blockquote>
<h4 id="2-加密盘搭配网盘"><a href="#2-加密盘搭配网盘" class="headerlink" title="2.加密盘搭配网盘"></a>2.加密盘搭配网盘</h4><blockquote>
<p>找一个带同步功能的网盘。然后把本地的加密盘文件同步到网盘上。（注意同步的是加密盘“卷文件”，而不是加密盘内的文件）</p>
</blockquote>
<blockquote>
<p>加密盘搭配网盘的优点：</p>
<ul>
<li>保密性。因为同步到网盘的是“加密盘文件”，攻击者难以偷窥上传的数据。</li>
<li>防止网盘服务提供商偷窥。</li>
<li>防止网盘被入侵。如果账号被盗，攻击者只能拿到加密盘，看不到原始数据。</li>
<li>防止上传过程中的网络监视</li>
<li>提高了数据的可用性。即使电脑硬盘损坏，备份在网盘的加密数据也不会丢失。</li>
</ul>
</blockquote>
<blockquote>
<p>注：某些网盘同步时，没有进行加密传输。在这种情况下，一旦攻击者对用户的网络传输流量进行嗅探，就有可能拿到同步的所有文件。</p>
</blockquote>
<h4 id="3-全盘加密的缺陷"><a href="#3-全盘加密的缺陷" class="headerlink" title="3.全盘加密的缺陷"></a>3.全盘加密的缺陷</h4><blockquote>
<p>从理论上讲，任何一款磁盘加密工具，在不借助外部机制的情况下，都不可能实现真正的“自启动全盘加密”。因为要想自启动，必须要有一个引导程序，这个引导程序是不能加密的（引导程序如果被加密，就无法引导）。所以，凡是能够实现“自启动全盘加密”的，其引导程序都是明文的（无加密）。</p>
</blockquote>
<blockquote>
<p>解决方案：</p>
<ul>
<li>采用BIOS提供的“硬盘口令”功能</li>
<li>采用外部存储介质进行引导（TrueCrypt和VeraCrypt无法使用该方案）</li>
<li>将操作系统安装在外部存储介质上</li>
</ul>
<p>　　</p>
</blockquote>
]]></content>
      <categories>
        <category>文件加密</category>
      </categories>
      <tags>
        <tag>文件加密</tag>
      </tags>
  </entry>
  <entry>
    <title>服务器测试脚本与安全设置</title>
    <url>/archives/22addad1.html</url>
    <content><![CDATA[<h2 id="一、服务器测试脚本"><a href="#一、服务器测试脚本" class="headerlink" title="一、服务器测试脚本"></a>一、服务器测试脚本</h2><h3 id="1-bench-服务器性能测试"><a href="#1-bench-服务器性能测试" class="headerlink" title="1.bench 服务器性能测试"></a>1.bench 服务器性能测试</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 测试VPS基础信息以及下载速度，来自秋水逸冰</span></span><br><span class="line">wget -qO- bench.sh | bash</span><br></pre></td></tr></table></figure>

<h3 id="2-Superbench-服务器性能测试"><a href="#2-Superbench-服务器性能测试" class="headerlink" title="2.Superbench 服务器性能测试"></a>2.Superbench 服务器性能测试</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 基于Oldking制作脚本修改的，新增5G节点下载测试</span></span><br><span class="line">bash &lt;(curl -Lso- https://git.io/superspeed.sh)</span><br></pre></td></tr></table></figure>

<h3 id="3-SuperBench-sh-服务器测试脚本"><a href="#3-SuperBench-sh-服务器测试脚本" class="headerlink" title="3.SuperBench.sh 服务器测试脚本"></a>3.SuperBench.sh 服务器测试脚本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -qO- --no-check-certificate https://raw.githubusercontent.com/oooldking/script/master/superbench.sh | bash</span><br></pre></td></tr></table></figure>

<h3 id="4-系统信息、I-O测试和speedtest速度测试"><a href="#4-系统信息、I-O测试和speedtest速度测试" class="headerlink" title="4.系统信息、I&#x2F;O测试和speedtest速度测试"></a>4.系统信息、I&#x2F;O测试和speedtest速度测试</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -LsO bench.monster/speedtest.sh; bash speedtest.sh -Asia</span><br></pre></td></tr></table></figure>

<h3 id="5-SuperSpeed全面测速脚本"><a href="#5-SuperSpeed全面测速脚本" class="headerlink" title="5.SuperSpeed全面测速脚本"></a>5.SuperSpeed全面测速脚本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 中国多城市多线路测试</span></span><br><span class="line">bash &lt;(curl -Lso- https://git.io/superspeed)</span><br></pre></td></tr></table></figure>

<h2 id="二、服务器安全设置"><a href="#二、服务器安全设置" class="headerlink" title="二、服务器安全设置"></a>二、服务器安全设置</h2><h3 id="步骤一、开启防火墙，不用的端口都禁止掉"><a href="#步骤一、开启防火墙，不用的端口都禁止掉" class="headerlink" title="步骤一、开启防火墙，不用的端口都禁止掉"></a>步骤一、开启防火墙，不用的端口都禁止掉</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 简单规则如下所示，具体根据实际情况变通</span></span><br><span class="line">/sbin/iptables -F</span><br><span class="line">/sbin/iptables -A INPUT -p tcp -i vnet0 –dport ssh -j ACCEPT</span><br><span class="line">/sbin/iptables -A INPUT -p tcp -i vnet0 –dport <span class="number">80</span> -j ACCEPT</span><br><span class="line">/sbin/iptables -A INPUT -i vnet0 -m state –state ESTABLISHED<span class="punctuation">,</span>RELATED -j ACCEPT</span><br><span class="line">/sbin/iptables -A INPUT -p ICMP -j DROP</span><br><span class="line">/sbin/iptables -A INPUT -i vnet0 -j DROP</span><br></pre></td></tr></table></figure>

<h3 id="步骤二、修改ssh端口，最好改到端口5000以上（防火墙务必已开放此端口，否则连接不上）"><a href="#步骤二、修改ssh端口，最好改到端口5000以上（防火墙务必已开放此端口，否则连接不上）" class="headerlink" title="步骤二、修改ssh端口，最好改到端口5000以上（防火墙务必已开放此端口，否则连接不上）"></a>步骤二、修改ssh端口，最好改到端口5000以上（防火墙务必已开放此端口，否则连接不上）</h3><blockquote>
<p><code>_config</code>配置文件中搜索<code>Port</code>，将<code>Port</code>的数字改成想设置的端口号</p>
</blockquote>
<h3 id="步骤三、禁止root用户登录"><a href="#步骤三、禁止root用户登录" class="headerlink" title="步骤三、禁止root用户登录"></a>步骤三、禁止root用户登录</h3><blockquote>
<p><code>_config</code>配置文件中搜索<code>PermitRootLogin</code>，将后面的值<code>yes</code>改为<code>no</code></p>
</blockquote>
<blockquote>
<p>注：修改完配置文件，必须重启ssh才能生效。</p>
</blockquote>
<h2 id="三、常用端口备忘录"><a href="#三、常用端口备忘录" class="headerlink" title="三、常用端口备忘录"></a>三、常用端口备忘录</h2><table>
<thead>
<tr>
<th align="center"><strong>端口号</strong></th>
<th align="center"><strong>服务</strong></th>
<th align="center"><strong>备注</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="center">21</td>
<td align="center">FTP</td>
<td align="center">匿名访问，弱口令</td>
</tr>
<tr>
<td align="center">22</td>
<td align="center">SSH</td>
<td align="center">弱口令登录</td>
</tr>
<tr>
<td align="center">23</td>
<td align="center">Telnet</td>
<td align="center">弱口令登录</td>
</tr>
<tr>
<td align="center">80</td>
<td align="center">Web</td>
<td align="center">常见Web漏洞或弱口令</td>
</tr>
<tr>
<td align="center">161</td>
<td align="center">SNMP</td>
<td align="center">public弱口令</td>
</tr>
<tr>
<td align="center">389</td>
<td align="center">LDAP</td>
<td align="center">匿名访问</td>
</tr>
<tr>
<td align="center">443</td>
<td align="center">openssl</td>
<td align="center">web漏洞</td>
</tr>
<tr>
<td align="center">445</td>
<td align="center">smb</td>
<td align="center">系统溢出漏洞</td>
</tr>
<tr>
<td align="center">873</td>
<td align="center">rsync</td>
<td align="center">匿名访问，弱口令</td>
</tr>
<tr>
<td align="center">1099</td>
<td align="center">JAVArmi</td>
<td align="center">命令执行</td>
</tr>
<tr>
<td align="center">1433</td>
<td align="center">MsSQL</td>
<td align="center">弱口令</td>
</tr>
<tr>
<td align="center">1521</td>
<td align="center">Oracle</td>
<td align="center">弱口令</td>
</tr>
<tr>
<td align="center">2601</td>
<td align="center">Zebra</td>
<td align="center">默认密码zebra</td>
</tr>
<tr>
<td align="center">3128</td>
<td align="center">squid</td>
<td align="center">匿名访问</td>
</tr>
<tr>
<td align="center">3306</td>
<td align="center">MySQL</td>
<td align="center">弱口令</td>
</tr>
<tr>
<td align="center">3389</td>
<td align="center">RDP</td>
<td align="center">远程桌面弱口令</td>
</tr>
<tr>
<td align="center">4440</td>
<td align="center">Rundeck</td>
<td align="center">弱口令admin</td>
</tr>
<tr>
<td align="center">4848</td>
<td align="center">GlassFish</td>
<td align="center">弱口令admin</td>
</tr>
<tr>
<td align="center">5432</td>
<td align="center">PostGreSQL</td>
<td align="center">弱口令爆破</td>
</tr>
<tr>
<td align="center">6379</td>
<td align="center">Redis</td>
<td align="center">匿名访问</td>
</tr>
<tr>
<td align="center">7001</td>
<td align="center">Weblogic</td>
<td align="center">弱口令爆破</td>
</tr>
<tr>
<td align="center">7002</td>
<td align="center">Weblogic</td>
<td align="center">弱口令爆破</td>
</tr>
<tr>
<td align="center">8080</td>
<td align="center">Tomcat\Jboss</td>
<td align="center">弱口令，Jboss匿名访问</td>
</tr>
<tr>
<td align="center">9043</td>
<td align="center">WebSphere</td>
<td align="center">弱口令爆破</td>
</tr>
<tr>
<td align="center">27017</td>
<td align="center">MongoDB</td>
<td align="center">未授权访问</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>服务器</category>
      </categories>
      <tags>
        <tag>服务器</tag>
        <tag>测试脚本</tag>
        <tag>服务器安全</tag>
      </tags>
  </entry>
  <entry>
    <title>开发工具——VScode基础设置：CSScomb配置规则</title>
    <url>/archives/7659fe2e.html</url>
    <content><![CDATA[<h4 id="CSScomb配置规则"><a href="#CSScomb配置规则" class="headerlink" title="CSScomb配置规则"></a>CSScomb配置规则</h4><blockquote>
<p>下载插件CSScomb → 打开设置 → 选择配置文件 → 选择显示配置文件内容 → 打开settings.json文件，复制粘贴以下代码</p>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;exclude&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;.git/**&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;node_modules/**&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;bower_components/**&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;always-semicolon&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span>   <span class="comment">// 总是显示分号</span></span><br><span class="line">    <span class="attr">&quot;block-indent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;    &quot;</span><span class="punctuation">,</span>    <span class="comment">// 代码块缩进，可以是数字或字符串与空白和制表符等</span></span><br><span class="line">    <span class="attr">&quot;color-case&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lower&quot;</span><span class="punctuation">,</span>     <span class="comment">// 十六进制颜色统一，可选值&#x27;lower&#x27;全部小写；&#x27;upper&#x27;全部大写</span></span><br><span class="line">    <span class="attr">&quot;color-shorthand&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span>   <span class="comment">// 十六进制颜色缩写与否</span></span><br><span class="line">    <span class="attr">&quot;element-case&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lower&quot;</span><span class="punctuation">,</span>    <span class="comment">// 选择器元素统一，可选值&#x27;lower&#x27;全部小写；&#x27;upper&#x27;全部大写</span></span><br><span class="line">    <span class="attr">&quot;eof-newline&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span>          <span class="comment">// 文件结束后添换行</span></span><br><span class="line">    <span class="attr">&quot;leading-zero&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span>          <span class="comment">// 是否需要小数点前的0</span></span><br><span class="line">    <span class="attr">&quot;quotes&quot;</span><span class="punctuation">:</span> <span class="string">&quot;single&quot;</span><span class="punctuation">,</span>               <span class="comment">// 引号风格，可选值&#x27;single&#x27;单引号，&#x27;double&#x27;双引号</span></span><br><span class="line">    <span class="attr">&quot;remove-empty-rulesets&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span>      <span class="comment">// 值为true时，如&#x27;a&#123;&#125;&#x27;这样的空规则集将被移除</span></span><br><span class="line">    <span class="attr">&quot;space-after-colon&quot;</span><span class="punctuation">:</span> <span class="string">&quot; &quot;</span><span class="punctuation">,</span>            <span class="comment">// 冒号后规则</span></span><br><span class="line">    <span class="attr">&quot;space-after-combinator&quot;</span><span class="punctuation">:</span> <span class="string">&quot; &quot;</span><span class="punctuation">,</span>        <span class="comment">// 选择符后规则</span></span><br><span class="line">    <span class="attr">&quot;space-between-declarations&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span>       <span class="comment">// 命名空间后规则（自行添加的）</span></span><br><span class="line">    <span class="attr">&quot;space-after-opening-brace&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\n&quot;</span><span class="punctuation">,</span>      <span class="comment">// &#x27;&#123;&#x27; 之后的规则</span></span><br><span class="line">    <span class="attr">&quot;space-after-selector-delimiter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\n&quot;</span><span class="punctuation">,</span>  <span class="comment">// 选择器之后的规则</span></span><br><span class="line">    <span class="attr">&quot;space-before-closing-brace&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\n&quot;</span><span class="punctuation">,</span>       <span class="comment">// &#x27;&#125;&#x27; 之后的规则</span></span><br><span class="line">    <span class="attr">&quot;space-before-colon&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span>                 <span class="comment">// 冒号前的规则</span></span><br><span class="line">    <span class="attr">&quot;space-before-combinator&quot;</span><span class="punctuation">:</span> <span class="string">&quot; &quot;</span><span class="punctuation">,</span>           <span class="comment">// 选择符前规则</span></span><br><span class="line">    <span class="attr">&quot;space-before-opening-brace&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\n&quot;</span><span class="punctuation">,</span>      <span class="comment">// &#x27;&#123;&#x27; 之前的规则</span></span><br><span class="line">    <span class="attr">&quot;space-before-selector-delimiter&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span>  <span class="comment">// 选择器之前的规则</span></span><br><span class="line">    <span class="attr">&quot;strip-spaces&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span>                  <span class="comment">// 是否修剪尾随的空格</span></span><br><span class="line">    <span class="attr">&quot;unitless-zero&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span>                <span class="comment">// 是否移除0后的单位值，比如&#x27;0px&#x27;格式化为&#x27;0&#x27;</span></span><br><span class="line">    <span class="attr">&quot;vendor-prefix-align&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span>         <span class="comment">// 是否对齐属性和值中的前缀</span></span><br><span class="line">    <span class="attr">&quot;sort-order&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;font&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;font-family&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;font-size&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;font-weight&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;font-style&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;font-variant&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;font-size-adjust&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;font-stretch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;font-effect&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;font-emphasize&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;font-emphasize-position&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;font-emphasize-style&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;font-smooth&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;line-height&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;position&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;z-index&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;top&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;right&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;bottom&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;left&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;display&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;visibility&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;float&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;clear&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;overflow&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;overflow-x&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;overflow-y&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-overflow-x&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-overflow-y&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;clip&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;zoom&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-align-content&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-flex-line-pack&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;align-content&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-box-align&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-box-align&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-align-items&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;align-items&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-flex-align&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-align-self&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-flex-item-align&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-grid-row-align&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;align-self&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-box-flex&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-flex&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-box-flex&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-flex&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;flex&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-flex-flow&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-flex-flow&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;flex-flow&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-flex-basis&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-flex-preferred-size&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;flex-basis&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-box-orient&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-box-direction&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-flex-direction&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-box-orient&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-box-direction&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-flex-direction&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;flex-direction&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-flex-grow&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-flex-positive&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;flex-grow&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-flex-shrink&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-flex-negative&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;flex-shrink&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-flex-wrap&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-flex-wrap&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;flex-wrap&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-box-pack&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-box-pack&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-flex-pack&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-justify-content&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;justify-content&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-box-ordinal-group&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-order&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-box-ordinal-group&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-flex-order&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;order&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;-webkit-box-sizing&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-box-sizing&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;box-sizing&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;width&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;min-width&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;max-width&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;height&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;min-height&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;max-height&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;margin&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;margin-top&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;margin-right&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;margin-bottom&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;margin-left&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;padding&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;padding-top&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;padding-right&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;padding-bottom&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;padding-left&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;table-layout&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;empty-cells&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;caption-side&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-spacing&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-collapse&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;list-style&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;list-style-position&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;list-style-type&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;list-style-image&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;content&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;quotes&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;counter-reset&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;counter-increment&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;resize&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;cursor&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-user-select&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-user-select&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-user-select&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;user-select&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;nav-index&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;nav-up&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;nav-right&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;nav-down&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;nav-left&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-transition&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-transition&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-transition&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-o-transition&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;transition&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-transition-delay&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-transition-delay&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-transition-delay&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-o-transition-delay&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;transition-delay&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-transition-timing-function&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-transition-timing-function&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-transition-timing-function&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-o-transition-timing-function&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;transition-timing-function&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-transition-duration&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-transition-duration&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-transition-duration&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-o-transition-duration&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;transition-duration&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-transition-property&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-transition-property&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-transition-property&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-o-transition-property&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;transition-property&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-transform&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-transform&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-transform&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-o-transform&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;transform&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-transform-origin&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-transform-origin&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-transform-origin&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-o-transform-origin&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;transform-origin&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-animation&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-animation&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-animation&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-o-animation&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;animation&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-animation-name&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-animation-name&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-animation-name&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-o-animation-name&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;animation-name&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-animation-duration&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-animation-duration&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-animation-duration&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-o-animation-duration&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;animation-duration&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-animation-play-state&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-animation-play-state&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-animation-play-state&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-o-animation-play-state&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;animation-play-state&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-animation-timing-function&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-animation-timing-function&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-animation-timing-function&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-o-animation-timing-function&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;animation-timing-function&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-animation-delay&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-animation-delay&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-animation-delay&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-o-animation-delay&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;animation-delay&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-animation-iteration-count&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-animation-iteration-count&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-animation-iteration-count&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-o-animation-iteration-count&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;animation-iteration-count&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-animation-direction&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-animation-direction&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-animation-direction&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-o-animation-direction&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;animation-direction&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;text-align&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-text-align-last&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-text-align-last&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-text-align-last&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;text-align-last&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;vertical-align&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;white-space&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;text-decoration&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;text-emphasis&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;text-emphasis-color&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;text-emphasis-style&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;text-emphasis-position&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;text-indent&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-text-justify&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;text-justify&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;letter-spacing&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;word-spacing&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-writing-mode&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;text-outline&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;text-transform&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;text-wrap&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;text-overflow&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-text-overflow&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;text-overflow-ellipsis&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;text-overflow-mode&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-word-wrap&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;word-wrap&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;word-break&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-word-break&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-tab-size&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-o-tab-size&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;tab-size&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-hyphens&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-hyphens&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;hyphens&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;pointer-events&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;opacity&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;filter:progid:DXImageTransform.Microsoft.Alpha(Opacity&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-filter:\\&#x27;progid:DXImageTransform.Microsoft.Alpha&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-interpolation-mode&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;color&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-width&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-style&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-color&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-top&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-top-width&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-top-style&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-top-color&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-right&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-right-width&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-right-style&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-right-color&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-bottom&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-bottom-width&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-bottom-style&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-bottom-color&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-left&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-left-width&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-left-style&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-left-color&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-border-radius&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-border-radius&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-radius&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-border-top-left-radius&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-border-radius-topleft&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-top-left-radius&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-border-top-right-radius&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-border-radius-topright&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-top-right-radius&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-border-bottom-right-radius&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-border-radius-bottomright&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-bottom-right-radius&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-border-bottom-left-radius&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-border-radius-bottomleft&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-bottom-left-radius&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-border-image&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-border-image&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-o-border-image&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-image&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-border-image-source&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-border-image-source&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-o-border-image-source&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-image-source&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-border-image-slice&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-border-image-slice&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-o-border-image-slice&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-image-slice&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-border-image-width&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-border-image-width&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-o-border-image-width&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-image-width&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-border-image-outset&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-border-image-outset&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-o-border-image-outset&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-image-outset&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-border-image-repeat&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-border-image-repeat&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-o-border-image-repeat&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;border-image-repeat&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;outline&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;outline-width&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;outline-style&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;outline-color&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;outline-offset&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;background&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;filter:progid:DXImageTransform.Microsoft.AlphaImageLoader&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;background-color&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;background-image&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;background-repeat&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;background-attachment&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;background-position&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;background-position-x&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-background-position-x&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;background-position-y&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-background-position-y&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-background-clip&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-background-clip&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;background-clip&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;background-origin&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-background-size&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-background-size&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-o-background-size&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;background-size&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;box-decoration-break&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-webkit-box-shadow&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-moz-box-shadow&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;box-shadow&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;filter:progid:DXImageTransform.Microsoft.gradient&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-ms-filter:\\&#x27;progid:DXImageTransform.Microsoft.gradient&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;text-shadow&quot;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>开发工具</tag>
        <tag>VScode</tag>
      </tags>
  </entry>
  <entry>
    <title>开发工具——VScode必备插件推荐</title>
    <url>/archives/ecd1a2f9.html</url>
    <content><![CDATA[<h4 id="1-汉化插件【必装】"><a href="#1-汉化插件【必装】" class="headerlink" title="1.汉化插件【必装】"></a>1.汉化插件【必装】</h4><blockquote>
<p>Chinese</p>
</blockquote>
<h4 id="2-AI编程助手【必装】"><a href="#2-AI编程助手【必装】" class="headerlink" title="2.AI编程助手【必装】"></a>2.AI编程助手【必装】</h4><blockquote>
<p>GitHub Copilot</p>
</blockquote>
<h4 id="3-滑词翻译插件【必装】"><a href="#3-滑词翻译插件【必装】" class="headerlink" title="3.滑词翻译插件【必装】"></a>3.滑词翻译插件【必装】</h4><blockquote>
<p>Code Translate</p>
</blockquote>
<h4 id="4-实时预览网页【必装】"><a href="#4-实时预览网页【必装】" class="headerlink" title="4.实时预览网页【必装】"></a>4.实时预览网页【必装】</h4><blockquote>
<p>Live Server</p>
</blockquote>
<h4 id="5-查看Git详细提交日志，避锅神器【必装】"><a href="#5-查看Git详细提交日志，避锅神器【必装】" class="headerlink" title="5.查看Git详细提交日志，避锅神器【必装】"></a>5.查看Git详细提交日志，避锅神器【必装】</h4><blockquote>
<p>GitLens</p>
</blockquote>
<h4 id="6-图片预览插件【必装】"><a href="#6-图片预览插件【必装】" class="headerlink" title="6.图片预览插件【必装】"></a>6.图片预览插件【必装】</h4><blockquote>
<p>Code Runner</p>
</blockquote>
<h4 id="7-一键运行代码【必装】"><a href="#7-一键运行代码【必装】" class="headerlink" title="7.一键运行代码【必装】"></a>7.一键运行代码【必装】</h4><blockquote>
<p>Code Runner</p>
</blockquote>
<h4 id="8-CSS属性自动排序【必装】"><a href="#8-CSS属性自动排序【必装】" class="headerlink" title="8.CSS属性自动排序【必装】"></a>8.CSS属性自动排序【必装】</h4><blockquote>
<p>CSScomb（可自定义规则）</p>
</blockquote>
<h4 id="9-代码格式化【必装】"><a href="#9-代码格式化【必装】" class="headerlink" title="9.代码格式化【必装】"></a>9.代码格式化【必装】</h4><blockquote>
<p>Prettier（可自定义规则）</p>
</blockquote>
<h4 id="10-查看第三方包大小，检测该包是否已安装【必装】"><a href="#10-查看第三方包大小，检测该包是否已安装【必装】" class="headerlink" title="10.查看第三方包大小，检测该包是否已安装【必装】"></a>10.查看第三方包大小，检测该包是否已安装【必装】</h4><blockquote>
<p>Import Cost</p>
</blockquote>
<h4 id="11-自动导入第三方包【必装】"><a href="#11-自动导入第三方包【必装】" class="headerlink" title="11.自动导入第三方包【必装】"></a>11.自动导入第三方包【必装】</h4><blockquote>
<p>Auto Import</p>
</blockquote>
<h4 id="12-快速查看编辑CSS样式【必装】"><a href="#12-快速查看编辑CSS样式【必装】" class="headerlink" title="12.快速查看编辑CSS样式【必装】"></a>12.快速查看编辑CSS样式【必装】</h4><blockquote>
<p>CSS Peek</p>
</blockquote>
<h4 id="13-CSS-SCSS-Less语法检查【必装】"><a href="#13-CSS-SCSS-Less语法检查【必装】" class="headerlink" title="13.CSS&#x2F;SCSS&#x2F;Less语法检查【必装】"></a>13.CSS&#x2F;SCSS&#x2F;Less语法检查【必装】</h4><blockquote>
<p>Stylelint</p>
</blockquote>
<h4 id="14-变量值高亮显示【必装】"><a href="#14-变量值高亮显示【必装】" class="headerlink" title="14.变量值高亮显示【必装】"></a>14.变量值高亮显示【必装】</h4><blockquote>
<p>DotENV</p>
</blockquote>
<h4 id="15-标签重命名时，自动改写配对标签【必装】"><a href="#15-标签重命名时，自动改写配对标签【必装】" class="headerlink" title="15.标签重命名时，自动改写配对标签【必装】"></a>15.标签重命名时，自动改写配对标签【必装】</h4><blockquote>
<p>Auto Rename Tag</p>
</blockquote>
<h4 id="16-显示缩进空格的数量【必装】"><a href="#16-显示缩进空格的数量【必装】" class="headerlink" title="16.显示缩进空格的数量【必装】"></a>16.显示缩进空格的数量【必装】</h4><blockquote>
<p>indent-rainbow</p>
</blockquote>
<h4 id="17-代码行后直接提示错误信息【必装】"><a href="#17-代码行后直接提示错误信息【必装】" class="headerlink" title="17.代码行后直接提示错误信息【必装】"></a>17.代码行后直接提示错误信息【必装】</h4><blockquote>
<p>Error Lens</p>
</blockquote>
<h4 id="18-文件添加分类图标【必装】"><a href="#18-文件添加分类图标【必装】" class="headerlink" title="18.文件添加分类图标【必装】"></a>18.文件添加分类图标【必装】</h4><blockquote>
<p>vscode-icons</p>
</blockquote>
<h4 id="19-elementUI标签自动补全【必装】"><a href="#19-elementUI标签自动补全【必装】" class="headerlink" title="19.elementUI标签自动补全【必装】"></a>19.elementUI标签自动补全【必装】</h4><blockquote>
<p>Element UI Snippets</p>
</blockquote>
<h4 id="20-输入文件路径-模块路径时智能提示【必装】"><a href="#20-输入文件路径-模块路径时智能提示【必装】" class="headerlink" title="20.输入文件路径&#x2F;模块路径时智能提示【必装】"></a>20.输入文件路径&#x2F;模块路径时智能提示【必装】</h4><blockquote>
<p>Path Intellisense</p>
</blockquote>
<h4 id="21-正则表达式大全【必装】"><a href="#21-正则表达式大全【必装】" class="headerlink" title="21.正则表达式大全【必装】"></a>21.正则表达式大全【必装】</h4><blockquote>
<p>any-rule</p>
</blockquote>
<h4 id="22-英文单词拼写检查器"><a href="#22-英文单词拼写检查器" class="headerlink" title="22.英文单词拼写检查器"></a>22.英文单词拼写检查器</h4><blockquote>
<p>Code Spell Checker（可手动添词）</p>
</blockquote>
<h4 id="23-JavaScript语法检测"><a href="#23-JavaScript语法检测" class="headerlink" title="23.JavaScript语法检测"></a>23.JavaScript语法检测</h4><blockquote>
<p>ESlint（可自定义规则）</p>
</blockquote>
<h4 id="24-自动把less文件编译为css文件"><a href="#24-自动把less文件编译为css文件" class="headerlink" title="24.自动把less文件编译为css文件"></a>24.自动把less文件编译为css文件</h4><blockquote>
<p>Easy LESS（可自定义规则）</p>
</blockquote>
<h4 id="25-Vue语法高亮和检测"><a href="#25-Vue语法高亮和检测" class="headerlink" title="25.Vue语法高亮和检测"></a>25.Vue语法高亮和检测</h4><blockquote>
<p>Vetur（可自定义规则）</p>
</blockquote>
<h4 id="26-vue代码提示"><a href="#26-vue代码提示" class="headerlink" title="26.vue代码提示"></a>26.vue代码提示</h4><blockquote>
<p>vue-helper</p>
</blockquote>
<h4 id="27-react代码片段"><a href="#27-react代码片段" class="headerlink" title="27.react代码片段"></a>27.react代码片段</h4><blockquote>
<p>ES7+</p>
</blockquote>
<h4 id="28-JS-TS-HTML-React-Vue提供ES6的语法支持"><a href="#28-JS-TS-HTML-React-Vue提供ES6的语法支持" class="headerlink" title="28.JS&#x2F;TS&#x2F;HTML&#x2F;React&#x2F;Vue提供ES6的语法支持"></a>28.JS&#x2F;TS&#x2F;HTML&#x2F;React&#x2F;Vue提供ES6的语法支持</h4><blockquote>
<p>JavaScript(ES6) snippets</p>
</blockquote>
<h4 id="29-node-js程序智能提示，自动生成模板"><a href="#29-node-js程序智能提示，自动生成模板" class="headerlink" title="29.node.js程序智能提示，自动生成模板"></a>29.node.js程序智能提示，自动生成模板</h4><blockquote>
<p>node-snippets</p>
</blockquote>
<h4 id="30-远程连接VPS-容器-WSL等环境进行开发"><a href="#30-远程连接VPS-容器-WSL等环境进行开发" class="headerlink" title="30.远程连接VPS&#x2F;容器&#x2F;WSL等环境进行开发"></a>30.远程连接VPS&#x2F;容器&#x2F;WSL等环境进行开发</h4><blockquote>
<p>Remote Development</p>
</blockquote>
]]></content>
      <categories>
        <category>开发工具</category>
      </categories>
      <tags>
        <tag>开发工具</tag>
        <tag>VScode插件</tag>
      </tags>
  </entry>
  <entry>
    <title>文献管理—Zotero基础设置与插件推荐</title>
    <url>/archives/829617d4.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>工欲善其事，必先利其器。计算机专业必须学会使用最前沿的尖端软件来完善自己的工作流，提高自身学习效率与知识管理能力。Zotero作为一款诞生于英文环境的文献管理软件，其高自由度和良好的社区生态，使得其在中文科研环境下同样得心应手。</p>
<blockquote>
<ul>
<li>学科期刊推荐：research.com</li>
<li>文献高级检索：PubMed</li>
<li>RSS订阅工具：RSSHub-Radar</li>
</ul>
</blockquote>
<h2 id="一、Zotero官网：https-www-zotero-org"><a href="#一、Zotero官网：https-www-zotero-org" class="headerlink" title="一、Zotero官网：https://www.zotero.org/"></a>一、Zotero官网：<a href="https://www.zotero.org/">https://www.zotero.org/</a></h2><h4 id="（1）配置同步盘（以OneDrive云盘为例）"><a href="#（1）配置同步盘（以OneDrive云盘为例）" class="headerlink" title="（1）配置同步盘（以OneDrive云盘为例）"></a>（1）配置同步盘（以OneDrive云盘为例）</h4><blockquote>
<p>编辑 → 首选项 → 同步 → 注册&#x2F;登录Zotero账号：文件同步都勾选，使用Zotero同步<br>编辑 → 首选项 → 高级 → 文件和文件夹 → 需要设置两个路径：一是数据存储位置选择默认，该部分保存的是文献信息，占用空间较小；二是根目录选择在OneDrive云盘的Zotero文件夹下（需要先在OneDrive云盘上中创建Zotero文件夹）。<br>以管理员身份打开cmd，输入以下代码将OneDrive云盘中的Zotero文件夹中的storage文件夹链接到数据储存位置中的storage文件夹：</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mklink /J &quot;D:\Zotero\storage&quot; &quot;D:\OneDrive\Zotero\storage</span><br></pre></td></tr></table></figure>

<h4 id="（2）Zotero-Sci-Hub"><a href="#（2）Zotero-Sci-Hub" class="headerlink" title="（2）Zotero + Sci-Hub"></a>（2）Zotero + Sci-Hub</h4><blockquote>
<p>编辑 → 首选项 → 高级 → 高级设置(编辑器) → 搜索<code>extensions.zotero.findPDFs.resolvers</code>，删除<code>[]</code>，并将以下代码粘贴进去并点击ok。</p>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 将Sci-Hub配置为PDF解析器，替代默认的Unpaywall，直接调用Sci-Hub下载文献</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Sci-Hub&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;method&quot;</span><span class="punctuation">:</span><span class="string">&quot;GET&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span><span class="string">&quot;https://sci-hub.se/&#123;doi&#125;&quot;</span><span class="punctuation">,</span> <span class="comment">//根据Sci-Hub域名自行更新</span></span><br><span class="line">    <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span><span class="string">&quot;html&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;selector&quot;</span><span class="punctuation">:</span><span class="string">&quot;#pdf&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;attribute&quot;</span><span class="punctuation">:</span><span class="string">&quot;src&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;automatic&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span> <span class="comment">//设置为true，自动从Sci-Hub下载用Connector扩展保存到本地的文献PDF。</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="（3）Zotero-Connector（浏览器扩展，直接在网页中下载文献到Zotero）"><a href="#（3）Zotero-Connector（浏览器扩展，直接在网页中下载文献到Zotero）" class="headerlink" title="（3）Zotero Connector（浏览器扩展，直接在网页中下载文献到Zotero）"></a>（3）Zotero Connector（浏览器扩展，直接在网页中下载文献到Zotero）</h4><blockquote>
<p>Chrome 应用商店搜索下载</p>
</blockquote>
<h2 id="二、插件推荐"><a href="#二、插件推荐" class="headerlink" title="二、插件推荐"></a>二、插件推荐</h2><h4 id="（1）ZotFile插件（根据条目内容自动重命名文件）"><a href="#（1）ZotFile插件（根据条目内容自动重命名文件）" class="headerlink" title="（1）ZotFile插件（根据条目内容自动重命名文件）"></a>（1）ZotFile插件（根据条目内容自动重命名文件）</h4><ul>
<li>从<a href="https://github.com/jlegewie/zotfile">GitHub - zotfile</a>下载安装 → 插件设置 → 一般设置：一是文献下载的临时存储位置<code>D:\OneDrive\Zotero\temp</code>；二是重命名后文件的实际存储位置<code>D:\OneDrive\Zotero\Storage</code>，定义的子文件夹<code>/%c</code></li>
<li>插件设置 → 重命名规则 → 只使用以下文件类型 → 添加<code>,caj</code></li>
</ul>
<h4 id="（2）Zotero-translators插件（中文网页抓取翻译器）"><a href="#（2）Zotero-translators插件（中文网页抓取翻译器）" class="headerlink" title="（2）Zotero translators插件（中文网页抓取翻译器）"></a>（2）Zotero translators插件（中文网页抓取翻译器）</h4><ul>
<li>从<a href="https://github.com/l0o0/translators_CN">GitHub - translators</a>下载压缩包 → 打开Zotero编辑 → 首选项 → 高级 → 打开数据文件夹 → 将解压文件复制到translators目录下，提示有重复的文件选择替换。</li>
<li>右击Connector插件 → 扩展选项 → Advanced → Update Translators（可多点击几次保证更新完成）。</li>
</ul>
<h4 id="（3）Zotero-IF插件（显示SCI期刊论文的中科院分区和影响因子）"><a href="#（3）Zotero-IF插件（显示SCI期刊论文的中科院分区和影响因子）" class="headerlink" title="（3）Zotero IF插件（显示SCI期刊论文的中科院分区和影响因子）"></a>（3）Zotero IF插件（显示SCI期刊论文的中科院分区和影响因子）</h4><ul>
<li>从<a href="https://github.com/qnscholar/zotero-if">GitHub - Zotero IF</a>下载安装包 → Zotero菜单栏工具 → 附加组件 → 点击右上角小齿轮 → 然后点击<code>Install add-on from file…</code> → 选择 zotero-if.xpi 插件，完成安装并重启Zotero。</li>
<li>使用指南：选中要查询的论文（可多选） → 右击<code>Update If(s)</code>即可查看最新数据。</li>
</ul>
<h4 id="（4）Jasminum插件（知网元数据拉取、知网文章PDF下载并标记目录）"><a href="#（4）Jasminum插件（知网元数据拉取、知网文章PDF下载并标记目录）" class="headerlink" title="（4）Jasminum插件（知网元数据拉取、知网文章PDF下载并标记目录）"></a>（4）Jasminum插件（知网元数据拉取、知网文章PDF下载并标记目录）</h4><ul>
<li>从<a href="https://github.com/l0o0/jasminum">GitHub - Jasminum</a>下载安装 → 编辑 → 首选项 → 茉莉花</li>
</ul>
<h5 id="（5）delitemwithatt插件（删除条目或分类的同时将链接的附件一起删除，导出附件）"><a href="#（5）delitemwithatt插件（删除条目或分类的同时将链接的附件一起删除，导出附件）" class="headerlink" title="（5）delitemwithatt插件（删除条目或分类的同时将链接的附件一起删除，导出附件）"></a>（5）delitemwithatt插件（删除条目或分类的同时将链接的附件一起删除，导出附件）</h5><ul>
<li>从<a href="https://github.com/redleafnew/delitemwithatt">GitHub -delitemwithatt</a>下载安装</li>
</ul>
<h4 id="（6）Zotero-PDF-Translate插件（内置多种翻译引擎，PDF可划线翻译）"><a href="#（6）Zotero-PDF-Translate插件（内置多种翻译引擎，PDF可划线翻译）" class="headerlink" title="（6）Zotero PDF Translate插件（内置多种翻译引擎，PDF可划线翻译）"></a>（6）Zotero PDF Translate插件（内置多种翻译引擎，PDF可划线翻译）</h4><ul>
<li>从<a href="https://github.com/windingwind/zotero-pdf-translate">GitHub - zotero-pdf-translate</a>下载安装</li>
</ul>
<h4 id="（7）Zotero-DOI-Manager插件（自动获取期刊文章的doi）"><a href="#（7）Zotero-DOI-Manager插件（自动获取期刊文章的doi）" class="headerlink" title="（7）Zotero DOI Manager插件（自动获取期刊文章的doi）"></a>（7）Zotero DOI Manager插件（自动获取期刊文章的doi）</h4><ul>
<li>从<a href="https://github.com/bwiernik/zotero-shortdoi">GitHub - zotero-shortdoi</a>下载安装</li>
</ul>
<h5 id="（8）Zotero-reference插件（自动获取参考文献）"><a href="#（8）Zotero-reference插件（自动获取参考文献）" class="headerlink" title="（8）Zotero reference插件（自动获取参考文献）"></a>（8）Zotero reference插件（自动获取参考文献）</h5><ul>
<li>从<a href="https://github.com/MuiseDestiny/zotero-reference">GitHub - zotero-reference</a>下载安装</li>
</ul>
<h4 id="（9）Zotero-PDF-Background（更改背景颜色）"><a href="#（9）Zotero-PDF-Background（更改背景颜色）" class="headerlink" title="（9）Zotero PDF Background（更改背景颜色）"></a>（9）Zotero PDF Background（更改背景颜色）</h4><ul>
<li>从<a href="https://github.com/q77190858/zotero-pdf-background">GitHub - zotero-pdf-background</a>下载安装</li>
</ul>
<h4 id="（10）zotero-better-notes（从批注中提取笔记、基于知识图谱和思维导图进行管理）"><a href="#（10）zotero-better-notes（从批注中提取笔记、基于知识图谱和思维导图进行管理）" class="headerlink" title="（10）zotero-better-notes（从批注中提取笔记、基于知识图谱和思维导图进行管理）"></a>（10）zotero-better-notes（从批注中提取笔记、基于知识图谱和思维导图进行管理）</h4><ul>
<li>从<a href="https://github.com/windingwind/zotero-better-notes">GitHub - zotero-better-notes</a>下载安装</li>
</ul>
<h4 id="（11）zotero-style（主题颜色、添加效果）"><a href="#（11）zotero-style（主题颜色、添加效果）" class="headerlink" title="（11）zotero-style（主题颜色、添加效果）"></a>（11）zotero-style（主题颜色、添加效果）</h4><ul>
<li>从<a href="https://github.com/MuiseDestiny/zotero-style">GitHub - zotero-style</a>下载安装</li>
</ul>
<h4 id="（12）zotero-tag（添加标签）"><a href="#（12）zotero-tag（添加标签）" class="headerlink" title="（12）zotero-tag（添加标签）"></a>（12）zotero-tag（添加标签）</h4><ul>
<li>从<a href="https://github.com/windingwind/zotero-actions-tags">GitHub - zotero-actions-tags</a>下载安装</li>
</ul>
]]></content>
      <categories>
        <category>文献管理</category>
      </categories>
      <tags>
        <tag>文献管理</tag>
        <tag>Zotero</tag>
      </tags>
  </entry>
  <entry>
    <title>深层网络杂谈</title>
    <url>/archives/bf50e887.html</url>
    <content><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>深层网络是万维网的一部分，其内容不被标准网络搜索引擎程序索引，与任何人都可以使用互联网访问的“表层网络”形成鲜明对比。</p>
<blockquote>
<p>包括：网络邮件、网上银行、云存储、限制访问的社交媒体页面和配置文件以及需要注册、付费才能查看的内容。</p>
</blockquote>
<p>深层网络可以通过直连URL或IP地址访问，一般需要输入账号或其它安全信息才能访问有效内容。计算机科学家Michael K. Bergman于2001年发明了该术语作为搜索索引术语。</p>
<h3 id="二、阻止网页被传统搜索引擎索引的方法"><a href="#二、阻止网页被传统搜索引擎索引的方法" class="headerlink" title="二、阻止网页被传统搜索引擎索引的方法"></a>二、阻止网页被传统搜索引擎索引的方法</h3><blockquote>
<p>1.上下文网络：内容根据访问条件，上下文而异的页面（如客户端IP地址范围）。</p>
</blockquote>
<blockquote>
<p>2.动态内容：动态页面，响应时根据提交的查询返回页面；或仅通过表单访问，特别是在使用开放域输入元素时（如文本字段）；如果缺乏专业知识，就很难驾驭该领域。</p>
</blockquote>
<blockquote>
<p>3.限制访问内容：以技术手段限制对其页面进行访问的网站（如使用机器人验证码或无存储指令，禁止搜索引擎浏览它们并创建缓存副本）。一般这类网站都有内部的搜索引擎供用户使用。</p>
</blockquote>
<blockquote>
<p>4.非HTML&#x2F;文本内容：以多媒体文件（图像或视频）或搜索引擎无法识别的特定文件格式编码的文本内容。</p>
</blockquote>
<blockquote>
<p>5.私人网站：需要注册和登录的网站（受密码保护的资源）。</p>
</blockquote>
<blockquote>
<p>6.脚本内容：只能通过JavaScript生成的链接访问的页面，以及通过Flash或Ajax从Web服务器动态下载的内容。</p>
</blockquote>
<blockquote>
<p>7.软件：某些内容被故意隐藏在常规互联网中，只能通过特殊软件访问。</p>
</blockquote>
<blockquote>
<p>8.未链接内容：未与其他网页链接的页面，用来防止爬虫软件爬取该内容。这种反爬内容，一般称为内链接页面。</p>
</blockquote>
<blockquote>
<p>9.网络档案：诸如Wayback Machine之类的网络档案服务，使用户能够跨时间查看网页存档，包括无法访问且未被传统搜索引擎索引的网站。</p>
</blockquote>
<blockquote>
<p>注：由于计算机漏洞，某些隐藏站点可能会被间接访问。</p>
</blockquote>
<h3 id="三、网络搜索技术延展"><a href="#三、网络搜索技术延展" class="headerlink" title="三、网络搜索技术延展"></a>三、网络搜索技术延展</h3><p>进入互联网时代后，为了方便查看网络上的内容，搜索引擎使用网络爬虫，通过已知的协议虚拟端口号跟踪超链接。该技术非常适合发现表层网络上的内容，但无法有效地发现深层网络内容。</p>
<blockquote>
<p>例如，由于可能的查询数量不确定，这些爬虫程序不会尝试查找作为数据库查询结果的动态页面（可以通过提供查询结果的链接来部分克服该问题）。</p>
</blockquote>
<p>全球大量研究人员一直在探索如何以自动方式抓取深层网络，包括只能通过特殊软件访问的内容。</p>
<blockquote>
<p>2001年，Sriram Raghavan和Hector Garcia-Molina（斯坦福大学计算机科学系）提出了一种隐藏网络爬虫的架构模型，该爬虫利用“用户提供的或从查询接口收集的重要术语”进行查询Web表单并抓取深网内容。</p>
</blockquote>
<blockquote>
<p>加州大学洛杉矶分校的Alexandros Ntoulas、Petros Zerfos和Junghoo Cho创建了一个隐藏网络爬虫，可以自动生成有意义的查询来针对搜索表单发出的问题。几种表单查询语言已经提出，除了发出查询之外，还允许从结果页面中提取结构化数据。</p>
</blockquote>
<blockquote>
<p>另一个项目是 DeepPeep，由美国国家科学基金会资助，该项目基于新颖的聚焦爬虫技术收集不同领域的隐藏网络资源（网络表单）。</p>
</blockquote>
<p>商业搜索引擎也一直探索抓取深层网络的替代方法。站点地图协议（Google于2005年发布）和OAI-PMH是允许搜索引擎和其它相关方发现特定Web服务器上的深层网络资源的机制。这两种机制都允许Web服务器通告托管的可访问链接，从而发现未链接到表面Web的资源。Google的深层网络显示系统计算每个HTML表单的提交内容，并将生成的HTML页面添加到Google搜索引擎的索引中。</p>
]]></content>
      <categories>
        <category>深层网络</category>
      </categories>
      <tags>
        <tag>深层网络</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记软件—Obsidian基础设置与插件推荐</title>
    <url>/archives/e665a994.html</url>
    <content><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>目前市面上的笔记软件多种多样，瑞士军刀美称的Bear，模块式笔记Notion，所见即所得的Typora，以及各类云笔记。而这款个人使用者永久免费，基于Markdown文件的本地知识管理软件更得我欢心——Obsidian。<br>2020年的末尾，全球涌现出许多带有双向链功能的笔记软件，比如 Roam Research 、 Logseq 、 Obsidian 等等。网状的知识结构，更符合实际需要。现实里，我们无法像折叠衣物放入收纳柜一样，为某个知识点在大脑中寻找对应的格子塞进去，因为大脑中的知识并不是简单的分类，更多的是一种关联性汇总。带有双向链功能的笔记优势在于能生成一个直观的知识图谱，我们可以将它当做大脑的延伸，用来辅助思考。</p>
<blockquote>
<p>Obsidian官网：<code>https://obsidian.md/</code></p>
</blockquote>
<h2 id="一、Obsidian基础设置"><a href="#一、Obsidian基础设置" class="headerlink" title="一、Obsidian基础设置"></a>一、Obsidian基础设置</h2><h4 id="（1）设置中文"><a href="#（1）设置中文" class="headerlink" title="（1）设置中文"></a>（1）设置中文</h4><blockquote>
<p>设置 → 关于 → 语言 → 更改界面语言为：简体中文</p>
</blockquote>
<h4 id="（2）更换主题"><a href="#（2）更换主题" class="headerlink" title="（2）更换主题"></a>（2）更换主题</h4><blockquote>
<p>设置 → 关于 → 外观 → 下载新的主题：Things</p>
</blockquote>
<h4 id="（3）个性化设置"><a href="#（3）个性化设置" class="headerlink" title="（3）个性化设置"></a>（3）个性化设置</h4><blockquote>
<p>设置 → 文件与链接 → 关闭使用wiki链接：该设置会导致文件在其它MD软件上无法预览<br>设置 → 文件与链接 → 新建笔记的存放位置：仓库根目录<br>设置 → 文件与链接 → 内部链接类型：基于当前笔记的相对路径<br>设置 → 文件与链接 → 附件默认存放路径：指定的附件文件夹（文件夹名：source）<br>设置 → 核心插件 → 启用：<code>日记、Markdown格式转换器</code>功能。</p>
</blockquote>
<h4 id="（4）快捷键设置"><a href="#（4）快捷键设置" class="headerlink" title="（4）快捷键设置"></a>（4）快捷键设置</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 默认快捷键</span></span><br><span class="line"><span class="number">1.</span> 文本复制：纯文本复制                     快捷键 Ctrl + Shift + V</span><br><span class="line"><span class="number">2.</span> 字体加粗：**需要加粗的文字**              快捷键 Ctrl + B</span><br><span class="line"><span class="number">3.</span> 字体倾斜：*需要斜体的文字*                快捷键 Ctrl + I</span><br><span class="line"><span class="number">4.</span> 建超链接：<span class="punctuation">[</span>链接显示名<span class="punctuation">]</span>.(网址)             快捷键 Ctrl + K</span><br><span class="line"></span><br><span class="line"><span class="comment">// 手动设置热键</span></span><br><span class="line"><span class="number">5.</span>  打开设置                               快捷键 Ctrl + `</span><br><span class="line"><span class="number">6.</span>  打开命令面板                           快捷键 Shift + Ctrl + P</span><br><span class="line"><span class="number">7.</span>  新建笔记                               快捷键 Ctrl + N</span><br><span class="line"><span class="number">8.</span>  在右侧新建笔记                         快捷键 Shift + Ctrl + N</span><br><span class="line"><span class="number">9.</span>  打开/创建今天的日记                     快捷键 Ctrl + O</span><br><span class="line"><span class="number">10.</span> 查看关系图谱                           快捷键 Ctrl + G</span><br><span class="line"><span class="number">11.</span> 插入代码块                             快捷键 Ctrl + /</span><br><span class="line"><span class="number">12.</span> 增加文档属性                           快捷键 Ctrl + ;</span><br><span class="line"><span class="number">13.</span> 切换列表/待办事项                       快捷键 Ctrl + D</span><br><span class="line"><span class="number">14.</span> 删除段落                               快捷键 Ctrl + Y</span><br><span class="line"><span class="number">15.</span> 保存当前文件                           快捷键 Ctrl + S</span><br><span class="line"><span class="number">16.</span> 在所有文件中搜索                        快捷键 Shift + Ctrl + F</span><br><span class="line"><span class="number">17.</span> 当前笔记中查找                          快捷键 Ctrl + F</span><br><span class="line"><span class="number">18.</span> 当前笔记中替换                          快捷键 Ctrl + H</span><br><span class="line"><span class="number">19.</span> 与上一行互换                            快捷键 Ctrl + ↑</span><br><span class="line"><span class="number">20.</span> 与下一行互换                            快捷键 Ctrl + ↓</span><br><span class="line"><span class="number">21.</span> 左右分屏                                快捷键 Ctrl + →</span><br><span class="line"><span class="number">22.</span> 上下分屏                                快捷键 Ctrl + ←</span><br><span class="line"><span class="number">23.</span> 折叠                                    快捷键 Ctrl + <span class="punctuation">[</span></span><br><span class="line"><span class="number">24.</span> 展开                                    快捷键 Ctrl + <span class="punctuation">]</span></span><br><span class="line"><span class="number">25.</span> Kanban插件<span class="punctuation">:</span>创建新看板                    快捷键 Ctrl + L</span><br></pre></td></tr></table></figure>

<h2 id="二、第三方插件推荐"><a href="#二、第三方插件推荐" class="headerlink" title="二、第三方插件推荐"></a>二、第三方插件推荐</h2><h4 id="1-主界面添加其它按钮"><a href="#1-主界面添加其它按钮" class="headerlink" title="1.主界面添加其它按钮"></a>1.主界面添加其它按钮</h4><blockquote>
<p>Commander</p>
</blockquote>
<h4 id="2-文件图标库"><a href="#2-文件图标库" class="headerlink" title="2.文件图标库"></a>2.文件图标库</h4><blockquote>
<p>Icons</p>
</blockquote>
<h4 id="3-任务管理-每日计划"><a href="#3-任务管理-每日计划" class="headerlink" title="3.任务管理&#x2F;每日计划"></a>3.任务管理&#x2F;每日计划</h4><blockquote>
<p>Kanban</p>
</blockquote>
<h4 id="4-类flomo，记录瞬间灵感"><a href="#4-类flomo，记录瞬间灵感" class="headerlink" title="4.类flomo，记录瞬间灵感"></a>4.类flomo，记录瞬间灵感</h4><blockquote>
<p>Obsidian Memos</p>
</blockquote>
<h4 id="5-查看最近打开的文件"><a href="#5-查看最近打开的文件" class="headerlink" title="5.查看最近打开的文件"></a>5.查看最近打开的文件</h4><blockquote>
<p>Recent Files</p>
</blockquote>
<h4 id="6-在Obsidian内直接打开网页"><a href="#6-在Obsidian内直接打开网页" class="headerlink" title="6.在Obsidian内直接打开网页"></a>6.在Obsidian内直接打开网页</h4><blockquote>
<p>Surfing</p>
</blockquote>
<h4 id="7-将Excel格式转为Markdown"><a href="#7-将Excel格式转为Markdown" class="headerlink" title="7.将Excel格式转为Markdown"></a>7.将Excel格式转为Markdown</h4><blockquote>
<p>Excel to Markdown Table</p>
</blockquote>
<h4 id="8-外部链接自动改名插入"><a href="#8-外部链接自动改名插入" class="headerlink" title="8.外部链接自动改名插入"></a>8.外部链接自动改名插入</h4><blockquote>
<p>Auto Link Title</p>
</blockquote>
<h4 id="9-制作思维导图"><a href="#9-制作思维导图" class="headerlink" title="9.制作思维导图"></a>9.制作思维导图</h4><blockquote>
<p>Mind Map</p>
</blockquote>
<h4 id="10-统计文件夹下的文件数量"><a href="#10-统计文件夹下的文件数量" class="headerlink" title="10.统计文件夹下的文件数量"></a>10.统计文件夹下的文件数量</h4><blockquote>
<p>File Explorer Note Count</p>
</blockquote>
<h4 id="11-实时显示所选文本的字数"><a href="#11-实时显示所选文本的字数" class="headerlink" title="11.实时显示所选文本的字数"></a>11.实时显示所选文本的字数</h4><blockquote>
<p>Better Word Count</p>
</blockquote>
]]></content>
      <categories>
        <category>笔记软件</category>
      </categories>
      <tags>
        <tag>笔记软件</tag>
        <tag>Obsidian</tag>
      </tags>
  </entry>
  <entry>
    <title>知识管理—Markdown常用语法</title>
    <url>/archives/2722ebeb.html</url>
    <content><![CDATA[<h4 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure>
<h4 id="二、标题"><a href="#二、标题" class="headerlink" title="二、标题"></a>二、标题</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 段落没有特殊的格式，直接编写文字就好</span></span><br><span class="line"># 这是段落</span><br><span class="line"><span class="comment">// 段落后面如果超过一个空白字符（空格、换行符等）就会生成新的段落</span></span><br><span class="line"># 这是段落`空格/回车键`</span><br><span class="line"># 这是另一行段落</span><br></pre></td></tr></table></figure>
<h4 id="三、字体"><a href="#三、字体" class="headerlink" title="三、字体"></a>三、字体</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">**粗体文本**</span><br><span class="line">_斜体文本_</span><br><span class="line">**_粗斜体文本_**</span><br><span class="line">~~带删除线的文本~~</span><br><span class="line">&lt;u&gt;带下划线的文本&lt;/u&gt;            # 通过HTML的&lt;u&gt;标签来实现</span><br><span class="line">&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;C&lt;/kbd&gt;   # Ctrl + C</span><br><span class="line"><span class="punctuation">&#123;</span>喜大普奔|xi da pu ben<span class="punctuation">&#125;</span>        # 注音符号</span><br><span class="line"><span class="punctuation">[</span>^脚注文本<span class="punctuation">]</span>                   # 脚注是可选功能，并非所有支持脚注的解析器都支持行内脚注</span><br></pre></td></tr></table></figure>
<h4 id="四、列表"><a href="#四、列表" class="headerlink" title="四、列表"></a>四、列表</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 无序列表，使用 - 带空格</span></span><br><span class="line">- 第一项</span><br><span class="line">- 第二项</span><br><span class="line">- 第三项</span><br><span class="line"><span class="comment">// 有序列表，使用数字并加上 . 号来表示</span></span><br><span class="line"><span class="number">1.</span> 第一项</span><br><span class="line"><span class="number">2.</span> 第二项</span><br><span class="line"><span class="number">3.</span> 第三项</span><br><span class="line"><span class="comment">// 列表嵌套</span></span><br><span class="line"><span class="number">1.</span> 第一项：</span><br><span class="line">    - 第一项嵌套的第一个元素</span><br><span class="line">    - 第一项嵌套的第二个元素</span><br><span class="line"><span class="number">2.</span> 第二项：</span><br><span class="line">    - 第二项嵌套的第一个元素</span><br><span class="line">    - 第二项嵌套的第二个元素</span><br></pre></td></tr></table></figure>
<h4 id="五、区块"><a href="#五、区块" class="headerlink" title="五、区块"></a>五、区块</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 区块引用</span></span><br><span class="line">&gt; 标题</span><br><span class="line">&gt; 简介</span><br><span class="line"><span class="comment">// 区块嵌套</span></span><br><span class="line">&gt; 最外层</span><br><span class="line">&gt; &gt; 第一层嵌套</span><br><span class="line">&gt; &gt; &gt; 第二层嵌套</span><br></pre></td></tr></table></figure>
<h4 id="六、代码"><a href="#六、代码" class="headerlink" title="六、代码"></a>六、代码</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"># 第一种方法：代码区块使用<span class="number">4</span>个空格或者一个制表符（Tab键）</span><br><span class="line"># 第二种方法：可以用 ``` 包裹代码，并指定一种语言（也可以不指定）</span><br></pre></td></tr></table></figure>
<h4 id="七、超链接"><a href="#七、超链接" class="headerlink" title="七、超链接"></a>七、超链接</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 链接到网站</span></span><br><span class="line"><span class="punctuation">[</span>链接名称<span class="punctuation">]</span>(链接地址)  # 如<span class="punctuation">:</span><span class="punctuation">[</span>百度以下<span class="punctuation">]</span>(https<span class="punctuation">:</span><span class="comment">//www.baidu.com)</span></span><br><span class="line"><span class="comment">// 无标签链接</span></span><br><span class="line">&lt;链接地址&gt;           # 如<span class="punctuation">:</span>&lt;https<span class="punctuation">:</span><span class="comment">//www.baidu.com&gt;</span></span><br><span class="line"><span class="comment">// 无标签邮箱链接</span></span><br><span class="line">&lt;<span class="number">123456</span>@qq.com&gt;</span><br><span class="line"><span class="comment">// 其他元素配合</span></span><br><span class="line"><span class="punctuation">[</span>**粗体链接**<span class="punctuation">]</span>(链接地址)  </span><br><span class="line"><span class="punctuation">[</span>_斜体链接_<span class="punctuation">]</span>(./Md页面链接地址)  </span><br><span class="line"><span class="punctuation">[</span>`代码链接`<span class="punctuation">]</span>(./Md页面中的代码块地址)</span><br></pre></td></tr></table></figure>
<h4 id="八、图片"><a href="#八、图片" class="headerlink" title="八、图片"></a>八、图片</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 图片语法格式</span></span><br><span class="line">!<span class="punctuation">[</span>图片简介<span class="punctuation">]</span>(图片地址) # 如<span class="punctuation">:</span><span class="punctuation">[</span>RUNOOB图标<span class="punctuation">]</span>(http<span class="punctuation">:</span><span class="comment">//static.runoob.com/images/runoob-logo.png)</span></span><br><span class="line"><span class="comment">// 横屏滑动幻灯片</span></span><br><span class="line">&lt;!<span class="punctuation">[</span>图片简介<span class="punctuation">]</span>(图片地址)<span class="punctuation">,</span>!<span class="punctuation">[</span>图片简介<span class="punctuation">]</span>(图片地址)&gt;</span><br><span class="line"><span class="comment">// Markdown不能设置图片的高度与宽度，可使用HTML的&lt;img&gt;标签</span></span><br><span class="line">&lt;img src=<span class="string">&quot;http://static.runoob.com/images/runoob-logo.png&quot;</span> width=<span class="string">&quot;50%&quot;</span>&gt;</span><br></pre></td></tr></table></figure>
<h4 id="九、表格"><a href="#九、表格" class="headerlink" title="九、表格"></a>九、表格</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 表格使用竖线(|)区分每列，在表格头和表格体之间使用三个减号(-)做分隔</span></span><br><span class="line">|第一列|第二列|第三列|</span><br><span class="line">|---|---|---|</span><br><span class="line">|第一行第一列|第一行第二列|第一行第三列|</span><br><span class="line">|第二行第一列|第二行第二列|第二行第三列|</span><br><span class="line"><span class="comment">// 设置表格对齐格式</span></span><br><span class="line">|第一列|第二列|第三列|</span><br><span class="line">|<span class="punctuation">:</span>---|<span class="punctuation">:</span>---<span class="punctuation">:</span>|---<span class="punctuation">:</span>|</span><br><span class="line">|左对齐|居中对齐|右对齐|</span><br><span class="line"><span class="comment">// 在表格中使用其他元素</span></span><br><span class="line">|第一列|第二列|  </span><br><span class="line">|<span class="punctuation">:</span>---<span class="punctuation">:</span>|<span class="punctuation">:</span>---<span class="punctuation">:</span>|  </span><br><span class="line">|**粗体**|_斜体_|  </span><br><span class="line">|`行内代码`|<span class="punctuation">[</span>链接名称<span class="punctuation">]</span>(链接地址)|  </span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>知识管理</category>
      </categories>
      <tags>
        <tag>知识管理</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>网络代理杂谈</title>
    <url>/archives/d5decc14.html</url>
    <content><![CDATA[<h3 id="一、网络爬虫使用代理"><a href="#一、网络爬虫使用代理" class="headerlink" title="一、网络爬虫使用代理"></a>一、网络爬虫使用代理</h3><p>网络代理常用于Python爬虫，爬虫程序通常会以高并发多线程的方式运行，所需爬取的任务量大，会对站点服务器造成很大的负载，需要使用代理IP帮助完成任务，否则很容易被所爬取的站点服务器发现，限制其访问。</p>
<blockquote>
<p>爬虫使用网络代理的优点：</p>
<ul>
<li>可以提高爬取速度和效率，代理IP服务器位于互联网的核心节点，它们具有更快的数据传输速度和更低的延迟。</li>
<li>可以规避IP在单位时间的请求次数，防止出现“IP请求过于频繁”或“403”等错误。</li>
</ul>
</blockquote>
<h3 id="二、双重代理和多重代理"><a href="#二、双重代理和多重代理" class="headerlink" title="二、双重代理和多重代理"></a>二、双重代理和多重代理</h3><blockquote>
<p>双重代理指代理软件再套一层中转代理（如VPS反代CF家的中转服务器）。<br>多重代理就是在双重代理的基础上“俄罗斯套娃”。</p>
</blockquote>
<h3 id="三、共享代理"><a href="#三、共享代理" class="headerlink" title="三、共享代理"></a>三、共享代理</h3><blockquote>
<p>多数代理软件都会提供一个TCP的代理端口（监听端口）。主要问题在于代理软件的监听端口基本绑定在本机的127.0.0.1上。代理只能被本机软件使用，外部主机的软件无法连接到该端口。</p>
</blockquote>
<h4 id="1-共享代理——本机方案"><a href="#1-共享代理——本机方案" class="headerlink" title="1.共享代理——本机方案"></a>1.共享代理——本机方案</h4><p>最简单的解决方案，就是修改代理软件的配置，把监听端口绑定到0.0.0.0上。<br>其次是“端口转发”，也称“端口映射”，主要弥补部分代理软件，无法修改配置文件的缺陷。</p>
<blockquote>
<p>以Windows系统自带的netsh举例：</p>
<ul>
<li>以管理员身份登录，进入“控制面板”下面的“网络连接”</li>
<li>选中本地连接，点右键，在右键菜单选“属性”</li>
<li>弹出“属性”对话框，点“安装”按钮</li>
<li>弹出“选择网络组件类型”对话框，选“协议”，再点“添加”按钮</li>
<li>在弹出的对话框中选“IPv6”，点“确定”即可</li>
</ul>
</blockquote>
<h4 id="2-共享代理——虚拟机方案"><a href="#2-共享代理——虚拟机方案" class="headerlink" title="2.共享代理——虚拟机方案"></a>2.共享代理——虚拟机方案</h4><p>单独开一个虚拟机（Guest OS），专门用来安装代理软件。在该虚拟机中，除了代理软件，不安装其它任何东西。</p>
<blockquote>
<p>该方案的好处在于：</p>
<ul>
<li>即使某些代理软件存在漏洞，也不会威胁到真实系统（Host OS）的安全。</li>
<li>虚拟机之间可以进行网络隔离，确保本机的桌面程序总是经过代理联网，防止公网IP地址暴露。</li>
</ul>
</blockquote>
<p>首先，参照前面介绍的“端口转发”方法，再配置虚拟机的网卡模式，两种模式任选其一：</p>
<blockquote>
<p>NAT模式</p>
<ul>
<li>添加“端口映射”，把真实系统（Host OS）上的某个端口映射到虚拟机（Guest OS）的NAT网卡上的另一个端口</li>
</ul>
</blockquote>
<blockquote>
<p>Bridge模式</p>
<ul>
<li>无需任何额外设置，该模式的虚拟网卡，对于真实系统（Host OS）之外的网络是可见的，因此其它主机可以直接连接该虚拟机上的代理端口。</li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>网络代理</category>
      </categories>
      <tags>
        <tag>网络代理</tag>
      </tags>
  </entry>
</search>
